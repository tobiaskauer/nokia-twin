{"remainingRequest":"/Users/tk/GitHub/nokia-twin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokia-twin/node_modules/vue-bootstrap-typeahead/src/components/VueBootstrapTypeaheadList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/nokia-twin/node_modules/vue-bootstrap-typeahead/src/components/VueBootstrapTypeaheadList.vue","mtime":1536270684000},{"path":"/Users/tk/GitHub/nokia-twin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVCb290c3RyYXBUeXBlYWhlYWRMaXN0SXRlbSBmcm9tICcuL1Z1ZUJvb3RzdHJhcFR5cGVhaGVhZExpc3RJdGVtLnZ1ZScKCmZ1bmN0aW9uIHNhbml0aXplKHRleHQpIHsKICByZXR1cm4gdGV4dC5yZXBsYWNlKC88L2csICcmbHQ7JykucmVwbGFjZSgvPi9nLCAnJmd0OycpCn0KCmZ1bmN0aW9uIGVzY2FwZVJlZ0V4cChzdHIpIHsKICByZXR1cm4gc3RyLnJlcGxhY2UoL1suKis/XiR7fSgpfFtcXVxcXS9nLCAnXFwkJicpCn0KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVnVlQm9vdHN0cmFwVHlwZWFoZWFkTGlzdCcsCgogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZUJvb3RzdHJhcFR5cGVhaGVhZExpc3RJdGVtCiAgfSwKCiAgcHJvcHM6IHsKICAgIGRhdGE6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB2YWxpZGF0b3I6IGQgPT4gZCBpbnN0YW5jZW9mIEFycmF5CiAgICB9LAogICAgcXVlcnk6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIGJhY2tncm91bmRWYXJpYW50OiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIHRleHRWYXJpYW50OiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIG1heE1hdGNoZXM6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxMAogICAgfSwKICAgIG1pbk1hdGNoaW5nQ2hhcnM6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAyCiAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGhpZ2hsaWdodCgpIHsKICAgICAgcmV0dXJuICh0ZXh0KSA9PiB7CiAgICAgICAgdGV4dCA9IHNhbml0aXplKHRleHQpCiAgICAgICAgaWYgKHRoaXMucXVlcnkubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICByZXR1cm4gdGV4dAogICAgICAgIH0KICAgICAgICBjb25zdCByZSA9IG5ldyBSZWdFeHAodGhpcy5lc2NhcGVkUXVlcnksICdnaScpCgogICAgICAgIHJldHVybiB0ZXh0LnJlcGxhY2UocmUsIGA8c3Ryb25nPiQmPC9zdHJvbmc+YCkKICAgICAgfQogICAgfSwKCiAgICBlc2NhcGVkUXVlcnkoKSB7CiAgICAgIHJldHVybiBlc2NhcGVSZWdFeHAoc2FuaXRpemUodGhpcy5xdWVyeSkpCiAgICB9LAoKICAgIG1hdGNoZWRJdGVtcygpIHsKICAgICAgaWYgKHRoaXMucXVlcnkubGVuZ3RoID09PSAwIHx8IHRoaXMucXVlcnkubGVuZ3RoIDwgdGhpcy5taW5NYXRjaGluZ0NoYXJzKSB7CiAgICAgICAgcmV0dXJuIFtdCiAgICAgIH0KCiAgICAgIGNvbnN0IHJlID0gbmV3IFJlZ0V4cCh0aGlzLmVzY2FwZWRRdWVyeSwgJ2dpJykKCiAgICAgIC8vIEZpbHRlciwgc29ydCwgYW5kIGNvbmNhdAogICAgICByZXR1cm4gdGhpcy5kYXRhCiAgICAgICAgLmZpbHRlcihpID0+IGkudGV4dC5tYXRjaChyZSkgIT09IG51bGwpCiAgICAgICAgLnNvcnQoKGEsIGIpID0+IHsKICAgICAgICAgIGNvbnN0IGFJbmRleCA9IGEudGV4dC5pbmRleE9mKGEudGV4dC5tYXRjaChyZSlbMF0pCiAgICAgICAgICBjb25zdCBiSW5kZXggPSBiLnRleHQuaW5kZXhPZihiLnRleHQubWF0Y2gocmUpWzBdKQoKICAgICAgICAgIGlmIChhSW5kZXggPCBiSW5kZXgpIHsgcmV0dXJuIC0xIH0KICAgICAgICAgIGlmIChhSW5kZXggPiBiSW5kZXgpIHsgcmV0dXJuIDEgfQogICAgICAgICAgcmV0dXJuIDAKICAgICAgICB9KS5zbGljZSgwLCB0aGlzLm1heE1hdGNoZXMpCiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgaGFuZGxlSGl0KGl0ZW0sIGV2dCkgewogICAgICB0aGlzLiRlbWl0KCdoaXQnLCBpdGVtKQogICAgICBldnQucHJldmVudERlZmF1bHQoKQogICAgfQogIH0KfQo="},{"version":3,"sources":["VueBootstrapTypeaheadList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VueBootstrapTypeaheadList.vue","sourceRoot":"node_modules/vue-bootstrap-typeahead/src/components","sourcesContent":["<template>\n  <div class=\"list-group shadow\">\n    <vue-bootstrap-typeahead-list-item\n      v-for=\"(item, id) in matchedItems\" :key=\"id\"\n      :data=\"item.data\"\n      :html-text=\"highlight(item.text)\"\n      :background-variant=\"backgroundVariant\"\n      :text-variant=\"textVariant\"\n      @click.native=\"handleHit(item, $event)\"\n    >\n      <template v-if=\"$scopedSlots.suggestion\" slot=\"suggestion\" slot-scope=\"{ data, htmlText }\">\n        <slot name=\"suggestion\" v-bind=\"{ data, htmlText }\" />\n      </template>\n    </vue-bootstrap-typeahead-list-item>\n  </div>\n</template>\n\n<script>\nimport VueBootstrapTypeaheadListItem from './VueBootstrapTypeaheadListItem.vue'\n\nfunction sanitize(text) {\n  return text.replace(/</g, '&lt;').replace(/>/g, '&gt;')\n}\n\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n}\n\nexport default {\n  name: 'VueBootstrapTypeaheadList',\n\n  components: {\n    VueBootstrapTypeaheadListItem\n  },\n\n  props: {\n    data: {\n      type: Array,\n      required: true,\n      validator: d => d instanceof Array\n    },\n    query: {\n      type: String,\n      default: ''\n    },\n    backgroundVariant: {\n      type: String\n    },\n    textVariant: {\n      type: String\n    },\n    maxMatches: {\n      type: Number,\n      default: 10\n    },\n    minMatchingChars: {\n      type: Number,\n      default: 2\n    }\n  },\n\n  computed: {\n    highlight() {\n      return (text) => {\n        text = sanitize(text)\n        if (this.query.length === 0) {\n          return text\n        }\n        const re = new RegExp(this.escapedQuery, 'gi')\n\n        return text.replace(re, `<strong>$&</strong>`)\n      }\n    },\n\n    escapedQuery() {\n      return escapeRegExp(sanitize(this.query))\n    },\n\n    matchedItems() {\n      if (this.query.length === 0 || this.query.length < this.minMatchingChars) {\n        return []\n      }\n\n      const re = new RegExp(this.escapedQuery, 'gi')\n\n      // Filter, sort, and concat\n      return this.data\n        .filter(i => i.text.match(re) !== null)\n        .sort((a, b) => {\n          const aIndex = a.text.indexOf(a.text.match(re)[0])\n          const bIndex = b.text.indexOf(b.text.match(re)[0])\n\n          if (aIndex < bIndex) { return -1 }\n          if (aIndex > bIndex) { return 1 }\n          return 0\n        }).slice(0, this.maxMatches)\n    }\n  },\n\n  methods: {\n    handleHit(item, evt) {\n      this.$emit('hit', item)\n      evt.preventDefault()\n    }\n  }\n}\n</script>\n"]}]}