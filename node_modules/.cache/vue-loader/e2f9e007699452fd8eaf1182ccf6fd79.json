{"remainingRequest":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokiatwin/node_modules/vue-typeahead-bootstrap/src/components/VueTypeaheadBootstrap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/nokiatwin/node_modules/vue-typeahead-bootstrap/src/components/VueTypeaheadBootstrap.vue","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVUeXBlYWhlYWRCb290c3RyYXBMaXN0IGZyb20gJy4vVnVlVHlwZWFoZWFkQm9vdHN0cmFwTGlzdC52dWUnCmltcG9ydCBSZXNpemVPYnNlcnZlciBmcm9tICdyZXNpemUtb2JzZXJ2ZXItcG9seWZpbGwnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Z1ZVR5cGVhaGVhZEJvb3RzdHJhcCcsCgogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZVR5cGVhaGVhZEJvb3RzdHJhcExpc3QKICB9LAoKICBwcm9wczogewogICAgYXJpYUxhYmVsbGVkQnk6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgc2l6ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICAgIHZhbGlkYXRvcjogc2l6ZSA9PiBbJ2xnJywgJ3NtJ10uaW5kZXhPZihzaXplKSA+IC0xCiAgICB9LAogICAgdmFsdWU6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgZGlzYWJsZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBkYXRhOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdmFsaWRhdG9yOiBkID0+IGQgaW5zdGFuY2VvZiBBcnJheQogICAgfSwKICAgIHNlcmlhbGl6ZXI6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IChkKSA9PiBkLAogICAgICB2YWxpZGF0b3I6IGQgPT4gZCBpbnN0YW5jZW9mIEZ1bmN0aW9uCiAgICB9LAogICAgYmFja2dyb3VuZFZhcmlhbnQ6IFN0cmluZywKICAgIGRpc2FibGVkVmFsdWVzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiBbXQogICAgfSwKICAgIHRleHRWYXJpYW50OiBTdHJpbmcsCiAgICBpbnB1dENsYXNzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBpbnB1dE5hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiB1bmRlZmluZWQKICAgIH0sCiAgICBtYXhNYXRjaGVzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMTAKICAgIH0sCiAgICBtaW5NYXRjaGluZ0NoYXJzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMgogICAgfSwKICAgIGRpc2FibGVTb3J0OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgc2hvd09uRm9jdXM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBzaG93QWxsUmVzdWx0czogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGF1dG9DbG9zZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgaWVDbG9zZUZpeDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHBsYWNlaG9sZGVyOiBTdHJpbmcsCiAgICBwcmVwZW5kOiBTdHJpbmcsCiAgICBhcHBlbmQ6IFN0cmluZywKICAgIGhpZ2hsaWdodENsYXNzOiBTdHJpbmcKICB9LAoKICBjb21wdXRlZDogewogICAgaWQoKSB7CiAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMDApCiAgICB9LAogICAgaW5wdXRHcm91cENsYXNzZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLnNpemUgPyBgaW5wdXQtZ3JvdXAgaW5wdXQtZ3JvdXAtJHt0aGlzLnNpemV9YCA6ICdpbnB1dC1ncm91cCcKICAgIH0sCgogICAgZm9ybWF0dGVkRGF0YSgpIHsKICAgICAgaWYgKCEodGhpcy5kYXRhIGluc3RhbmNlb2YgQXJyYXkpKSB7CiAgICAgICAgcmV0dXJuIFtdCiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMuZGF0YS5tYXAoKGQsIGkpID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgaWQ6IGksCiAgICAgICAgICBkYXRhOiBkLAogICAgICAgICAgdGV4dDogdGhpcy5zZXJpYWxpemVyKGQpCiAgICAgICAgfQogICAgICB9KQogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIHJlc2l6ZUxpc3QoZWwpIHsKICAgICAgY29uc3QgcmVjdCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpCiAgICAgIGNvbnN0IGxpc3RTdHlsZSA9IHRoaXMuJHJlZnMubGlzdC4kZWwuc3R5bGUKCiAgICAgIC8vIFNldCB0aGUgd2lkdGggb2YgdGhlIGxpc3Qgb24gcmVzaXplCiAgICAgIGxpc3RTdHlsZS53aWR0aCA9IHJlY3Qud2lkdGggKyAncHgnCgogICAgICAvLyBTZXQgdGhlIG1hcmdpbiB3aGVuIHRoZSBwcmVwZW5kIHByb3Agb3Igc2xvdCBpcyBwb3B1bGF0ZWQKICAgICAgLy8gKHNldHRpbmcgdGhlICJsZWZ0IiBDU1MgcHJvcGVydHkgZG9lc24ndCB3b3JrKQogICAgICBpZiAodGhpcy4kcmVmcy5wcmVwZW5kRGl2KSB7CiAgICAgICAgY29uc3QgcHJlcGVuZFJlY3QgPSB0aGlzLiRyZWZzLnByZXBlbmREaXYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkKICAgICAgICBsaXN0U3R5bGUubWFyZ2luTGVmdCA9IHByZXBlbmRSZWN0LndpZHRoICsgJ3B4JwogICAgICB9CiAgICB9LAoKICAgIGhhbmRsZUhpdChldnQpIHsKICAgICAgaWYgKHR5cGVvZiB0aGlzLnZhbHVlICE9PSAndW5kZWZpbmVkJykgewogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgZXZ0LnRleHQpCiAgICAgIH0KCiAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9IGV2dC50ZXh0CiAgICAgIHRoaXMuJGVtaXQoJ2hpdCcsIGV2dC5kYXRhKQoKICAgICAgaWYgKHRoaXMuYXV0b0Nsb3NlKSB7CiAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC5ibHVyKCkKICAgICAgICB0aGlzLmlzRm9jdXNlZCA9IGZhbHNlCiAgICAgIH0KICAgIH0sCgogICAgaGFuZGxlQ2hpbGRCbHVyKCkgewogICAgICB0aGlzLiRyZWZzLmlucHV0LmZvY3VzKCkKICAgICAgdGhpcy5pc0ZvY3VzZWQgPSBmYWxzZQogICAgfSwKCiAgICBydW5Gb2N1c091dCh0Z3QpIHsKICAgICAgaWYgKHRndCAmJiB0Z3QuY2xhc3NMaXN0LmNvbnRhaW5zKCd2YnN0LWl0ZW0nKSkgewogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2UKICAgIH0sCgogICAgaGFuZGxlRm9jdXNPdXQoZXZ0KSB7CiAgICAgIGNvbnN0IHRndCA9IGV2dC5yZWxhdGVkVGFyZ2V0CiAgICAgIGlmICghIW5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL1RyaWRlbnQuKnJ2OjExXC4vKSAmJiB0aGlzLmllQ2xvc2VGaXgpIHsKICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsgdGhpcy5ydW5Gb2N1c091dCh0Z3QpIH0sIDMwMCkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnJ1bkZvY3VzT3V0KHRndCkKICAgICAgfQogICAgfSwKCiAgICBoYW5kbGVJbnB1dChuZXdWYWx1ZSkgewogICAgICB0aGlzLmlzRm9jdXNlZCA9IHRydWUKICAgICAgdGhpcy5pbnB1dFZhbHVlID0gbmV3VmFsdWUKCiAgICAgIC8vIElmIHYtbW9kZWwgaXMgYmVpbmcgdXNlZCwgZW1pdCBhbiBpbnB1dCBldmVudAogICAgICBpZiAodHlwZW9mIHRoaXMudmFsdWUgIT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBuZXdWYWx1ZSkKICAgICAgfQogICAgfSwKCiAgICBoYW5kbGVFc2MoaW5wdXRWYWx1ZSkgewogICAgICBpZiAoaW5wdXRWYWx1ZSA9PT0gJycpIHsKICAgICAgICB0aGlzLiRyZWZzLmlucHV0LmJsdXIoKQogICAgICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2UKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmlucHV0VmFsdWUgPSAnJwogICAgICB9CiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzRm9jdXNlZDogZmFsc2UsCiAgICAgIGlucHV0VmFsdWU6IHRoaXMudmFsdWUgfHwgJycKICAgIH0KICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy4kX3JvID0gbmV3IFJlc2l6ZU9ic2VydmVyKGUgPT4gewogICAgICB0aGlzLnJlc2l6ZUxpc3QodGhpcy4kcmVmcy5pbnB1dCkKICAgIH0pCiAgICB0aGlzLiRfcm8ub2JzZXJ2ZSh0aGlzLiRyZWZzLmlucHV0KQogICAgdGhpcy4kX3JvLm9ic2VydmUodGhpcy4kcmVmcy5saXN0LiRlbCkKICB9LAoKICBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy4kX3JvLmRpc2Nvbm5lY3QoKQogIH0sCgogIHdhdGNoOiB7CiAgICB2YWx1ZTogZnVuY3Rpb24odmFsKSB7CiAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9IHZhbAogICAgfQogIH0KfQo="},{"version":3,"sources":["VueTypeaheadBootstrap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"VueTypeaheadBootstrap.vue","sourceRoot":"node_modules/vue-typeahead-bootstrap/src/components","sourcesContent":["<template>\n  <div\n    :id=\"`typeahead-${id}`\"\n    role=\"combobox\"\n    aria-haspopup=\"listbox\"\n    :aria-owns=\"`result-list-${id}`\"\n    :aria-expanded=\"(isFocused && data.length > 0) ? 'true' : 'false'\"\n  >\n    <div :class=\"inputGroupClasses\">\n      <div ref=\"prependDiv\" v-if=\"$slots.prepend || prepend\" class=\"input-group-prepend\">\n        <slot name=\"prepend\">\n          <span class=\"input-group-text\">{{ prepend }}</span>\n        </slot>\n      </div>\n      <input\n        ref=\"input\"\n        :id=\"`typeahead-input-${id}`\"\n        type=\"text\"\n        role=\"searchbox\"\n        :class=\"`form-control ${inputClass}`\"\n        :aria-labelledby=\"ariaLabelledBy\"\n        aria-multiline=\"false\"\n        aria-autocomplete=\"list\"\n        :aria-controls=\"`result-list-${id}`\"\n        :aria-activedescendant=\"`selected-option-${id}`\"\n        :name=\"inputName\"\n        :placeholder=\"placeholder\"\n        :aria-label=\"(!ariaLabelledBy) ? placeholder : false\"\n        :value=\"inputValue\"\n        :disabled=\"disabled\"\n        @focus=\"isFocused = true\"\n        @blur=\"handleFocusOut\"\n        @input=\"handleInput($event.target.value)\"\n        @keydown.esc=\"handleEsc($event.target.value)\"\n        @keyup=\"$emit('keyup', $event)\"\n      />\n      <div v-if=\"$slots.append || append\" class=\"input-group-append\">\n        <slot name=\"append\">\n          <span class=\"input-group-text\">{{ append }}</span>\n        </slot>\n      </div>\n    </div>\n    <vue-typeahead-bootstrap-list\n      :id=\"`result-list-${id}`\"\n      class=\"vbt-autcomplete-list\"\n      ref=\"list\"\n      v-show=\"isFocused && data.length > 0\"\n      :query=\"inputValue\"\n      :data=\"formattedData\"\n      :background-variant=\"backgroundVariant\"\n      :text-variant=\"textVariant\"\n      :maxMatches=\"maxMatches\"\n      :minMatchingChars=\"minMatchingChars\"\n      :disableSort=\"disableSort\"\n      :showOnFocus=\"showOnFocus\"\n      :showAllResults=\"showAllResults\"\n      @hit=\"handleHit\"\n      @listItemBlur=\"handleChildBlur\"\n      :highlightClass='highlightClass'\n      :disabledValues=\"disabledValues\"\n      :vbtUniqueId=\"id\"\n      role=\"listbox\"\n    >\n      <!-- pass down all scoped slots -->\n      <template v-for=\"(slot, slotName) in $scopedSlots\" :slot=\"slotName\" slot-scope=\"{ data, htmlText }\">\n        <slot :name=\"slotName\" v-bind=\"{ data, htmlText }\"></slot>\n      </template>\n      <!-- below is the right solution, however if the user does not provide a scoped slot, vue will still set $scopedSlots.suggestion to a blank scope\n      <template v-if=\"$scopedSlots.suggestion\" slot=\"suggestion\" slot-scope=\"{ data, htmlText }\">\n        <slot name=\"suggestion\" v-bind=\"{ data, htmlText }\" />\n      </template>-->\n    </vue-typeahead-bootstrap-list>\n  </div>\n</template>\n\n<script>\nimport VueTypeaheadBootstrapList from './VueTypeaheadBootstrapList.vue'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nexport default {\n  name: 'VueTypeaheadBootstrap',\n\n  components: {\n    VueTypeaheadBootstrapList\n  },\n\n  props: {\n    ariaLabelledBy: {\n      type: String,\n      default: null\n    },\n    size: {\n      type: String,\n      default: null,\n      validator: size => ['lg', 'sm'].indexOf(size) > -1\n    },\n    value: {\n      type: String\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    data: {\n      type: Array,\n      required: true,\n      validator: d => d instanceof Array\n    },\n    serializer: {\n      type: Function,\n      default: (d) => d,\n      validator: d => d instanceof Function\n    },\n    backgroundVariant: String,\n    disabledValues: {\n      type: Array,\n      default: () => []\n    },\n    textVariant: String,\n    inputClass: {\n      type: String,\n      default: ''\n    },\n    inputName: {\n      type: String,\n      default: undefined\n    },\n    maxMatches: {\n      type: Number,\n      default: 10\n    },\n    minMatchingChars: {\n      type: Number,\n      default: 2\n    },\n    disableSort: {\n      type: Boolean,\n      default: false\n    },\n    showOnFocus: {\n      type: Boolean,\n      default: false\n    },\n    showAllResults: {\n      type: Boolean,\n      default: false\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    },\n    ieCloseFix: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: String,\n    prepend: String,\n    append: String,\n    highlightClass: String\n  },\n\n  computed: {\n    id() {\n      return Math.floor(Math.random() * 100000)\n    },\n    inputGroupClasses() {\n      return this.size ? `input-group input-group-${this.size}` : 'input-group'\n    },\n\n    formattedData() {\n      if (!(this.data instanceof Array)) {\n        return []\n      }\n      return this.data.map((d, i) => {\n        return {\n          id: i,\n          data: d,\n          text: this.serializer(d)\n        }\n      })\n    }\n  },\n\n  methods: {\n    resizeList(el) {\n      const rect = el.getBoundingClientRect()\n      const listStyle = this.$refs.list.$el.style\n\n      // Set the width of the list on resize\n      listStyle.width = rect.width + 'px'\n\n      // Set the margin when the prepend prop or slot is populated\n      // (setting the \"left\" CSS property doesn't work)\n      if (this.$refs.prependDiv) {\n        const prependRect = this.$refs.prependDiv.getBoundingClientRect()\n        listStyle.marginLeft = prependRect.width + 'px'\n      }\n    },\n\n    handleHit(evt) {\n      if (typeof this.value !== 'undefined') {\n        this.$emit('input', evt.text)\n      }\n\n      this.inputValue = evt.text\n      this.$emit('hit', evt.data)\n\n      if (this.autoClose) {\n        this.$refs.input.blur()\n        this.isFocused = false\n      }\n    },\n\n    handleChildBlur() {\n      this.$refs.input.focus()\n      this.isFocused = false\n    },\n\n    runFocusOut(tgt) {\n      if (tgt && tgt.classList.contains('vbst-item')) {\n        return\n      }\n      this.isFocused = false\n    },\n\n    handleFocusOut(evt) {\n      const tgt = evt.relatedTarget\n      if (!!navigator.userAgent.match(/Trident.*rv:11\\./) && this.ieCloseFix) {\n        setTimeout(() => { this.runFocusOut(tgt) }, 300)\n      } else {\n        this.runFocusOut(tgt)\n      }\n    },\n\n    handleInput(newValue) {\n      this.isFocused = true\n      this.inputValue = newValue\n\n      // If v-model is being used, emit an input event\n      if (typeof this.value !== 'undefined') {\n        this.$emit('input', newValue)\n      }\n    },\n\n    handleEsc(inputValue) {\n      if (inputValue === '') {\n        this.$refs.input.blur()\n        this.isFocused = false\n      } else {\n        this.inputValue = ''\n      }\n    }\n  },\n\n  data() {\n    return {\n      isFocused: false,\n      inputValue: this.value || ''\n    }\n  },\n\n  mounted() {\n    this.$_ro = new ResizeObserver(e => {\n      this.resizeList(this.$refs.input)\n    })\n    this.$_ro.observe(this.$refs.input)\n    this.$_ro.observe(this.$refs.list.$el)\n  },\n\n  beforeDestroy() {\n    this.$_ro.disconnect()\n  },\n\n  watch: {\n    value: function(val) {\n      this.inputValue = val\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .vbt-autcomplete-list {\n    padding-top: 5px;\n    position: absolute;\n    max-height: 350px;\n    -ms-overflow-style: -ms-autohiding-scrollbar;\n    overflow-y: auto;\n    z-index: 999;\n  }\n  .vbt-autcomplete-list >>> .vbt-matched-text{\n    font-weight: bold;\n  }\n</style>\n"]}]}