{"remainingRequest":"/Users/tk/GitHub/twin-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/twin-dashboard/src/components/sidebar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/tk/GitHub/twin-dashboard/src/components/sidebar.vue","mtime":1591381495717},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2lkZWJhciB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzM5MzkzQjsKICBjb2xvcjogd2hpdGU7CiAgbWluLXdpZHRoOiAzMDBweDsKfQoKYnV0dG9uLmJ0bi1saW5rIHsKICBjb2xvcjogd2hpdGU7CiAgcGFkZGluZzogMDsKfQoKdWwgewogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwOwp9CmxpLmZpcnN0TGV2ZWwgewogIGZvbnQtc2l6ZTogMTZweDsKICBib3JkZXItdG9wOiAxcHggc29saWQgZGFya2dyZXk7CiAgcGFkZGluZzogMjBweDsKICBsaXN0LXN0eWxlOiBub25lCn0KCi5lbGVtZW50cyBsaSB7CiAgZm9udC1zaXplOiAxMnB4Owp9CgpsaSB1bCBsaSB7CiAgZGlzcGxheTogdGFibGU7CiAgcGFkZGluZzogMnB4IDRweDsKICBib3JkZXItcmFkaXVzOiA0cHg7Cn0KLm5ldXRyYWwuaGlnaGxpZ2h0ICB7YmFja2dyb3VuZDogYmxhY2s7fQouZ3JlZW4uaGlnaGxpZ2h0ICB7YmFja2dyb3VuZDogIzUwRTNDMjt9Ci5wdXJwbGUuaGlnaGxpZ2h0IHtiYWNrZ3JvdW5kOiAjQkQxMEUwO30K"},{"version":3,"sources":["sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sidebar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <ul>\n      <li class=\"firstLevel\"><metrics @clicked=\"setQuery\"/></li>\n      <li class=\"firstLevel\"><companies @clicked=\"setQuery\"/></li>\n      <li class=\"firstLevel\"><locations @clicked=\"setQuery\"/></li>\n    </ul>\n</template>\n\n<script>\nimport axios from 'axios'\nimport metrics from './metrics.vue'\nimport companies from './companies.vue'\nimport locations from './locations.vue'\n\n\nexport default {\n  data() {\n    return {\n      queries : [ //two queries for two charts to be compared\n        [\n          {attr: \"metric\", value: \"\"},\n          {attr: \"country\", value: \"\"},\n          {attr: \"location\", value: \"\"},\n          {attr: \"role\", value: \"\"},\n          {attr: \"company\", value: \"\"},\n        ],\n        [\n          {attr: \"metric\", value: \"\"},\n          {attr: \"country\", value: \"\"},\n          {attr: \"location\", value: \"\"},\n          {attr: \"role\", value: \"\"},\n          {attr: \"company\", value: \"\"},\n        ]\n      ]\n    }\n  },\n  methods: {\n    setQuery: function(param) {\n      if(param.queryID != null) {\n        this.queries[param.queryID].find(x=>x.attr == param.attr).value = param.value\n      } else {\n        this.queries.forEach(currentQuery => currentQuery.find(x=>x.attr == param.attr).value = param.value)\n      }\n\n      this.getAPI(\"foo\")\n    },\n\n    getAPI: function() {\n      console.log(\"foo\")\n\n      axios.get( \"http://localhost/nokia/nokia-twin/comparison-api.php?company=nokia&rating=rating_overall&country=UK\", {\n        headers: {'X-Requested-With': 'XMLHttpRequest'}\n      } ).then( response => {\n        console.log(response)\n        /*this.title = response.data.title;\n        this.content = response.data.content;\n        this.components = response.data.components;*/\n      } );\n    }\n\n  },\n  components: {\n    metrics,\n    companies,\n    locations\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.sidebar {\n  background-color: #39393B;\n  color: white;\n  min-width: 300px;\n}\n\nbutton.btn-link {\n  color: white;\n  padding: 0;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n}\nli.firstLevel {\n  font-size: 16px;\n  border-top: 1px solid darkgrey;\n  padding: 20px;\n  list-style: none\n}\n\n.elements li {\n  font-size: 12px;\n}\n\nli ul li {\n  display: table;\n  padding: 2px 4px;\n  border-radius: 4px;\n}\n.neutral.highlight  {background: black;}\n.green.highlight  {background: #50E3C2;}\n.purple.highlight {background: #BD10E0;}\n</style>\n"]}]}