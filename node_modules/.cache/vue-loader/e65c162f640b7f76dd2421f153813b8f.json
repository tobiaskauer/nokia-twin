{"remainingRequest":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokia-twin/twin-dashboard/src/components/results.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/src/components/results.vue","mtime":1593244929889},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHsgYnVzIH0gZnJvbSAnLi4vbWFpbicKaW1wb3J0IGNoYXJ0IGZyb20gJy4vY2hhcnQudnVlJwppbXBvcnQgaGVhZGxpbmUgZnJvbSAnLi9oZWFkbGluZS52dWUnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3Jlc3VsdHMnLAoKICBjb21wb25lbnRzOiB7CiAgICBjaGFydCwKICAgIGhlYWRsaW5lCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlc3VsdHM6IFtdLAogICAgICBxdWVyaWVzIDogWwogICAgICAgIHsKICAgICAgICAgIG1ldHJpYzogdW5kZWZpbmVkLAogICAgICAgICAgbG9jYXRpb246IHVuZGVmaW5lZCwKICAgICAgICAgIGNvbXBhbnk6IHVuZGVmaW5lZCwKICAgICAgICAgIGVtcGxveWVlX3RpdGxlOiB1bmRlZmluZWQKICAgICAgICAgIC8vY291bnRyeTogdW5kZWZpbmVkLAogICAgICAgIH0sIHsKICAgICAgICAgIG1ldHJpYzogdW5kZWZpbmVkLAogICAgICAgICAgbG9jYXRpb246IHVuZGVmaW5lZCwKICAgICAgICAgIGNvbXBhbnk6IHVuZGVmaW5lZCwKICAgICAgICAgIGVtcGxveWVlX3RpdGxlOiB1bmRlZmluZWQsCiAgICAgICAgICAvL2NvdW50cnk6ICIiLAogICAgICAgIH0KICAgICAgXSwKICAgIH0KICB9LAoKICBjcmVhdGVkICgpIHsgLy9nZXQgaW5pdGlhbCBzZXQgb2YgcXVlcmllcyBmcm9tIHNpZGViYXIgKHByZXNlbGVjdGVkIGVudHJpZXMpIC0tPiBkb250CiAgICBidXMuJG9uKCdpbml0aWFsJywgKHBhcmFtZXRlcikgPT4gewogICAgICB0aGlzLnNldFF1ZXJ5KHBhcmFtZXRlcikKICAgfSkKIH0sCgptb3VudGVkICgpIHsgLy93aGVuIG1vdW50ZWQKICB0aGlzLnF1ZXJpZXMuZm9yRWFjaCgocXVlcnksaSkgPT4gewogICAgaWYocXVlcnkubWV0cmljKSB0aGlzLmdldERhdGEocXVlcnksaSkgLy9pZiBtZXRyaWMgKG1hbmRhdG9yeSkgaXMgc2V0LCBjaGVjawogICAgLy9UT0RPOiB0aGlzIHN0aWxsIGNyZWF0ZXMgdG9vIG1hbnkgZGIgcmVxdWVzdHMgd2hlbiBpbml0aWFsaXplZAogIH0pCgogICAvL3N0YXJ0IGxpc3RlbmluZyBvbiBldmVudGJ1cyBmb3IgdXBkYXRlZCBxdWVyaWVzCiAgIGJ1cy4kb24oJ3F1ZXJ5JywgKHBhcmFtZXRlcikgPT4gewogICAgIHRoaXMuc2V0UXVlcnkocGFyYW1ldGVyKQoKICAgICAvL3JldHVybnMgcHJvbWlzZQogICAgIGxldCBpID0gcGFyYW1ldGVyLmluZGV4CiAgICAgaWYocGFyYW1ldGVyLnNlbGVjdG9yID09ICJtZXRyaWMiKSB7CiAgICAgICB0aGlzLnF1ZXJpZXMuZm9yRWFjaCgocXVlcnksaSkgPT4gewogICAgICAgICAvL3RoaXMuJHNldCh0aGlzLnJlc3VsdHMsIGksIHRoaXMuZ2V0RGF0YShxdWVyeSkpCgogICAgICAgICB0aGlzLmdldERhdGEocXVlcnksaSkKICAgICAgIH0pCiAgICAgfSBlbHNlIHsKICAgICAgIHRoaXMuZ2V0RGF0YSh0aGlzLnF1ZXJpZXNbaV0saSkKICAgICAgIC8vdGhpcy4kc2V0KHRoaXMucmVzdWx0cywgaSwgdGhpcy5nZXREYXRhKHRoaXMucXVlcmllc1tpXSkpCgogICAgIH0KICB9KQp9LAoKbWV0aG9kczogewogIHNldFF1ZXJ5OiBmdW5jdGlvbihwYXJhbWV0ZXIpIHsKICAgIC8vVE9ETzogY3JlYXRlIG5ldwogICAgaWYocGFyYW1ldGVyLnNlbGVjdG9yID09ICJtZXRyaWMiKSB7IC8vY2hhbmdlIGdsb2JhbCBxdWVyaWVzIGlmIHRoZSBtZXRyaWMgd2FzIGNoYW5nZWQKICAgICAgdGhpcy5xdWVyaWVzLmZvckVhY2gocXVlcnkgPT4gewogICAgICAgIHF1ZXJ5Lm1ldHJpYyA9IHBhcmFtZXRlci5rZXkgLy9hc3NpbiBuZXcgcGFyYW1ldGVyCiAgICAgIH0pCiAgICB9IGVsc2UgewogICAgICB0aGlzLnF1ZXJpZXNbcGFyYW1ldGVyLmluZGV4XVtwYXJhbWV0ZXIuc2VsZWN0b3JdID0gcGFyYW1ldGVyLmtleSAvL29yIGp1dCBjaGFuZ2UgcGFyYW1ldGVyIGlmIGl0J3Mgbm90IHRoZSBtZXRyaWMKICAgIH0KICB9LAoKICBnZXREYXRhOiBmdW5jdGlvbihxdWVyeSxpKSB7CiAgICAvL1RPRE86IGNoZWNrIGlmIG1ldHJpYyBpcyBzZXQKICAgIHF1ZXJ5LnR5cGU9J3Jlc3VsdCcgLy9zZXQgcXVlcnkgZW5kIChxdWFzaSBlbmRwb2ludCkgZm9yIGFwaS5waHAKICAgIGF4aW9zLnBvc3QoICJodHRwOi8vbG9jYWxob3N0OjgwODAvbm9raWEvbm9raWEtdHdpbi9jb21wYXJpc29uLWFwaS5waHA/IixxdWVyeSwKICAgICAge2hlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOCd9CiAgICB9KQogICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgIHRoaXMuJHNldCh0aGlzLnJlc3VsdHMsIGksIHtxdWVyeTogcXVlcnksIGRhdGE6IHJlc3BvbnNlLmRhdGF9KQogICAgfSkKICAgIC5jYXRjaChlcnJvciA9PiB7CiAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgfSk7CgoKICB9LAogIC8qY2xpY2s6IGZ1bmN0aW9uKCkgewogICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkodGhpcy5yZXN1bHRzKSkKICB9Ki8KfQp9Cg=="},{"version":3,"sources":["results.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"results.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"col\" id=\"main\">\n    <!--<headline  :queries=\"queries\"/>-->\n    <chart :data=\"results\" />\n    <!--<button v-on:click=\"click\">check data</button>-->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { bus } from '../main'\nimport chart from './chart.vue'\nimport headline from './headline.vue'\n\nexport default {\n  name: 'results',\n\n  components: {\n    chart,\n    headline\n  },\n\n  data() {\n    return {\n      results: [],\n      queries : [\n        {\n          metric: undefined,\n          location: undefined,\n          company: undefined,\n          employee_title: undefined\n          //country: undefined,\n        }, {\n          metric: undefined,\n          location: undefined,\n          company: undefined,\n          employee_title: undefined,\n          //country: \"\",\n        }\n      ],\n    }\n  },\n\n  created () { //get initial set of queries from sidebar (preselected entries) --> dont\n    bus.$on('initial', (parameter) => {\n      this.setQuery(parameter)\n   })\n },\n\nmounted () { //when mounted\n  this.queries.forEach((query,i) => {\n    if(query.metric) this.getData(query,i) //if metric (mandatory) is set, check\n    //TODO: this still creates too many db requests when initialized\n  })\n\n   //start listening on eventbus for updated queries\n   bus.$on('query', (parameter) => {\n     this.setQuery(parameter)\n\n     //returns promise\n     let i = parameter.index\n     if(parameter.selector == \"metric\") {\n       this.queries.forEach((query,i) => {\n         //this.$set(this.results, i, this.getData(query))\n\n         this.getData(query,i)\n       })\n     } else {\n       this.getData(this.queries[i],i)\n       //this.$set(this.results, i, this.getData(this.queries[i]))\n\n     }\n  })\n},\n\nmethods: {\n  setQuery: function(parameter) {\n    //TODO: create new\n    if(parameter.selector == \"metric\") { //change global queries if the metric was changed\n      this.queries.forEach(query => {\n        query.metric = parameter.key //assin new parameter\n      })\n    } else {\n      this.queries[parameter.index][parameter.selector] = parameter.key //or jut change parameter if it's not the metric\n    }\n  },\n\n  getData: function(query,i) {\n    //TODO: check if metric is set\n    query.type='result' //set query end (quasi endpoint) for api.php\n    axios.post( \"http://localhost:8080/nokia/nokia-twin/comparison-api.php?\",query,\n      {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n    })\n    .then((response) => {\n      this.$set(this.results, i, {query: query, data: response.data})\n    })\n    .catch(error => {\n      console.log(error)\n    });\n\n\n  },\n  /*click: function() {\n    console.log(JSON.stringify(this.results))\n  }*/\n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#main {\n  background-color: #F7F7F7;\n  }\nh1 {\n  margin-top: 25%\n}\n</style>\n"]}]}