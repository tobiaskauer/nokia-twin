{"remainingRequest":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokia-twin/twin-dashboard/src/components/selectorList.vue?vue&type=style&index=0&id=6cfa8aad&scoped=true&lang=css&","dependencies":[{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/src/components/selectorList.vue","mtime":1593241980869},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2VsZWN0b3JMaXN0LTAgLmhpZ2hsaWdodCAge2JhY2tncm91bmQ6ICM1MEUzQzI7fQouc2VsZWN0b3JMaXN0LTEgLmhpZ2hsaWdodCB7YmFja2dyb3VuZDogI0JEMTBFMDt9CgpsaS5NZXRyaWMgLmhpZ2hsaWdodCB7CiAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDsKICBjb2xvcjogIzM5MzkzQjsKfQoKLmVsZW1lbnRzIGxpIHsKICBmb250LXNpemU6IDEycHg7Cn0KCmxpIHVsIGxpIHsKICBkaXNwbGF5OiB0YWJsZTsKICBwYWRkaW5nOiAycHggNHB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsKfQoKdWwgewogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwOwp9CgpzbWFsbCB7CiAgY29sb3I6IGxpZ2h0Z3JleTsKICBmb250LXNpemU6IC42ZW0KfQo="},{"version":3,"sources":["selectorList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"selectorList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"col\">\n    <ul :class=\"'selectorList-'+index\">\n      <li\n        v-for=\"element in elements\"\n        v-bind:class=\"{highlight:element.key == active}\"\n        :key=\"element.key\"\n        @click=\"send(index,element)\">\n          {{element.display ? element.display : element.key}}\n          <small>{{element.count ? element.count.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"\"}}</small>\n          <b-icon v-if=\"element.key == active\" icon=\"x\" style=\"width: 15px; padding-top: 3px \"></b-icon>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { bus } from '../main'\n\nexport default {\n  props: {\n    selected: String, //currently selected item\n    elements: Array, //Elements of list items\n    selector: String, //What part of the query to update?\n    index: Number\n  },\n\n  data() {\n    return {\n      active: undefined\n    }\n  },\n\n  mounted() {\n    let parameter = {\n      index: this.index, //sidebar column id (0,1)\n      selector: this.selector, //filter (e.g. company, location)\n      key: this.selected, //selected value (e.g. nokia, London)\n    }\n    bus.$emit('initial', parameter); //send new item to bus\n    this.active = this.selected; //can't update a prop, so make it data\n  },\n\n  methods: {\n    send: function(index,element) { //send query parameter to bus (accesses in results.vue)\n      if(\n        element.key == this.active //if clicked on an currently active item, deactive\n         && element.selector != \"metric\" //except metric, because this we need\n       ) { \n        bus.$emit('query', {\n          index: index,\n          selector: element.selector,\n          key: undefined,\n        });\n        this.active = \"\"\n      } else {\n        this.active = element.key //switch selected item in menu\n        bus.$emit('query', {\n          index: index,\n          selector: element.selector,\n          key: element.key,\n        });\n      }\n\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.selectorList-0 .highlight  {background: #50E3C2;}\n.selectorList-1 .highlight {background: #BD10E0;}\n\nli.Metric .highlight {\n  background: white !important;\n  color: #39393B;\n}\n\n.elements li {\n  font-size: 12px;\n}\n\nli ul li {\n  display: table;\n  padding: 2px 4px;\n  border-radius: 4px;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n}\n\nsmall {\n  color: lightgrey;\n  font-size: .6em\n}\n</style>\n"]}]}