{"remainingRequest":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/src/components/filterRow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/src/components/filterRow.vue","mtime":1614939964146},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/cache-loader/dist/cjs.js","mtime":1614939958022},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/babel-loader/lib/index.js","mtime":1614939957453},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/cache-loader/dist/cjs.js","mtime":1614939958022},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/vue-loader/lib/index.js","mtime":1614939962338}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVCb290c3RyYXBUeXBlYWhlYWQgZnJvbSAndnVlLWJvb3RzdHJhcC10eXBlYWhlYWQnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZUJvb3RzdHJhcFR5cGVhaGVhZAogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2xsYXBzZWQ6IGZhbHNlLCAvL3ZpZXcgc3RhdGUgZm9yIGVhY2ggdWkgZWxlbWVudAogICAgfQogIH0sCgogIGNvbXB1dGVkOiB7CiAgICAvL2dldCBmaWx0ZXIgY29sdW1ucyAoZS5nLiBjb21wYW55LCBMb2NhdGlvbiwgZXRjKSBmcm9tIHN0b3JlCiAgICBmaWx0ZXJDb2x1bW5zOiB7CiAgICAgIGNhY2hlOiB0cnVlLAogICAgICBnZXQ6IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldEZpbHRlckNvbHVtbnMKICAgICAgfQogICAgfSwKCiAgICAvL3NlbGVjdGVkIGxpbmVzIGZvciBVSSB2aWV3CiAgICBzZWxlY3RlZDogewogICAgICBjYWNoZTogZmFsc2UsCiAgICAgIGdldDogZnVuY3Rpb24oKSB7CiAgICAgICAgLy9nbyB0aHJvdWdoIGVhY2ggZmlsdGVyIGNvbHVtbiAoZS5nLiBjb21wYW55LCBjb3VudHJ5LCByb2xlLCBldGMpCiAgICAgICAgbGV0IGFjdGl2ZUZpbHRlcnMgPSB0aGlzLmZpbHRlckNvbHVtbnMubWFwKGNvbCA9PiB7CiAgICAgICAgICAvL3NlYXJjaCB0aGUgcXVlcnkgb2YgdGhlIGxpbmUgZm9yIGFjdGl2ZSBmaWx0ZXJzCiAgICAgICAgICBsZXQgdmFsdWUgPSAiIgogICAgICAgICAgY29sLmZpbHRlcnMuZm9yRWFjaChmaWx0ZXIgPT4geyAvL2hlcmUgd2UgaGF2ZSB0byBpdGVyYXRlIHRocm91Z2ggYWxsIGV4aXN0aW5nIGZpbHRlcnMgaW4gY2FzZSB3ZSBoYXZlIG11bHR1cGxlIGRhdGFiYXNlIGNvbHVtbnMgY29tYmluZWQgaW4gb25lIGZpbHRlciBjb2x1bW4gKGUuZy4gImNpdHkiIGFuZCAiY291bnRyeSIgaW4gImxvY2F0aW9uIikKICAgICAgICAgICAgaWYodGhpcy5saW5lLnF1ZXJ5W2ZpbHRlcl0pCiAgICAgICAgICAgICAgdmFsdWUgPSB0aGlzLmxpbmUucXVlcnlbZmlsdGVyXQogICAgICAgICAgfSkKICAgICAgICAgIC8vYXNzaWduIHRoZW0gdG8gYSBkaXNwbGF5IG5hbWUgYW5kIHJldHVybiB0aGVtZwogICAgICAgICAgcmV0dXJuIHtkaXNwbGF5OiBjb2wuZGlzcGxheSwgc2VsZWN0ZWQ6IHZhbHVlfQogICAgICAgIH0pCiAgICAgICAgcmV0dXJuIGFjdGl2ZUZpbHRlcnM7CiAgICAgIH0KICAgIH0sCgogICAgLy9jb21wdXRlIGxpc3QgdG8gc2hvdyBpbiBjb2xsYXNwZWQgZmlsdGVyUm93IHZpZXcgKG9yIHRvIGRpc3BsYXkgbWVzc2FnZSB3aGVuIG5vdGhpbmcgaXMgc2VsZWN0ZWQpCiAgICBjb2xsYXBzZWRJdGVtczogewogICAgICBjYWNoZTogZmFsc2UsCiAgICAgIGdldDogZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWQuZmlsdGVyKGNvbCA9PiBjb2wuc2VsZWN0ZWQpCiAgICAgIH0KICAgIH0KICAgIH0sCgogIG1ldGhvZHM6IHsKICAgIC8vc2VsZWN0IGEgZmlsdGVyaXRlbQogICAgc2VsZWN0OiBmdW5jdGlvbihjb2wsaXRlbSkgewoKICAgICAgLy9maW5kIGN1cnJlbnRseSBzZWxlY3RlZCBpdGVtIHRvIGNvbXBhcmUgdGhlIG5ld2x5IGNsaWNrZWQgaXRlbSB0bwogICAgICBsZXQgY3VycmVudENvbCA9IHRoaXMuc2VsZWN0ZWQuZmluZCh4PT54LmRpc3BsYXkgPT0gY29sKQogICAgICBsZXQgcXVlcnkgPSB7fQogICAgICBpZihjdXJyZW50Q29sLnNlbGVjdGVkID09IGl0ZW0ua2V5KSB7IC8vaWYgYWxyZWFkeSBzZWxlY3RlZAogICAgICAgIC8vVEhJUyBORUVEUyBUTyBCRSBVUERBVEVEIEFGVEVSIEdFVFRJTkcgVEhFIFVyTCBPTkUgQ1RJVkFUSU5HIE9ORSBGSUxURVIgRE9ORQogICAgICAgIC8vY29tbWl0IHdyaXRlIHF1ZXJ5CiAgICAgICAgcXVlcnlbaXRlbS5maWx0ZXJdID0gbnVsbAogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnd3JpdGVRdWVyeScsIHtpZGVudGlmaWVyOiB0aGlzLmxpbmUuaWRlbnRpZmllciwgcXVlcnk6IHF1ZXJ5fSkKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ2V0RGF0YScsIHtpZGVudGlmaWVyOiB0aGlzLmxpbmUuaWRlbnRpZmllciwgY29sOiBjb2wsIHF1ZXJ5OiB7ZmlsdGVyOiBpdGVtLmZpbHRlciwga2V5OiB1bmRlZmluZWR9fSkKICAgICAgfSBlbHNlIHsgLy9pZiBuZXcgaXRlCiAgICAgICAgcXVlcnlbaXRlbS5maWx0ZXJdID0gaXRlbS5rZXkKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3dyaXRlUXVlcnknLCB7aWRlbnRpZmllcjogdGhpcy5saW5lLmlkZW50aWZpZXIsIHF1ZXJ5OiBxdWVyeX0pCiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldERhdGEnLCB7aWRlbnRpZmllcjogdGhpcy5saW5lLmlkZW50aWZpZXJ9KQogICAgICB9CgoKICAgICAgLy9jaGFuZ2UgdXJsIGJhc2VkIG9uIChkZSlhY3RpdmF0ZWQgZmlsdGVyCiAgICAgIGxldCByb3V0ZSA9IHRoaXMuJHJvdXRlLnF1ZXJ5IC8vZ2V0IGN1cnJlbnQgdXJsIHBhcmFtZXRlcnMgYXMgb2JqZWN0CiAgICAgIGxldCBhY3RpdmVGaWx0ZXJzID0gcm91dGVbaXRlbS5maWx0ZXJdID8gcm91dGVbaXRlbS5maWx0ZXJdLnNwbGl0KCIsIikgOiBbXQogICAgICBsZXQgbGluZUluZGV4ID0gdGhpcy4kc3RvcmUuc3RhdGUubGluZXMuZmluZEluZGV4KGxpbmUgPT4gbGluZS5pZGVudGlmaWVyID09IHRoaXMubGluZS5pZGVudGlmaWVyKQogICAgICBsZXQgcm91dGVTdHJpbmcKCiAgICAgIGlmKGN1cnJlbnRDb2wuc2VsZWN0ZWQgPT0gaXRlbS5rZXkpIHsgLy9pZiBhbHJlYWR5IHNlbGVjdGVkCiAgICAgICAgICBhY3RpdmVGaWx0ZXJzW2xpbmVJbmRleF0gPSBudWxsCiAgICAgIH0gZWxzZSB7IC8vaWYgbmV3IGl0ZW0KICAgICAgICAgIGFjdGl2ZUZpbHRlcnNbbGluZUluZGV4XSA9IGl0ZW0ua2V5CiAgICAgIH0KCgogICAgICBhY3RpdmVGaWx0ZXJzID0gYWN0aXZlRmlsdGVycy5qb2luKCIsIikKICAgICAgcm91dGVbaXRlbS5maWx0ZXJdID0gYWN0aXZlRmlsdGVycyAvL3VwZGF0ZSB3aGF0IHlvdSBjaGFuZ2VkCiAgICAgIHJvdXRlU3RyaW5nID0gT2JqZWN0LmVudHJpZXMocm91dGUpLm1hcChlID0+IGVuY29kZVVSSUNvbXBvbmVudChlWzBdKSArICI9IiArIGVuY29kZVVSSUNvbXBvbmVudChlWzFdKSkuam9pbigiJiIpIC8vcGFyc2UgYSBzdHJpbmcgZnJvbSB0aGF0IG9iamVjdAogICAgICBoaXN0b3J5LnB1c2hTdGF0ZSh7fSxudWxsLHRoaXMuJHJvdXRlLnBhdGggKyAnbm9raWF0d2luLyMvPycgKyByb3V0ZVN0cmluZykgLy93cml0ZSB0aGF0IHRvIFVSTCAoQ0FVVElPTjogdnVlWCBzdG9yZSBhbmQgVVJMIG1pZ2h0IGJlIGluY29uc2lzdGVudCkKCiAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCkKICAgIH0sCgogICAgLy9yZW1vdmUgbGluZSB3aGVuIGNvbnRyb2wtY2xvc2UgaXMgY2xpY2tlZAogICAgcmVtb3ZlTGluZTogZnVuY3Rpb24oaWRlbnRpZmllcikgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3JlbW92ZUxpbmUnLGlkZW50aWZpZXIpCiAgICAgIGxldCByb3V0ZSA9IHRoaXMuJHJvdXRlLnF1ZXJ5IC8vZ2V0IGN1cnJlbnQgdXJsIHBhcmFtZXRlcnMgYXMgb2JqZWN0CiAgICAgIHJvdXRlLmxpbmVzID0gdGhpcy4kc3RvcmUuc3RhdGUubGluZXMubGVuZ3RoCiAgICAgIGxldCByb3V0ZVN0cmluZyA9IE9iamVjdC5lbnRyaWVzKHJvdXRlKS5tYXAoZSA9PiBlbmNvZGVVUklDb21wb25lbnQoZVswXSkgKyAiPSIgKyBlbmNvZGVVUklDb21wb25lbnQoZVsxXSkpLmpvaW4oIiYiKSAvL3BhcnNlIGEgc3RyaW5nIGZyb20gdGhhdCBvYmplY3QKICAgICAgaGlzdG9yeS5wdXNoU3RhdGUoe30sbnVsbCx0aGlzLiRyb3V0ZS5wYXRoICsgJ25va2lhdHdpbi8jLz8nICsgcm91dGVTdHJpbmcpIC8vd3JpdGUgdGhhdCB0byBVUkwgKENBVVRJT046IHZ1ZVggc3RvcmUgYW5kIFVSTCBtaWdodCBiZSBpbmNvbnNpc3RlbnQpCiAgICB9LAoKICAgIC8vdG9nZ2xlIGNvbGxhcHNlIHN0YXRlIHdoZW4gY29udHJvbC1jb2xsYXBzZSBpcyBjbGlja2VkCiAgICBjb2xsYXBzZTogZnVuY3Rpb24oY29sbGFwc2UpIHsKICAgICAgdGhpcy5jb2xsYXBzZWQgPSAhY29sbGFwc2UKICAgIH0sCgogICAgYWRkRmlsdGVyOiBmdW5jdGlvbihjb2wsZmlsdGVyKSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkRmlsdGVyJyxmaWx0ZXIpCiAgICAgIHRoaXMuc2VsZWN0KGNvbC5kaXNwbGF5LGZpbHRlcikKICAgICAgLy9UT0RPIGFsc28gc2VsZWN0IGZpbHRlcgogICAgfSwKCiAgICBsb2c6IGZ1bmN0aW9uKG1lc3NhZ2UpIHsKICAgICAgY29uc29sZS5sb2cobWVzc2FnZSkKICAgIH0KCgogIH0sCgogIG1vdW50ZWQoKSB7CiAgfSwKCiAgcHJvcHM6IHsKICAgIGxpbmU6IE9iamVjdCAvL2xpbmUtaXRlbSAoaW5jbHVkaW5nIGNvbG9ycywgaWRlbnRpZmllciBhbmQgc2VsZWN0ZWQgZmlsdGVycykgd2lsbCBiZSBwYXNzZWQgZnJvbSBzaWRlYmFyLnZ1ZQogIH0KfQo="},{"version":3,"sources":["filterRow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"filterRow.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!--<li class=\"filterRow\" :style=\"'border-color: ' +this.line.color\" :key=\"refreshCount\">-->\n<li class=\"filterRow\" :style=\"'border-color: ' +this.line.color\">\n  <!-- line control elements, always visible -->\n  <ul class=\"controls\">\n    <li :class=\"{rotate: !collapsed}\"><!-- toggle collapse -->\n      <a v-on:click=\"collapse(collapsed)\">\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-down-circle-fill\" :fill=\"this.line.color\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fill-rule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 5a.5.5 0 0 0-1 0v4.793L5.354 7.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 9.793V5z\"/>\n        </svg>\n      </a>\n    </li>\n    <li class=\"delete\">\n      <a v-on:click=\"removeLine(line.identifier)\">\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-x-circle-fill\" :fill=\"this.line.color\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fill-rule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.146-3.146a.5.5 0 0 0-.708-.708L8 7.293 4.854 4.146a.5.5 0 1 0-.708.708L7.293 8l-3.147 3.146a.5.5 0 0 0 .708.708L8 8.707l3.146 3.147a.5.5 0 0 0 .708-.708L8.707 8l3.147-3.146z\"/>\n        </svg>\n      </a>\n    </li>\n  </ul>\n\n  <!-- collapsed view of line -->\n  <div class=\"collapsed\" :class=\"{hidden: !collapsed}\">\n    <div v-if=\"collapsedItems.length > 0\">\n      <ul class=\"items\">\n        <li v-for=\"(item, index) in collapsedItems\" :key=\"'selected-'+index\">\n          <div v-if=\"item.selected\" :style=\"{'font-color': 'bold', 'background': line.color}\">{{item.selected}}</div>\n        </li>\n      </ul>\n    </div>\n    <div v-else>\n      No filters selected\n    </div>\n  </div>\n\n  <!-- expanded view of line -->\n  <div class=\"expanded\" :class=\"{hidden: collapsed}\" v-for=\"(col, index) in filterColumns\" :ref=\"col.display\" :key=\"'list-'+index\">\n    <strong>{{col.display}}</strong>\n      <ul class=\"items\">\n        <li v-for=\"element in col.elements\" :key=\"element.key\">\n          <div v-bind:style=\"[selected.find(x=>x.display == col.display).selected == element.key ? {'font-weight': 'bold', 'background': line.color} : {'background': 'none'}]\" v-on:click=\"select(col.display, element)\">\n            {{element.key}}\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" v-if=\"selected.find(x=>x.display == col.display).selected == element.key\">\n              <path transform=\"scale(.04)\" fill=\"white\" d=\"M247.244,169.59l83.938-83.938c5.332-5.327,7.994-11.798,7.994-19.414c0-7.614-2.669-14.084-7.994-19.414L292.355,7.993C287.026,2.665,280.556,0,272.944,0c-7.617,0-14.085,2.665-19.417,7.993L169.59,91.931L85.651,7.993C80.325,2.665,73.854,0,66.237,0c-7.611,0-14.083,2.665-19.414,7.993L7.994,46.824C2.667,52.15,0,58.624,0,66.238c0,7.616,2.664,14.084,7.994,19.414l83.937,83.938L7.994,253.528C2.667,258.859,0,265.327,0,272.945c0,7.61,2.664,14.082,7.994,19.41l38.83,38.828c5.33,5.332,11.803,7.994,19.414,7.994c7.616,0,14.084-2.669,19.414-7.994l83.939-83.938l83.944,83.938c5.328,5.332,11.793,7.994,19.417,7.994c7.611,0,14.082-2.669,19.411-7.994l38.82-38.828c5.332-5.324,7.994-11.8,7.994-19.41c0-7.618-2.662-14.086-7.994-19.417L247.244,169.59z\"/>\n            </svg>\n          </div>\n\n        </li>\n      </ul>\n\n      <!-- typeahead field to add additional filters -->\n      <div class=\"typeahead\" v-if=\"col.autocomplete.length > 5\">\n        <!--{{log(selected)}}\n        {{log(col.autocomplete)}}-->\n        <vue-bootstrap-typeahead\n          :data=\"col.autocomplete\"\n          v-model=\"selected.find(x=>x.display == col.display).selected\"\n          size=\"sm\"\n          :serializer=\"s => s.key\"\n          :placeholder=\"'Add '+col.display\"\n          @hit=\"addFilter(col,$event)\"\n        />\n      </div>\n    </div>\n</li>\n</template>\n\n<script>\nimport VueBootstrapTypeahead from 'vue-bootstrap-typeahead';\n\nexport default {\n  components: {\n    VueBootstrapTypeahead\n  },\n\n  data() {\n    return {\n      collapsed: false, //view state for each ui element\n    }\n  },\n\n  computed: {\n    //get filter columns (e.g. company, Location, etc) from store\n    filterColumns: {\n      cache: true,\n      get: function() {\n        return this.$store.getters.getFilterColumns\n      }\n    },\n\n    //selected lines for UI view\n    selected: {\n      cache: false,\n      get: function() {\n        //go through each filter column (e.g. company, country, role, etc)\n        let activeFilters = this.filterColumns.map(col => {\n          //search the query of the line for active filters\n          let value = \"\"\n          col.filters.forEach(filter => { //here we have to iterate through all existing filters in case we have multuple database columns combined in one filter column (e.g. \"city\" and \"country\" in \"location\")\n            if(this.line.query[filter])\n              value = this.line.query[filter]\n          })\n          //assign them to a display name and return themg\n          return {display: col.display, selected: value}\n        })\n        return activeFilters;\n      }\n    },\n\n    //compute list to show in collasped filterRow view (or to display message when nothing is selected)\n    collapsedItems: {\n      cache: false,\n      get: function() {\n        return this.selected.filter(col => col.selected)\n      }\n    }\n    },\n\n  methods: {\n    //select a filteritem\n    select: function(col,item) {\n\n      //find currently selected item to compare the newly clicked item to\n      let currentCol = this.selected.find(x=>x.display == col)\n      let query = {}\n      if(currentCol.selected == item.key) { //if already selected\n        //THIS NEEDS TO BE UPDATED AFTER GETTING THE UrL ONE CTIVATING ONE FILTER DONE\n        //commit write query\n        query[item.filter] = null\n        this.$store.commit('writeQuery', {identifier: this.line.identifier, query: query})\n        this.$store.dispatch('getData', {identifier: this.line.identifier, col: col, query: {filter: item.filter, key: undefined}})\n      } else { //if new ite\n        query[item.filter] = item.key\n        this.$store.commit('writeQuery', {identifier: this.line.identifier, query: query})\n        this.$store.dispatch('getData', {identifier: this.line.identifier})\n      }\n\n\n      //change url based on (de)activated filter\n      let route = this.$route.query //get current url parameters as object\n      let activeFilters = route[item.filter] ? route[item.filter].split(\",\") : []\n      let lineIndex = this.$store.state.lines.findIndex(line => line.identifier == this.line.identifier)\n      let routeString\n\n      if(currentCol.selected == item.key) { //if already selected\n          activeFilters[lineIndex] = null\n      } else { //if new item\n          activeFilters[lineIndex] = item.key\n      }\n\n\n      activeFilters = activeFilters.join(\",\")\n      route[item.filter] = activeFilters //update what you changed\n      routeString = Object.entries(route).map(e => encodeURIComponent(e[0]) + \"=\" + encodeURIComponent(e[1])).join(\"&\") //parse a string from that object\n      history.pushState({},null,this.$route.path + 'nokiatwin/#/?' + routeString) //write that to URL (CAUTION: vueX store and URL might be inconsistent)\n\n      this.$forceUpdate()\n    },\n\n    //remove line when control-close is clicked\n    removeLine: function(identifier) {\n      this.$store.commit('removeLine',identifier)\n      let route = this.$route.query //get current url parameters as object\n      route.lines = this.$store.state.lines.length\n      let routeString = Object.entries(route).map(e => encodeURIComponent(e[0]) + \"=\" + encodeURIComponent(e[1])).join(\"&\") //parse a string from that object\n      history.pushState({},null,this.$route.path + 'nokiatwin/#/?' + routeString) //write that to URL (CAUTION: vueX store and URL might be inconsistent)\n    },\n\n    //toggle collapse state when control-collapse is clicked\n    collapse: function(collapse) {\n      this.collapsed = !collapse\n    },\n\n    addFilter: function(col,filter) {\n      this.$store.commit('addFilter',filter)\n      this.select(col.display,filter)\n      //TODO also select filter\n    },\n\n    log: function(message) {\n      console.log(message)\n    }\n\n\n  },\n\n  mounted() {\n  },\n\n  props: {\n    line: Object //line-item (including colors, identifier and selected filters) will be passed from sidebar.vue\n  }\n}\n</script>\n\n<style scoped>\nli.filterRow {\n  margin: 20px 30px;;\n  padding: 10px;\n  border-radius: 4px;\n  border-style: solid;\n  border-width: 1px;\n  border-left-width: 15px;\n  list-style: none;\n  position: relative;\n}\n\nul.items {\n  font-size: 12px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\nul.items div {\n  padding: 2px 4px;\n  border-radius: 4px;\n}\n\nul.items div:hover {\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.expanded {\n  margin: 0 30px 15px 0;\n  display: inline-table;\n}\n\n.collapsed {\n  width: 90%;\n}\n\n.collapsed li {\n  display: inline-block;\n  margin: 5px 5px 5px 0;\n  font-weight: bold;\n}\n\nul.controls {\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 5px;\n}\n\n\nul.controls li {\n  list-style: none;\n  display: inline-block;\n  margin-left: 5px;\n  line-height: 0em;\n  background: white;\n  border-radius: 50%;\n\n}\nul.controls li:hover {\ncursor: pointer;\n}\n\nul.controls li.rotate {\n  transform: rotate(180deg);\n}\n\n.hidden {\n  display: none !important;\n}\n\n</style>\n\n<style>\n.typeahead input {\n  margin-top: 4px;\n  width: 100px !important;\n  font-size: 12pt;\n}\n\n.vbst-item {\n  padding: 2px !important;\n  font-size: 12px;\n}\n</style>\n"]}]}