{"remainingRequest":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokia-twin/twin-dashboard/src/components/sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/src/components/sidebar.vue","mtime":1594335035982},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmaWx0ZXJSb3cgZnJvbSAnLi9maWx0ZXJSb3cudnVlJwppbXBvcnQgbWV0cmljcyBmcm9tICcuL21ldHJpY3MudnVlJwovL2ltcG9ydCBheGlvcyBmcm9tICdheGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgIH0KICB9LAoKCiAgY29tcHV0ZWQ6IHsKICAgIGxpbmVzKCkgewogICAgICAvL2dldCBsaW5lcyBmcm9tIHN0b3JlCiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5saW5lcwogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICAvL2lmIHRoZXJlIGFyZSBubyBsaW5lcyBvbiBzdG9yZSwgYWRkIG9uZQogICAgaWYodGhpcy5saW5lcy5sZW5ndGggPCAxKSB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZExpbmUnLHt9KSAvL2Fsd2F5cyBoYXZlIGEgbGluZSBhdmFpbGFibGUuCgogIH0sCgogIGNyZWF0ZWQoKSB7CiAgfSwKCiAgbWV0aG9kczogewogICAgYWRkTGluZTogZnVuY3Rpb24oKSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkTGluZScse30pCiAgICB9LAoKICAgIHNlbGVjdDogZnVuY3Rpb24ocGF5bG9hZCkgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZVF1ZXJ5JywgcGF5bG9hZCkKICAgIH0KICB9LAoKICBjb21wb25lbnRzOiB7CiAgICBmaWx0ZXJSb3csIG1ldHJpY3MKICB9Cn0K"},{"version":3,"sources":["sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"sidebar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"col-sm-3 sidebar\">\n    <h1>Twin DB</h1>\n    <metrics v-bind:selected=\"{key: 'rating_overall', display: 'Overall Ratings'}\" @clicked=\"select\" />\n    <ul>\n        <filterRow v-for=\"(line, index) in lines\" :key=\"index\" :line=\"line\"  @clicked=\"select\" />\n    </ul>\n    <button v-on:click=\"addLine\">Add Line</button>\n  </div>\n</template>\n\n<script>\nimport filterRow from './filterRow.vue'\nimport metrics from './metrics.vue'\n//import axios from 'axios'\n\nexport default {\n  data() {\n    return {\n    }\n  },\n\n\n  computed: {\n    lines() {\n      //get lines from store\n      return this.$store.state.lines\n    }\n  },\n\n  mounted() {\n    //if there are no lines on store, add one\n    if(this.lines.length < 1) this.$store.commit('addLine',{}) //always have a line available.\n\n  },\n\n  created() {\n  },\n\n  methods: {\n    addLine: function() {\n      this.$store.commit('addLine',{})\n    },\n\n    select: function(payload) {\n      this.$store.commit('updateQuery', payload)\n    }\n  },\n\n  components: {\n    filterRow, metrics\n  }\n}\n</script>\n\n<style scoped>\nh1 {\n  text-align: center;\n}\n.sidebar {\n  background-color: #39393B;\n  color: white;\n  min-width: 300px;\n  padding: 0px !important;\n}\n\nul {\n  margin: 0;\n  padding: 0\n}\n</style>\n"]}]}