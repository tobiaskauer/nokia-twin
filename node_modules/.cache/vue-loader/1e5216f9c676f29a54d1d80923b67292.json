{"remainingRequest":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokiatwin/src/components/metrics.vue?vue&type=style&index=0&id=4981d1d4&scoped=true&lang=css&","dependencies":[{"path":"/Users/tk/GitHub/nokiatwin/src/components/metrics.vue","mtime":1597157244142},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgp1bCB7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzIwQzVBMCAwJSwgI0JEMTBFMCA0NyUsICNGNUE2MjMgMTAwJSk7CiAgcGFkZGluZzogMjBweCAhaW1wb3J0YW50OwogIGxpc3Qtc3R5bGU6IG5vbmU7CiAgZm9udC1zaXplOiAxMnB4Owp9CnVsIGxpIHsKICB3aWR0aDogaW5saW5lLWJsb2NrOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IDA7CiAgcGFkZGluZzogMnB4IDA7Cn0KCnVsIGxpOmhvdmVyIHsKICBmb250LXdlaWdodDogYm9sZDsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCnNwYW4gewogIHBhZGRpbmc6IDRweCAycHg7CiAgbGluZS1oZWlnaHQ6IDE1MCU7CiAgYm9yZGVyLXJhZGl1czogNHB4Owp9Ci5hY3RpdmUgewogIGJhY2tncm91bmQ6IHdoaXRlOwogIGNvbG9yOiBibGFjazsKICBmb250LXdlaWdodDogYm9sZDsKfQo="},{"version":3,"sources":["metrics.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"metrics.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <ul class=\"metric\">\n    <li v-for=\"metric in metrics\" :key=\"metric.key\">\n      <span v-on:click=\"select(metric)\" :class=\"{active: metric.key == active}\">{{metric.display}}</span>\n    </li>\n  </ul>\n</template>\n\n<script>\n//import * as d3 from 'd3'\n\nexport default {\n  props: {\n  },\n\n  data() {\n    return {\n      active: undefined\n    }\n  },\n\n  computed: {\n    metrics() {\n      return this.$store.state.metrics;\n    }\n  },\n\n  watch: {\n    metrics: function() {\n      this.active = this.metrics[0].key\n    }\n  },\n\n  created () {\n  },\n\n  mounted () {\n  },\n\n  methods: {\n    //emit selected element to sidebar, which will update the query\n    select: function(item) {\n      if(item.key != this.active){\n        this.active = item.key\n        this.$emit('clicked', {identifier: false, filter: 'metric', query: item}) //false to indicate that all lines are affected\n        //this.$forceUpdate()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\nul {\n  background-image: linear-gradient(135deg, #20C5A0 0%, #BD10E0 47%, #F5A623 100%);\n  padding: 20px !important;\n  list-style: none;\n  font-size: 12px;\n}\nul li {\n  width: inline-block;\n  text-align: center;\n  margin: 0;\n  padding: 2px 0;\n}\n\nul li:hover {\n  font-weight: bold;\n  cursor: pointer;\n}\n\nspan {\n  padding: 4px 2px;\n  line-height: 150%;\n  border-radius: 4px;\n}\n.active {\n  background: white;\n  color: black;\n  font-weight: bold;\n}\n</style>\n"]}]}