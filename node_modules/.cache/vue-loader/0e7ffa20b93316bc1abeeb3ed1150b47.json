{"remainingRequest":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokiatwin/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/nokiatwin/src/App.vue","mtime":1606839361813},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBzaWRlYmFyIGZyb20gJy4vY29tcG9uZW50cy9zaWRlYmFyLnZ1ZScKaW1wb3J0IHZpcyBmcm9tICcuL2NvbXBvbmVudHMvdmlzLnZ1ZScKLy9pbXBvcnQgeyBidXMgfSBmcm9tICcuL21haW4nCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czogewogICAgc2lkZWJhciwKICAgIHZpcwogIH0sCgogIGJlZm9yZUNyZWF0ZTogZnVuY3Rpb24oKSB7CiAgICAvL2dldCBncmFudWxhcml0eSBmb3IgZGF0YSBhZ2dyZWdhdGlvbiBmcm9tIFVSTCAoaWYgbm9uIHNldCBvciB2YWx1ZSBpcyBub3QgYW4gb3B0aW9uLCB1c2UgbW9udGhseSkKICAgIHN3aXRjaCh0aGlzLiRyb3V0ZS5xdWVyeS5ncmFudWxhcml0eSkgewogICAgICBjYXNlICJkYXkiOiB0aGlzLiRzdG9yZS5zdGF0ZS5ncmFudWxhcml0eSA9ICIlWS0lbS0lZCI7IGJyZWFrOwogICAgICBjYXNlICJ3ZWVrIjogdGhpcy4kc3RvcmUuc3RhdGUuZ3JhbnVsYXJpdHkgPSAiJVktJVYiOyBicmVhazsKICAgICAgY2FzZSAibW9udGgiOiB0aGlzLiRzdG9yZS5zdGF0ZS5ncmFudWxhcml0eSA9ICIlWS0lbSI7IGJyZWFrOwogICAgICBjYXNlICJ5ZWFyIjogdGhpcy4kc3RvcmUuc3RhdGUuZ3JhbnVsYXJpdHkgPSAiJVkiOyBicmVhazsKICAgICAgZGVmYXVsdDogdGhpcy4kc3RvcmUuc3RhdGUuZ3JhbnVsYXJpdHkgPSAiJVktJW0iOyBicmVhazsKICAgIH0KCiAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldFRhYmxlJyx0aGlzLiRyb3V0ZS5xdWVyeS50YWJsZSkgLy9sb2FkIG1ldHJpY3MgYW5kIGZpbHRlcnMgLS0+IGdldCBlcnJvcnMgYW5kIGRpc3BsYXkgdGhlbQogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldE1ldHJpY3NBbmRGaWx0ZXJzJykgLy9sb2FkIG1ldHJpY3MgYW5kIGZpbHRlcnMKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdnZXRFdmVudHMnKSAvL2xvYWQgbWV0cmljcyBhbmQgZmlsdGVycwogIH0sCiAgbWV0aG9kczogewoKICB9Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"container-fluid h-100\">\n    <div class=\"row justify-content-center h-100\">\n      <sidebar />\n      <vis />\n    </div>\n  </div>\n</template>\n\n<script>\nimport sidebar from './components/sidebar.vue'\nimport vis from './components/vis.vue'\n//import { bus } from './main'\n\nexport default {\n  name: 'App',\n  components: {\n    sidebar,\n    vis\n  },\n\n  beforeCreate: function() {\n    //get granularity for data aggregation from URL (if non set or value is not an option, use monthly)\n    switch(this.$route.query.granularity) {\n      case \"day\": this.$store.state.granularity = \"%Y-%m-%d\"; break;\n      case \"week\": this.$store.state.granularity = \"%Y-%V\"; break;\n      case \"month\": this.$store.state.granularity = \"%Y-%m\"; break;\n      case \"year\": this.$store.state.granularity = \"%Y\"; break;\n      default: this.$store.state.granularity = \"%Y-%m\"; break;\n    }\n\n    this.$store.commit('setTable',this.$route.query.table) //load metrics and filters --> get errors and display them\n    this.$store.dispatch('getMetricsAndFilters') //load metrics and filters\n    this.$store.dispatch('getEvents') //load metrics and filters\n  },\n  methods: {\n\n  }\n}\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Karla:wght@400;700&display=swap');\n\nhtml, body {\n  font-family: 'Karla', sans-serif;\n  height: 100%;\n}\n\n\n#app {\n  font-family: 'Karla', sans-serif;\n}\n</style>\n"]}]}