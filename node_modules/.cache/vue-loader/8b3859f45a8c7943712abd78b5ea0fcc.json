{"remainingRequest":"/Users/tk/GitHub/twin-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/twin-dashboard/src/components/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/twin-dashboard/src/components/main.vue","mtime":1592563873544},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnCmltcG9ydCB7IGJ1cyB9IGZyb20gJy4uL21haW4nCgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdtYWluJywKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHdpZHRoOiA3MDAsCiAgICAgIGhlaWdodDogODAwLAogICAgICByZXN1bHRzOiBbXSwKICAgICAgc2NhbGU6IHVuZGVmaW5lZCwKICAgICAgcXVlcmllcyA6IFsKICAgICAgICB7CiAgICAgICAgICBtZXRyaWM6IHVuZGVmaW5lZCwKICAgICAgICAgIGxvY2F0aW9uOiB1bmRlZmluZWQsCiAgICAgICAgICBjb21wYW55OiB1bmRlZmluZWQsCiAgICAgICAgICAvL2NvdW50cnk6IHVuZGVmaW5lZCwKICAgICAgICAgIC8vcm9sZTogdW5kZWZpbmVkLAogICAgICAgIH0sIHsKICAgICAgICAgIG1ldHJpYzogdW5kZWZpbmVkLAogICAgICAgICAgbG9jYXRpb246IHVuZGVmaW5lZCwKICAgICAgICAgIGNvbXBhbnk6IHVuZGVmaW5lZCwKICAgICAgICAgIC8vcm9sZTogIiIsCiAgICAgICAgICAvL2NvdW50cnk6ICIiLAogICAgICAgIH0KICAgICAgXSwKICAgIH0KICB9LAoKICBjcmVhdGVkICgpIHsgLy9nZXQgaW5pdGlhbCBzZXQgb2YgcXVlcmllcyBmcm9tIHNpZGViYXIgKHByZXNlbGVjdGVkIGVudHJpZXMpCiAgICBidXMuJG9uKCdpbml0aWFsJywgKHBhcmFtZXRlcikgPT4geyAvL2xpc3RlbiBvbiBFdmVudEJ1cyBmb3IgY2hhbmdlZCBxdWVyaWVzCiAgICAgIGlmKHBhcmFtZXRlci5zZWxlY3RvciA9PSAibWV0cmljIikgeyAvL2NoYW5nZSBnbG9iYWwgcXVlcmllcyBpZiB0aGUgbWV0cmljIHdhcyBjaGFuZ2VkCiAgICAgICAgdGhpcy5xdWVyaWVzLmZvckVhY2gocXVlcnkgPT4gewogICAgICAgICAgcXVlcnkubWV0cmljID0gcGFyYW1ldGVyLmtleSAvL2Fzc2luIG5ldyBwYXJhbWV0ZXIKICAgICAgICB9KQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucXVlcmllc1twYXJhbWV0ZXIuaW5kZXhdW3BhcmFtZXRlci5zZWxlY3Rvcl0gPSBwYXJhbWV0ZXIua2V5IC8vb3IganV0IGNoYW5nZSBwYXJhbWV0ZXIgaWYgaXQncyBub3QgdGhlIG1ldHJpYwogICAgICB9CiAgIH0pCiAgIHRoaXMucXVlcmllcy5mb3JFYWNoKChxdWVyeSxpKSA9PiB0aGlzLmdldERhdGEocXVlcnksaSkpCiB9LAoKbW91bnRlZCAoKSB7IC8vd2hlbiBtb3VudGVkCiAgIGxldCBzdmcgPSBkMy5zZWxlY3QoIiN2aXMgc3ZnIikKCiAgIHRoaXMuc2NhbGUgPSB0aGlzLmdldFNjYWxlcygpOwogICBzdmcuYXBwZW5kKCJnIikuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgwLDEwMCkiKS5jYWxsKGQzLmF4aXNCb3R0b20odGhpcy5zY2FsZS54KS50aWNrcyg1KSkKICAgc3ZnLmFwcGVuZCgiZyIpLmNhbGwoZDMuYXhpc0xlZnQodGhpcy5zY2FsZS55KS50aWNrcyg1KSkKICAgdGhpcy5saW5lcyA9IHRoaXMudXBkYXRlKHRoaXMucmVzdWx0cykKCgoKCiAgIC8vc3RhcnQgbGlzdGVuaW5nIG9uIGV2ZW50YnVzIGZvciB1cGRhdGVkCiAgIGJ1cy4kb24oJ3F1ZXJ5JywgKHBhcmFtZXRlcikgPT4gewogICAgIHRoaXMucXVlcmllc1twYXJhbWV0ZXIuaW5kZXhdW3BhcmFtZXRlci5zZWxlY3Rvcl0gPSBwYXJhbWV0ZXIua2V5IC8vY2hhbmdlIHF1ZXJ5CiAgICAgdGhpcy5sYXN0SW5kZXggPSBbcGFyYW1ldGVyLmluZGV4LHBhcmFtZXRlci5zZWxlY3Rvcl0gLy9jaGFuZ2UgaW5kZXggdG8gdHJpZ2dlciB3YXRjaC1mdW5jdGlvbgogICAgIHRoaXMuZ2V0RGF0YSh0aGlzLnF1ZXJpZXNbcGFyYW1ldGVyLmluZGV4XSxwYXJhbWV0ZXIuaW5kZXgpIC8vZ2V0IGRhdGEgZm9yIHVwZGF0ZWQgcXVlcnkKICB9KQp9LAoKbWV0aG9kczogewogIGdldERhdGE6IGZ1bmN0aW9uKHF1ZXJ5LGkpIHsKICAgIGF4aW9zLnBvc3QoICJodHRwOi8vbG9jYWxob3N0OjgwODAvbm9raWEvbm9raWEtdHdpbi9jb21wYXJpc29uLWFwaS5waHA/IixxdWVyeSwKICAgICAge2hlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOCd9CiAgICB9KQogICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgIHRoaXMucmVzdWx0c1tpXSA9IHtxdWVyeTogcXVlcnksIGRhdGE6IHJlc3BvbnNlLmRhdGEsIHBhdGg6ICIifSAvL3NlbmQgcmVzcG9uc2UgdG8gdGhpcy5yZXN1bHQKCiAgICB9KTsKICB9LAoKICBnZXRTY2FsZXM6IGZ1bmN0aW9uKCkgewogICAgbGV0IHBhcnNlVGltZSA9IGQzLnRpbWVQYXJzZSgiJVktJW0iKTsKICAgIGNvbnN0IHggPSBkMy5zY2FsZVRpbWUoKS5yYW5nZShbMCwgNDMwXSk7IC8vVE9ETzogd2lkdGgKICAgIGNvbnN0IHkgPSBkMy5zY2FsZUxpbmVhcigpLnJhbmdlKFsyMTAsIDBdKTsgLy9UT0RPOiBoZWlnaHQKICAgIGQzLmF4aXNMZWZ0KCkuc2NhbGUoeCk7CiAgICBkMy5heGlzQm90dG9tKCkuc2NhbGUoeSk7CgoKCiAgLyogIGxldCBhcnIgPSBbXQogICAgbGV0IHBhcnNlVGltZSA9IGQzLnRpbWVQYXJzZSgiJVktJW0iKTsKICAgIHRoaXMucmVzdWx0cy5mb3JFYWNoKHJlc3VsdCA9PiB7CiAgICAgIHJlc3VsdC5kYXRhLmZvckVhY2goZGF0YSA9PgogICAgICAgIGFyci5wdXNoKGRhdGEpCiAgICAgICkKICAgIH0pKi8KCgoKICAgIC8veC5kb21haW4oZDMuZXh0ZW50KGFyciwgZCA9PiBwYXJzZVRpbWUoZC5kKSkpOwogICAgeC5kb21haW4oW3BhcnNlVGltZSgiMjAwMC0wMSIpLHBhcnNlVGltZSgiMjAyMC0xMiIpXSk7CiAgICAvL3kuZG9tYWluKGQzLmV4dGVudChhcnIsIGQgPT4gK2QucikpOwogICAgeS5kb21haW4oWzAsNV0pOwogICAgcmV0dXJuIHsgeCwgeSB9OwogIH0sCgogIHVwZGF0ZTogZnVuY3Rpb24ocmVzdWx0cykgewoKICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpCiAgICBjb25zb2xlLmxvZyhyZXN1bHRzLmxlbmd0aCkKICAgIGxldCBwYXJzZVRpbWUgPSBkMy50aW1lUGFyc2UoIiVZLSVtIik7CiAgICBsZXQgYXJyID0gW10KCiAgICBjb25zdCBwYXRoID0gZDMubGluZSgpCiAgICAuY3VydmUoZDMuY3VydmVCYXNpcykKICAgICAueChkID0+IHRoaXMuc2NhbGUueChwYXJzZVRpbWUoZC5kKSkpCiAgICAgLnkoZCA9PiB0aGlzLnNjYWxlLnkoZC5yKSk7CgogICAgIHJlc3VsdHMuZm9yRWFjaChyZXN1bHQgPT4gewogICAgICAgY29uc29sZS5sb2coImZvbyIpCiAgICAgICBhcnIucHVzaChwYXRoKHJlc3VsdC5kYXRhKSkKICAgICB9KQogICAgIGNvbnNvbGUubG9nKGFycikKICAgICByZXR1cm4gYXJyOwogIH0sCn0KfQo="},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"main\">\n    {{JSON.stringify(queries)}}\n    <chart />\n    <svg :width=\"width\" :height=\"height\">\n      <path v-for=\"(result,index) in results\" v-bind:key=\"index\" :d=\"result.lines\" />\n    </svg>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport * as d3 from 'd3'\nimport { bus } from '../main'\n\n\nexport default {\n  name: 'main',\n\n  data() {\n    return {\n      width: 700,\n      height: 800,\n      results: [],\n      scale: undefined,\n      queries : [\n        {\n          metric: undefined,\n          location: undefined,\n          company: undefined,\n          //country: undefined,\n          //role: undefined,\n        }, {\n          metric: undefined,\n          location: undefined,\n          company: undefined,\n          //role: \"\",\n          //country: \"\",\n        }\n      ],\n    }\n  },\n\n  created () { //get initial set of queries from sidebar (preselected entries)\n    bus.$on('initial', (parameter) => { //listen on EventBus for changed queries\n      if(parameter.selector == \"metric\") { //change global queries if the metric was changed\n        this.queries.forEach(query => {\n          query.metric = parameter.key //assin new parameter\n        })\n      } else {\n        this.queries[parameter.index][parameter.selector] = parameter.key //or jut change parameter if it's not the metric\n      }\n   })\n   this.queries.forEach((query,i) => this.getData(query,i))\n },\n\nmounted () { //when mounted\n   let svg = d3.select(\"#vis svg\")\n\n   this.scale = this.getScales();\n   svg.append(\"g\").attr(\"transform\", \"translate(0,100)\").call(d3.axisBottom(this.scale.x).ticks(5))\n   svg.append(\"g\").call(d3.axisLeft(this.scale.y).ticks(5))\n   this.lines = this.update(this.results)\n\n\n\n\n   //start listening on eventbus for updated\n   bus.$on('query', (parameter) => {\n     this.queries[parameter.index][parameter.selector] = parameter.key //change query\n     this.lastIndex = [parameter.index,parameter.selector] //change index to trigger watch-function\n     this.getData(this.queries[parameter.index],parameter.index) //get data for updated query\n  })\n},\n\nmethods: {\n  getData: function(query,i) {\n    axios.post( \"http://localhost:8080/nokia/nokia-twin/comparison-api.php?\",query,\n      {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n    })\n    .then((response) => {\n      this.results[i] = {query: query, data: response.data, path: \"\"} //send response to this.result\n\n    });\n  },\n\n  getScales: function() {\n    let parseTime = d3.timeParse(\"%Y-%m\");\n    const x = d3.scaleTime().range([0, 430]); //TODO: width\n    const y = d3.scaleLinear().range([210, 0]); //TODO: height\n    d3.axisLeft().scale(x);\n    d3.axisBottom().scale(y);\n\n\n\n  /*  let arr = []\n    let parseTime = d3.timeParse(\"%Y-%m\");\n    this.results.forEach(result => {\n      result.data.forEach(data =>\n        arr.push(data)\n      )\n    })*/\n\n\n\n    //x.domain(d3.extent(arr, d => parseTime(d.d)));\n    x.domain([parseTime(\"2000-01\"),parseTime(\"2020-12\")]);\n    //y.domain(d3.extent(arr, d => +d.r));\n    y.domain([0,5]);\n    return { x, y };\n  },\n\n  update: function(results) {\n\n    console.log(results)\n    console.log(results.length)\n    let parseTime = d3.timeParse(\"%Y-%m\");\n    let arr = []\n\n    const path = d3.line()\n    .curve(d3.curveBasis)\n     .x(d => this.scale.x(parseTime(d.d)))\n     .y(d => this.scale.y(d.r));\n\n     results.forEach(result => {\n       console.log(\"foo\")\n       arr.push(path(result.data))\n     })\n     console.log(arr)\n     return arr;\n  },\n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.lines path {\n  fill: none;\n  stroke: black\n}\n</style>\n"]}]}