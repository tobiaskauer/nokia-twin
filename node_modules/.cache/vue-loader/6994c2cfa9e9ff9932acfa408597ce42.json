{"remainingRequest":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokiatwin/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/nokiatwin/src/App.vue","mtime":1613992520675},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBzaWRlYmFyIGZyb20gJy4vY29tcG9uZW50cy9zaWRlYmFyLnZ1ZScKaW1wb3J0IHZpcyBmcm9tICcuL2NvbXBvbmVudHMvdmlzLnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBjb21wb25lbnRzOiB7CiAgICBzaWRlYmFyLAogICAgdmlzCiAgfSwKCiAgYmVmb3JlQ3JlYXRlOiBmdW5jdGlvbigpIHsKICAgIC8vZ2V0IGdyYW51bGFyaXR5IGZvciBkYXRhIGFnZ3JlZ2F0aW9uIGZyb20gVVJMIChpZiBub24gc2V0IG9yIHZhbHVlIGlzIG5vdCBhbiBvcHRpb24sIHVzZSBtb250aGx5KQogICAgbGV0IGdyYW51bGFyaXR5CiAgICBzd2l0Y2godGhpcy4kcm91dGUucXVlcnkuZ3JhbnVsYXJpdHkpIHsKICAgICAgY2FzZSAiZGF5IjogZ3JhbnVsYXJpdHkgPSAiJVktJW0tJWQiOyBicmVhazsKICAgICAgY2FzZSAid2VlayI6IGdyYW51bGFyaXR5ID0gIiVZLSVWIjsgYnJlYWs7CiAgICAgIGNhc2UgIm1vbnRoIjogZ3JhbnVsYXJpdHkgPSAiJVktJW0iOyBicmVhazsKICAgICAgY2FzZSAieWVhciI6IGdyYW51bGFyaXR5ID0gIiVZIjsgYnJlYWs7CiAgICAgIGRlZmF1bHQ6IGdyYW51bGFyaXR5ID0gIiVZLSVtIjsgYnJlYWs7CiAgICB9CgogICAgdGhpcy4kc3RvcmUuc3RhdGUuZ3JhbnVsYXJpdHkgPSBncmFudWxhcml0eQoKICAgIC8vc2V0IGdyYW51bGFyaXR5IGluIHVybCBpbiBjYXNlIGl0cyBub3Qgc2V0CiAgICBpZighdGhpcy4kcm91dGUucXVlcnkuZ3JhbnVsYXJpdHkpIHsKICAgICAgbGV0IHJvdXRlID0gdGhpcy4kcm91dGUucXVlcnkgLy9nZXQgY3VycmVudCB1cmwgcGFyYW1ldGVycyBhcyBvYmplY3QKICAgICAgcm91dGUuZ3JhbnVsYXJpdHkgPSAibW9udGgiIC8vZGVmYXVsdAogICAgICBsZXQgcm91dGVTdHJpbmcgPSBPYmplY3QuZW50cmllcyhyb3V0ZSkubWFwKGUgPT4gZW5jb2RlVVJJQ29tcG9uZW50KGVbMF0pICsgIj0iICsgZW5jb2RlVVJJQ29tcG9uZW50KGVbMV0pKS5qb2luKCImIikgLy9wYXJzZSBhIHN0cmluZyBmcm9tIHRoYXQgb2JqZWN0CiAgICAgIGhpc3RvcnkucHVzaFN0YXRlKHt9LG51bGwsdGhpcy4kcm91dGUucGF0aCArICdub2tpYXR3aW4vIy8/JyArIHJvdXRlU3RyaW5nKSAvL3dyaXRlIHRoYXQgdG8gVVJMIChDQVVUSU9OOiB2dWVYIHN0b3JlIGFuZCBVUkwgbWlnaHQgYmUgaW5jb25zaXN0ZW50KQogICAgfQoKICAgIC8vc2V0IGRlZmF1bHQgdGFibGUgKG9yIHRha2UgZnJvbSB1cmwpCiAgICBpZighdGhpcy4kcm91dGUucXVlcnkudGFibGUpIHsKICAgICAgbGV0IHJvdXRlID0gdGhpcy4kcm91dGUucXVlcnkgLy9nZXQgY3VycmVudCB1cmwgcGFyYW1ldGVycyBhcyBvYmplY3QKICAgICAgcm91dGUudGFibGUgPSAiZXhhbXBsZSIgLy9kZWZhdWx0CiAgICAgIGxldCByb3V0ZVN0cmluZyA9IE9iamVjdC5lbnRyaWVzKHJvdXRlKS5tYXAoZSA9PiBlbmNvZGVVUklDb21wb25lbnQoZVswXSkgKyAiPSIgKyBlbmNvZGVVUklDb21wb25lbnQoZVsxXSkpLmpvaW4oIiYiKSAvL3BhcnNlIGEgc3RyaW5nIGZyb20gdGhhdCBvYmplY3QKICAgICAgaGlzdG9yeS5wdXNoU3RhdGUoe30sbnVsbCx0aGlzLiRyb3V0ZS5wYXRoICsgJ25va2lhdHdpbi8jLz8nICsgcm91dGVTdHJpbmcpIC8vd3JpdGUgdGhhdCB0byBVUkwgKENBVVRJT046IHZ1ZVggc3RvcmUgYW5kIFVSTCBtaWdodCBiZSBpbmNvbnNpc3RlbnQpCiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0VGFibGUnLCdleGFtcGxlJykgLy9sb2FkIG1ldHJpY3MgYW5kIGZpbHRlcnMgLS0+IGdldCBlcnJvcnMgYW5kIGRpc3BsYXkgdGhlbQogICAgfSBlbHNlIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXRUYWJsZScsdGhpcy4kcm91dGUucXVlcnkudGFibGUpIC8vbG9hZCBtZXRyaWNzIGFuZCBmaWx0ZXJzIC0tPiBnZXQgZXJyb3JzIGFuZCBkaXNwbGF5IHRoZW0KICAgIH0KCgogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldE1ldHJpY3NBbmRGaWx0ZXJzJykgLy9sb2FkIG1ldHJpY3MgYW5kIGZpbHRlcnMKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdnZXRFdmVudHMnKSAvL2xvYWQgbWV0cmljcyBhbmQgZmlsdGVycwogIH0sCiAgbWV0aG9kczogewoKICB9Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"container-fluid d-flex\">\n    Home button<br>\n    Link to methodology section\n    <div class=\"d-flex\">\n      <sidebar />\n      <vis />\n    </div>\n  </div>\n</template>\n\n<script>\nimport sidebar from './components/sidebar.vue'\nimport vis from './components/vis.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    sidebar,\n    vis\n  },\n\n  beforeCreate: function() {\n    //get granularity for data aggregation from URL (if non set or value is not an option, use monthly)\n    let granularity\n    switch(this.$route.query.granularity) {\n      case \"day\": granularity = \"%Y-%m-%d\"; break;\n      case \"week\": granularity = \"%Y-%V\"; break;\n      case \"month\": granularity = \"%Y-%m\"; break;\n      case \"year\": granularity = \"%Y\"; break;\n      default: granularity = \"%Y-%m\"; break;\n    }\n\n    this.$store.state.granularity = granularity\n\n    //set granularity in url in case its not set\n    if(!this.$route.query.granularity) {\n      let route = this.$route.query //get current url parameters as object\n      route.granularity = \"month\" //default\n      let routeString = Object.entries(route).map(e => encodeURIComponent(e[0]) + \"=\" + encodeURIComponent(e[1])).join(\"&\") //parse a string from that object\n      history.pushState({},null,this.$route.path + 'nokiatwin/#/?' + routeString) //write that to URL (CAUTION: vueX store and URL might be inconsistent)\n    }\n\n    //set default table (or take from url)\n    if(!this.$route.query.table) {\n      let route = this.$route.query //get current url parameters as object\n      route.table = \"example\" //default\n      let routeString = Object.entries(route).map(e => encodeURIComponent(e[0]) + \"=\" + encodeURIComponent(e[1])).join(\"&\") //parse a string from that object\n      history.pushState({},null,this.$route.path + 'nokiatwin/#/?' + routeString) //write that to URL (CAUTION: vueX store and URL might be inconsistent)\n      this.$store.commit('setTable','example') //load metrics and filters --> get errors and display them\n    } else {\n      this.$store.commit('setTable',this.$route.query.table) //load metrics and filters --> get errors and display them\n    }\n\n\n    this.$store.dispatch('getMetricsAndFilters') //load metrics and filters\n    this.$store.dispatch('getEvents') //load metrics and filters\n  },\n  methods: {\n\n  }\n}\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Karla:wght@400;700&display=swap');\n\n.container-fluid {\n  padding: 0 !important;\n}\n\nhtml, body {\n  font-family: 'Karla', sans-serif;\n  height: 100%;\n}\n\n#app {\n  font-family: 'Karla', sans-serif;\n}\n</style>\n"]}]}