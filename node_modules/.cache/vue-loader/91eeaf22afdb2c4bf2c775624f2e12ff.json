{"remainingRequest":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokiatwin/src/components/metrics.vue?vue&type=style&index=0&id=681f9d3a&scoped=true&lang=css&","dependencies":[{"path":"/Users/tk/GitHub/nokiatwin/src/components/metrics.vue","mtime":1595226963019},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnVsIHsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjMjBDNUEwIDAlLCAjQkQxMEUwIDQ3JSwgI0Y1QTYyMyAxMDAlKTsKICBwYWRkaW5nOiAyMHB4ICFpbXBvcnRhbnQ7CiAgbGlzdC1zdHlsZTogbm9uZTsKICBmb250LXNpemU6IDEycHg7Cn0KdWwgbGkgewogIHdpZHRoOiBpbmxpbmUtYmxvY2s7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAycHggMDsKfQoKdWwgbGk6aG92ZXIgewogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGN1cnNvcjogcG9pbnRlcjsKfQoKc3BhbiB7CiAgcGFkZGluZzogNHB4IDJweDsKICBsaW5lLWhlaWdodDogMTUwJTsKICBib3JkZXItcmFkaXVzOiA0cHg7Cn0KLmFjdGl2ZSB7CiAgYmFja2dyb3VuZDogd2hpdGU7CiAgY29sb3I6IGJsYWNrOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cg=="},{"version":3,"sources":["metrics.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"metrics.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <ul class=\"metric\">\n    <li v-for=\"metric in metrics\" :key=\"metric.key\">\n      <span v-on:click=\"select(metric)\" :class=\"{active: metric.key == active}\">{{metric.display}}</span>\n    </li>\n  </ul>\n</template>\n\n<script>\n//import * as d3 from 'd3'\n\nexport default {\n  props: {\n    initial: String\n  },\n\n  data() {\n    return {\n      active: this.initial\n    }\n  },\n\n  computed: {\n    metrics() {\n      return this.$store.state.metrics;\n    }\n  },\n\n  created () {\n  },\n\n  mounted () {\n    //this.$emit('clicked', {identifier: false, filter: 'metric', query: {key: this.initial}})\n  },\n\n  methods: {\n    //emit selected element to sidebar, which will update the query\n    select: function(item) {\n      if(item.key != this.active){\n        this.active = item.key\n        this.$emit('clicked', {identifier: false, filter: 'metric', query: item}) //false to indicate that all lines are affected\n        //this.$forceUpdate()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\nul {\n  background-image: linear-gradient(135deg, #20C5A0 0%, #BD10E0 47%, #F5A623 100%);\n  padding: 20px !important;\n  list-style: none;\n  font-size: 12px;\n}\nul li {\n  width: inline-block;\n  text-align: center;\n  margin: 0;\n  padding: 2px 0;\n}\n\nul li:hover {\n  font-weight: bold;\n  cursor: pointer;\n}\n\nspan {\n  padding: 4px 2px;\n  line-height: 150%;\n  border-radius: 4px;\n}\n.active {\n  background: white;\n  color: black;\n  font-weight: bold;\n}\n</style>\n"]}]}