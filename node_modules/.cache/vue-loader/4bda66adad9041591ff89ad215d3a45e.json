{"remainingRequest":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/vue-bootstrap-typeahead/src/components/VueBootstrapTypeahead.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/vue-bootstrap-typeahead/src/components/VueBootstrapTypeahead.vue","mtime":1614939962320},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/cache-loader/dist/cjs.js","mtime":1614939958022},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/babel-loader/lib/index.js","mtime":1614939957453},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/cache-loader/dist/cjs.js","mtime":1614939958022},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/glassdoor-VIS/Nokia-Twin/node_modules/vue-loader/lib/index.js","mtime":1614939962338}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVCb290c3RyYXBUeXBlYWhlYWRMaXN0IGZyb20gJy4vVnVlQm9vdHN0cmFwVHlwZWFoZWFkTGlzdC52dWUnCmltcG9ydCBSZXNpemVPYnNlcnZlciBmcm9tICdyZXNpemUtb2JzZXJ2ZXItcG9seWZpbGwnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Z1ZUJvb3RzdHJhcFR5cGVoZWFkJywKCiAgY29tcG9uZW50czogewogICAgVnVlQm9vdHN0cmFwVHlwZWFoZWFkTGlzdAogIH0sCgogIHByb3BzOiB7CiAgICBzaXplOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbCwKICAgICAgdmFsaWRhdG9yOiBzaXplID0+IFsnbGcnLCAnc20nXS5pbmRleE9mKHNpemUpID4gLTEKICAgIH0sCiAgICB2YWx1ZTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBkYXRhOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdmFsaWRhdG9yOiBkID0+IGQgaW5zdGFuY2VvZiBBcnJheQogICAgfSwKICAgIHNlcmlhbGl6ZXI6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IChkKSA9PiBkLAogICAgICB2YWxpZGF0b3I6IGQgPT4gZCBpbnN0YW5jZW9mIEZ1bmN0aW9uCiAgICB9LAogICAgYmFja2dyb3VuZFZhcmlhbnQ6IFN0cmluZywKICAgIHRleHRWYXJpYW50OiBTdHJpbmcsCiAgICBpbnB1dENsYXNzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBtYXhNYXRjaGVzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMTAKICAgIH0sCiAgICBtaW5NYXRjaGluZ0NoYXJzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMgogICAgfSwKICAgIHBsYWNlaG9sZGVyOiBTdHJpbmcsCiAgICBwcmVwZW5kOiBTdHJpbmcsCiAgICBhcHBlbmQ6IFN0cmluZwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBzaXplQ2xhc3NlcygpIHsKICAgICAgcmV0dXJuIHRoaXMuc2l6ZSA/IGBpbnB1dC1ncm91cCBpbnB1dC1ncm91cC0ke3RoaXMuc2l6ZX1gIDogJ2lucHV0LWdyb3VwJwogICAgfSwKCiAgICBmb3JtYXR0ZWREYXRhKCkgewogICAgICBpZiAoISh0aGlzLmRhdGEgaW5zdGFuY2VvZiBBcnJheSkpIHsKICAgICAgICByZXR1cm4gW10KICAgICAgfQogICAgICByZXR1cm4gdGhpcy5kYXRhLm1hcCgoZCwgaSkgPT4gewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBpZDogaSwKICAgICAgICAgIGRhdGE6IGQsCiAgICAgICAgICB0ZXh0OiB0aGlzLnNlcmlhbGl6ZXIoZCkKICAgICAgICB9CiAgICAgIH0pCiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgcmVzaXplTGlzdChlbCkgewogICAgICBjb25zdCByZWN0ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkKICAgICAgY29uc3QgbGlzdFN0eWxlID0gdGhpcy4kcmVmcy5saXN0LiRlbC5zdHlsZQoKICAgICAgLy8gU2V0IHRoZSB3aWR0aCBvZiB0aGUgbGlzdCBvbiByZXNpemUKICAgICAgbGlzdFN0eWxlLndpZHRoID0gcmVjdC53aWR0aCArICdweCcKCiAgICAgIC8vIFNldCB0aGUgbWFyZ2luIHdoZW4gdGhlIHByZXBlbmQgcHJvcCBvciBzbG90IGlzIHBvcHVsYXRlZAogICAgICAvLyAoc2V0dGluZyB0aGUgImxlZnQiIENTUyBwcm9wZXJ0eSBkb2Vzbid0IHdvcmspCiAgICAgIGlmICh0aGlzLiRyZWZzLnByZXBlbmREaXYpIHsKICAgICAgICBjb25zdCBwcmVwZW5kUmVjdCA9IHRoaXMuJHJlZnMucHJlcGVuZERpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKQogICAgICAgIGxpc3RTdHlsZS5tYXJnaW5MZWZ0ID0gcHJlcGVuZFJlY3Qud2lkdGggKyAncHgnCiAgICAgIH0KICAgIH0sCgogICAgaGFuZGxlSGl0KGV2dCkgewogICAgICBpZiAodHlwZW9mIHRoaXMudmFsdWUgIT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBldnQudGV4dCkKICAgICAgfQoKICAgICAgdGhpcy5pbnB1dFZhbHVlID0gZXZ0LnRleHQKICAgICAgdGhpcy4kZW1pdCgnaGl0JywgZXZ0LmRhdGEpCiAgICAgIHRoaXMuJHJlZnMuaW5wdXQuYmx1cigpCiAgICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2UKICAgIH0sCgogICAgaGFuZGxlQmx1cihldnQpIHsKICAgICAgY29uc3QgdGd0ID0gZXZ0LnJlbGF0ZWRUYXJnZXQKICAgICAgaWYgKHRndCAmJiB0Z3QuY2xhc3NMaXN0LmNvbnRhaW5zKCd2YnN0LWl0ZW0nKSkgewogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2UKICAgIH0sCgogICAgaGFuZGxlSW5wdXQobmV3VmFsdWUpIHsKICAgICAgdGhpcy5pbnB1dFZhbHVlID0gbmV3VmFsdWUKCiAgICAgIC8vIElmIHYtbW9kZWwgaXMgYmVpbmcgdXNlZCwgZW1pdCBhbiBpbnB1dCBldmVudAogICAgICBpZiAodHlwZW9mIHRoaXMudmFsdWUgIT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBuZXdWYWx1ZSkKICAgICAgfQogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0ZvY3VzZWQ6IGZhbHNlLAogICAgICBpbnB1dFZhbHVlOiAnJwogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRfcm8gPSBuZXcgUmVzaXplT2JzZXJ2ZXIoZSA9PiB7CiAgICAgIHRoaXMucmVzaXplTGlzdCh0aGlzLiRyZWZzLmlucHV0KQogICAgfSkKICAgIHRoaXMuJF9yby5vYnNlcnZlKHRoaXMuJHJlZnMuaW5wdXQpCiAgICB0aGlzLiRfcm8ub2JzZXJ2ZSh0aGlzLiRyZWZzLmxpc3QuJGVsKQogIH0sCgogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLiRfcm8uZGlzY29ubmVjdCgpCiAgfQp9Cg=="},{"version":3,"sources":["VueBootstrapTypeahead.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"VueBootstrapTypeahead.vue","sourceRoot":"node_modules/vue-bootstrap-typeahead/src/components","sourcesContent":["<template>\n  <div>\n    <div :class=\"sizeClasses\">\n      <div ref=\"prependDiv\" v-if=\"$slots.prepend || prepend\" class=\"input-group-prepend\">\n        <slot name=\"prepend\">\n          <span class=\"input-group-text\">{{ prepend }}</span>\n        </slot>\n      </div>\n      <input\n        ref=\"input\"\n        type=\"search\"\n        :class=\"`form-control ${inputClass}`\"\n        :placeholder=\"placeholder\"\n        :aria-label=\"placeholder\"\n        :value=\"inputValue\"\n        @focus=\"isFocused = true\"\n        @blur=\"handleBlur\"\n        @input=\"handleInput($event.target.value)\"\n        autocomplete=\"off\"\n      />\n      <div v-if=\"$slots.append || append\" class=\"input-group-append\">\n        <slot name=\"append\">\n          <span class=\"input-group-text\">{{ append }}</span>\n        </slot>\n      </div>\n    </div>\n    <vue-bootstrap-typeahead-list\n      class=\"vbt-autcomplete-list\"\n      ref=\"list\"\n      v-show=\"isFocused && data.length > 0\"\n      :query=\"inputValue\"\n      :data=\"formattedData\"\n      :background-variant=\"backgroundVariant\"\n      :text-variant=\"textVariant\"\n      :maxMatches=\"maxMatches\"\n      :minMatchingChars=\"minMatchingChars\"\n      @hit=\"handleHit\"\n    >\n      <!-- pass down all scoped slots -->\n      <template v-for=\"(slot, slotName) in $scopedSlots\" :slot=\"slotName\" slot-scope=\"{ data, htmlText }\">\n        <slot :name=\"slotName\" v-bind=\"{ data, htmlText }\"></slot>\n      </template>\n      <!-- below is the right solution, however if the user does not provide a scoped slot, vue will still set $scopedSlots.suggestion to a blank scope\n      <template v-if=\"$scopedSlots.suggestion\" slot=\"suggestion\" slot-scope=\"{ data, htmlText }\">\n        <slot name=\"suggestion\" v-bind=\"{ data, htmlText }\" />\n      </template>-->\n    </vue-bootstrap-typeahead-list>\n  </div>\n</template>\n\n<script>\nimport VueBootstrapTypeaheadList from './VueBootstrapTypeaheadList.vue'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nexport default {\n  name: 'VueBootstrapTypehead',\n\n  components: {\n    VueBootstrapTypeaheadList\n  },\n\n  props: {\n    size: {\n      type: String,\n      default: null,\n      validator: size => ['lg', 'sm'].indexOf(size) > -1\n    },\n    value: {\n      type: String\n    },\n    data: {\n      type: Array,\n      required: true,\n      validator: d => d instanceof Array\n    },\n    serializer: {\n      type: Function,\n      default: (d) => d,\n      validator: d => d instanceof Function\n    },\n    backgroundVariant: String,\n    textVariant: String,\n    inputClass: {\n      type: String,\n      default: ''\n    },\n    maxMatches: {\n      type: Number,\n      default: 10\n    },\n    minMatchingChars: {\n      type: Number,\n      default: 2\n    },\n    placeholder: String,\n    prepend: String,\n    append: String\n  },\n\n  computed: {\n    sizeClasses() {\n      return this.size ? `input-group input-group-${this.size}` : 'input-group'\n    },\n\n    formattedData() {\n      if (!(this.data instanceof Array)) {\n        return []\n      }\n      return this.data.map((d, i) => {\n        return {\n          id: i,\n          data: d,\n          text: this.serializer(d)\n        }\n      })\n    }\n  },\n\n  methods: {\n    resizeList(el) {\n      const rect = el.getBoundingClientRect()\n      const listStyle = this.$refs.list.$el.style\n\n      // Set the width of the list on resize\n      listStyle.width = rect.width + 'px'\n\n      // Set the margin when the prepend prop or slot is populated\n      // (setting the \"left\" CSS property doesn't work)\n      if (this.$refs.prependDiv) {\n        const prependRect = this.$refs.prependDiv.getBoundingClientRect()\n        listStyle.marginLeft = prependRect.width + 'px'\n      }\n    },\n\n    handleHit(evt) {\n      if (typeof this.value !== 'undefined') {\n        this.$emit('input', evt.text)\n      }\n\n      this.inputValue = evt.text\n      this.$emit('hit', evt.data)\n      this.$refs.input.blur()\n      this.isFocused = false\n    },\n\n    handleBlur(evt) {\n      const tgt = evt.relatedTarget\n      if (tgt && tgt.classList.contains('vbst-item')) {\n        return\n      }\n      this.isFocused = false\n    },\n\n    handleInput(newValue) {\n      this.inputValue = newValue\n\n      // If v-model is being used, emit an input event\n      if (typeof this.value !== 'undefined') {\n        this.$emit('input', newValue)\n      }\n    }\n  },\n\n  data() {\n    return {\n      isFocused: false,\n      inputValue: ''\n    }\n  },\n\n  mounted() {\n    this.$_ro = new ResizeObserver(e => {\n      this.resizeList(this.$refs.input)\n    })\n    this.$_ro.observe(this.$refs.input)\n    this.$_ro.observe(this.$refs.list.$el)\n  },\n\n  beforeDestroy() {\n    this.$_ro.disconnect()\n  }\n}\n</script>\n\n<style scoped>\n  .vbt-autcomplete-list {\n    padding-top: 5px;\n    position: absolute;\n    max-height: 350px;\n    overflow-y: auto;\n    z-index: 999;\n  }\n</style>\n"]}]}