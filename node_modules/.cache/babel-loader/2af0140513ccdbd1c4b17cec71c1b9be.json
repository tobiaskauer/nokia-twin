{"remainingRequest":"/Users/tk/GitHub/nokia-twin/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/nokia-twin/node_modules/eslint-loader/index.js??ref--13-0!/Users/tk/GitHub/nokia-twin/src/store/store.js","dependencies":[{"path":"/Users/tk/GitHub/nokia-twin/src/store/store.js","mtime":1596617535675},{"path":"/Users/tk/GitHub/nokia-twin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tk/GitHub/nokia-twin/src/store/store.js"],"names":["Vue","Vuex","axios","uniqid","use","Store","state","lines","metrics","key","display","filterColumns","name","db_columns","map","filter","elements","forEach","column","query","type","listSelector","post","headers","then","response","data","element","item","count","push","sort","a","b","addedFilters","context","date","text","getters","getFilterColumns","col","visible","slice","added","x","toLowerCase","concat","autocomplete","getLines","getContext","mutations","addLine","line","colors","color","length","filters","dbcol","undefined","identifier","time","set","removeLine","splice","findIndex","writeQuery","payload","index","writeValues","values","addFilter","actions","getData","dispatch","commit","i","callAPI","find","metric","catch","error","console","log"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport uniqid from 'uniqid';\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    lines: [],\n    metrics:[\n      {key: \"rating_overall\", display: \"Overall Ratings\"},\n      {key: \"rating_balance\", display: \"Work-Life Balance\"},\n      {key: \"rating_culture\", display: \"Culture & Values\"},\n      {key: \"rating_career\", display: \"Career Opportunities\"},\n      {key: \"rating_comp\", display: \"Compensation & Benefits\"},\n      {key: \"rating_mgmt\", display: \"Senior Leadership\"}\n    ],\n\n    //generate lists of columns, then fill them with filters\n    filterColumns: [\n      {name: \"Company\", db_columns: [\"company\"]},\n      {name: \"Location\", db_columns: [\"location\",\"country\"]},\n      //{name: \"Role\", db_columns: [\"employee_title\"]},\n    ].map(filter => {\n      filter.elements = [] //bucket to fill\n\n      filter.db_columns.forEach(column => {\n        let query = {\n          type: 'selectors',\n          listSelector: column\n        }\n        //axios.post( \"http://localhost:8080/nokia-twin/api.php?\",query,\n        axios.post( \"http://localhost/nokiatwin/api.php\",query,  //for development, this is overwritten in vue.config.js\n          {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n        })\n        .then(response => {\n          response.data.forEach(element => { //for each item in the list, create a unique object to pass on\n            let item = {\n              key: element[column],\n              filter: column,\n              count: element.count\n            }\n            filter.elements.push(item) //fill the bucket\n          })\n          filter.elements.sort((a,b) => b.count - a.count)\n        })\n      })\n\n      return filter\n    }),\n\n     //initialize array for filters the user added via typeahead\n    addedFilters: [],\n\n    //time-based annotations\n    context: [\n      {date: \"2009-11\", text:\"Barrack Obama elected president\"},\n      {date: \"2017-06\", text:\"Tobi starts at Bell Labs\"}\n    ]\n  },\n\n\n\n  getters: {\n    //get reduced list of possible values to display\n    getFilterColumns: state => {\n      return state.filterColumns.map(col => {\n        let visible = col.elements.slice(0,5) //select five most frequent labels\n        //identify filters that were added for the current column\n        let added = state.addedFilters.filter(x=>x.filter.toLowerCase() == col.name.toLowerCase()) //select added filters that match the column\n        visible = visible.concat(added)\n        return {\n          name: col.name,\n          elements: visible,\n          autocomplete: col.elements\n        }\n      })\n    },\n\n    getLines: (state) => state.lines,\n    getContext: (state) => state.context\n  },\n\n\n  mutations: {\n    //initialize a new line (incl. filters in sidebar and actual line in graph), triggered from sidebar\n    addLine(state) {\n      let line = {}\n      //set a color for to identify the line\n      //TODO Does not select last two colors for some reason\n      let colors = [\"#20C5A0\",\"#BD10E0\",\"#F5A623\",\"4A90E2\",\"ACC000\"]\n      line.color = colors[state.lines.length]\n\n      //TODO: FIX! adding a new line flushes queries of existing lines\n      //check if any parameters were passed, if so, take them, if not initialize empty query for db with all possible filters\n      //line.query = (Object.keys(query).length !== 0) ? query : {}\n      line.query = {}\n\n      let filters = []\n      state.filterColumns.forEach(col => {\n        col.db_columns.forEach(dbcol => {\n          filters.push(dbcol)\n        })\n      })\n      filters.push(\"metric\")\n      filters.forEach(filter => line.query[filter] = undefined)\n      line.identifier = uniqid.time() //unique identifier to update query or delete line\n      Vue.set(state.lines, state.lines.length, line) //push new line at end of lines array\n    },\n\n    //remove line from sidebar\n    removeLine(state, identifier) {\n      if(state.lines.length > 1)\n      state.lines.splice(state.lines.findIndex(x=>x.identifier == identifier),1)\n    },\n\n    //write query to lines\n    writeQuery(state, payload) {\n      //console.log(\"writeQuery() called\", payload)\n      Vue.set(state.lines[payload.index].query, payload.filter, payload.key)\n    },\n\n    //write A PI return to lines (gotten from callAPI())\n    writeValues(state, payload) {\n      //console.log(\"writeData called\", payload)\n      Vue.set(state.lines[payload.index], \"values\", payload.values)\n    },\n\n    //add filter via typeahead\n    addFilter(state, payload) {\n      Vue.set(state.addedFilters,state.addedFilters.length,payload)\n    }\n\n  },\n\n\n\n  actions: {\n    getData({dispatch, commit, state}, payload) {\n      //console.log(\"getData() called\", payload)\n      if(payload.identifier) {\n        commit('writeQuery',{\n          index: state.lines.findIndex(x=>x.identifier == payload.identifier),\n          filter: payload.query.filter,\n          key: payload.query.key\n        })\n        dispatch('callAPI',payload.identifier)\n      } else {\n        state.lines.forEach((line, i) => {\n          commit('writeQuery',{\n            index: i,\n            filter: 'metric',\n            key: payload.query.key\n          })\n          dispatch('callAPI',line.identifier)\n        })\n      }\n    },\n\n    //get data from API\n    callAPI( {commit,state}, identifier) {\n      let query = state.lines.find(x=>x.identifier == identifier).query\n      if(!query.metric) query.metric = \"rating_overall\" //avoid crash because initial metric has not been defined\n      query.type = 'result' //set query end (quasi endpoint) for api.php\n\n      //axios.post( \"http://localhost:8080/nokia-twin/api.php?\",query,\n      axios.post( \"http://localhost/nokiatwin/api.php?\",query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n        commit('writeValues',{\n          index: state.lines.findIndex(x=>x.identifier == identifier),\n          values: response.data\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      });\n\n    }\n  }\n})\n"]}]}