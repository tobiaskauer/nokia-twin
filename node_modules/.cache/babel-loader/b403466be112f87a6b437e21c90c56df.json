{"remainingRequest":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/eslint-loader/index.js??ref--13-0!/Users/tk/GitHub/nokia-twin/twin-dashboard/src/store/index.js","dependencies":[{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/src/store/index.js","mtime":1594335414763},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB1bmlxaWQgZnJvbSAndW5pcWlkJzsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICBsaW5lczogW10sCiAgICBtZXRyaWNzOiBbewogICAgICBrZXk6ICJyYXRpbmdfb3ZlcmFsbCIsCiAgICAgIGRpc3BsYXk6ICJPdmVyYWxsIFJhdGluZ3MiCiAgICB9LCB7CiAgICAgIGtleTogInJhdGluZ19iYWxhbmNlIiwKICAgICAgZGlzcGxheTogIldvcmstTGlmZSBCYWxhbmNlIgogICAgfSwgewogICAgICBrZXk6ICJyYXRpbmdfY3VsdHVyZSIsCiAgICAgIGRpc3BsYXk6ICJDdWx0dXJlICYgVmFsdWVzIgogICAgfSwgewogICAgICBrZXk6ICJyYXRpbmdfY2FyZWVyIiwKICAgICAgZGlzcGxheTogIkNhcmVlciBPcHBvcnR1bml0aWVzIgogICAgfSwgewogICAgICBrZXk6ICJyYXRpbmdfY29tcCIsCiAgICAgIGRpc3BsYXk6ICJDb21wZW5zYXRpb24gJiBCZW5lZml0cyIKICAgIH0sIHsKICAgICAga2V5OiAicmF0aW5nX21nbXQiLAogICAgICBkaXNwbGF5OiAiU2VuaW9yIExlYWRlcnNoaXAiCiAgICB9XSwKICAgIGZpbHRlckNvbHVtbnM6IFt7CiAgICAgIG5hbWU6ICJDb21wYW55IiwKICAgICAgZGJfY29sdW1uczogWyJjb21wYW55Il0KICAgIH0sIHsKICAgICAgbmFtZTogIlJvbGUiLAogICAgICBkYl9jb2x1bW5zOiBbImVtcGxveWVlX3RpdGxlIl0KICAgIH0sIHsKICAgICAgbmFtZTogIkxvY2F0aW9uIiwKICAgICAgZGJfY29sdW1uczogWyJsb2NhdGlvbiIsICJjb3VudHJ5Il0KICAgIH1dLm1hcChmdW5jdGlvbiAoZmlsdGVyKSB7CiAgICAgIGZpbHRlci5lbGVtZW50cyA9IFtdOyAvL2J1Y2tldCB0byBmaWxsCgogICAgICBmaWx0ZXIuZGJfY29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uIChjb2x1bW4pIHsKICAgICAgICB2YXIgcXVlcnkgPSB7CiAgICAgICAgICB0eXBlOiAnc2VsZWN0b3JzJywKICAgICAgICAgIGxpc3RTZWxlY3RvcjogY29sdW1uCiAgICAgICAgfTsKICAgICAgICBheGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjgwODAvbm9raWEvbm9raWEtdHdpbi9jb21wYXJpc29uLWFwaS5waHA/IiwgcXVlcnksIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLTgnCiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIHJlc3BvbnNlLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgICAgICAvL2ZvciBlYWNoIGl0ZW0gaW4gdGhlIGxpc3QsIGNyZWF0ZSBhIHVuaXF1ZSBvYmplY3QgdG8gcGFzcyBvbgogICAgICAgICAgICB2YXIgaXRlbSA9IHsKICAgICAgICAgICAgICBrZXk6IGVsZW1lbnRbY29sdW1uXSwKICAgICAgICAgICAgICBmaWx0ZXI6IGNvbHVtbiwKICAgICAgICAgICAgICBjb3VudDogZWxlbWVudC5jb3VudAogICAgICAgICAgICB9OwogICAgICAgICAgICBmaWx0ZXIuZWxlbWVudHMucHVzaChpdGVtKTsgLy9maWxsIHRoZSBidWNrZXQKICAgICAgICAgIH0pOwogICAgICAgICAgZmlsdGVyLmVsZW1lbnRzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgcmV0dXJuIGIuY291bnQgLSBhLmNvdW50OwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gZmlsdGVyOwogICAgfSkKICB9LAogIGdldHRlcnM6IHsKICAgIC8vZ2V0IHJlZHVjZWQgbGlzdCBvZiBwb3NzaWJsZSB2YWx1ZXMgdG8gZGlzcGxheQogICAgZ2V0RmlsdGVyQ29sdW1uczogZnVuY3Rpb24gZ2V0RmlsdGVyQ29sdW1ucyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZmlsdGVyQ29sdW1ucy5tYXAoZnVuY3Rpb24gKGZpbHRlcikgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBuYW1lOiBmaWx0ZXIubmFtZSwKICAgICAgICAgIGVsZW1lbnRzOiBmaWx0ZXIuZWxlbWVudHMuc2xpY2UoMCwgNSkKICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgICBnZXRBUElSZXN1bHQ6IGZ1bmN0aW9uIGdldEFQSVJlc3VsdChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUubGluZXMubWFwKGZ1bmN0aW9uIChsaW5lKSB7CiAgICAgICAgcmV0dXJuIGxpbmUucXVlcnk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICAvL2luaXRpYWxpemUgYSBuZXcgbGluZSAoaW5jbC4gZmlsdGVycyBpbiBzaWRlYmFyIGFuZCBhY3R1YWwgbGluZSBpbiBncmFwaCksIHRyaWdnZXJlZCBmcm9tIHNpZGViYXIKICAgIGFkZExpbmU6IGZ1bmN0aW9uIGFkZExpbmUoc3RhdGUsIHBhcmFtZXRlcikgewogICAgICAvL3NldCBhIGNvbG9yIGZvciB0byBpZGVudGlmeSB0aGUgbGluZQogICAgICB2YXIgY29sb3JzID0gWyIjMjBDNUEwIiwgIiNCRDEwRTAiLCAiI0Y1QTYyMyJdOwogICAgICBwYXJhbWV0ZXIuY29sb3IgPSBjb2xvcnNbc3RhdGUubGluZXMubGVuZ3RoXTsgLy9pbml0aWFsaXplIGVtcHR5IHF1ZXJ5IGZvciBkYiB3aXRoIGFsbCBwb3NzaWJsZSBmaWx0ZXJzCgogICAgICBwYXJhbWV0ZXIucXVlcnkgPSB7fTsKICAgICAgdmFyIGZpbHRlcnMgPSBbXTsKICAgICAgc3RhdGUuZmlsdGVyQ29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uIChjb2wpIHsKICAgICAgICBjb2wuZGJfY29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uIChkYmNvbCkgewogICAgICAgICAgZmlsdGVycy5wdXNoKGRiY29sKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIGZpbHRlcnMuZm9yRWFjaChmdW5jdGlvbiAoZmlsdGVyKSB7CiAgICAgICAgcmV0dXJuIHBhcmFtZXRlci5xdWVyeVtmaWx0ZXJdID0gdW5kZWZpbmVkOwogICAgICB9KTsKICAgICAgcGFyYW1ldGVyLmlkZW50aWZpZXIgPSB1bmlxaWQudGltZSgpOyAvL3VuaXF1ZSBpZGVudGlmaWVyIHRvIHVwZGF0ZSBxdWVyeSBvciBkZWxldGUgbGluZQoKICAgICAgVnVlLnNldChzdGF0ZS5saW5lcywgc3RhdGUubGluZXMubGVuZ3RoLCBwYXJhbWV0ZXIpOwogICAgfSwKICAgIC8vdXBkYXRlIHF1ZXJ5IG9mIGFuIGV4aXN0aW5nIGxpbmUgdG8gZmV0Y2gKICAgIHVwZGF0ZVF1ZXJ5OiBmdW5jdGlvbiB1cGRhdGVRdWVyeShzdGF0ZSwgcGF5bG9hZCkgewogICAgICB2YXIgbGluZSA9IHN0YXRlLmxpbmVzLmZpbmQoZnVuY3Rpb24gKHgpIHsKICAgICAgICByZXR1cm4geC5pZGVudGlmaWVyID09IHBheWxvYWQubGluZTsKICAgICAgfSlbInF1ZXJ5Il07IC8vdXNlIGlkIHRvIGZpbmQgbGluZSBhbmQgY29ycmVzcG9uZGluZyBxdWVyeQoKICAgICAgdmFyIHF1ZXJ5ID0gcGF5bG9hZC5xdWVyeS5maWx0ZXI7IC8vd2hhdCBmaWx0ZXIgZG8gd2Ugd2FudCB0byB1cGRhdGU/CgogICAgICBpZiAobGluZSkgewogICAgICAgIC8vaWYgd2UncmUgbm90IHVwZGF0aW5nIG1ldHJpY3MKICAgICAgICBzdGF0ZS5saW5lcy5maW5kKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICByZXR1cm4geC5pZGVudGlmaWVyID09IHBheWxvYWQubGluZTsKICAgICAgICB9KVsicXVlcnkiXTsKICAgICAgICBWdWUuc2V0KGxpbmUsIHF1ZXJ5LCBwYXlsb2FkLnF1ZXJ5LmtleSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy91cGRhdGluZyBtZXRyaWNzIHdpbGwgYWZmZWN0IGFsbCBsaW5lcwogICAgICAgIHN0YXRlcy5saW5lcy5mb3JFYWNoKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICBWdWUuc2V0KHgsIHF1ZXJ5LCBwYXlsb2FkLnF1ZXJ5LmtleSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIGFjdGlvbnM6IHsvLyBwdXQgYXN5bmNocm9ub3VzIGZ1bmN0aW9ucyB0aGF0IGNhbiBjYWxsIG9uZSBvciBtb3JlIG11dGF0aW9uIGZ1bmN0aW9ucwogIH0KfSk7"},{"version":3,"sources":["/Users/tk/GitHub/nokia-twin/twin-dashboard/src/store/index.js"],"names":["Vue","Vuex","axios","uniqid","use","Store","state","lines","metrics","key","display","filterColumns","name","db_columns","map","filter","elements","forEach","column","query","type","listSelector","post","headers","then","response","data","element","item","count","push","sort","a","b","getters","getFilterColumns","slice","getAPIResult","line","mutations","addLine","parameter","colors","color","length","filters","col","dbcol","undefined","identifier","time","set","updateQuery","payload","find","x","states","actions"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport uniqid from 'uniqid';\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    lines: [],\n    metrics:[\n      {key: \"rating_overall\", display: \"Overall Ratings\"},\n      {key: \"rating_balance\", display: \"Work-Life Balance\"},\n      {key: \"rating_culture\", display: \"Culture & Values\"},\n      {key: \"rating_career\", display: \"Career Opportunities\"},\n      {key: \"rating_comp\", display: \"Compensation & Benefits\"},\n      {key: \"rating_mgmt\", display: \"Senior Leadership\"}\n    ],\n    filterColumns: [\n      {name: \"Company\", db_columns: [\"company\"]},\n      {name: \"Role\", db_columns: [\"employee_title\"]},\n      {name: \"Location\", db_columns: [\"location\",\"country\"]},\n    ].map(filter => {\n      filter.elements = [] //bucket to fill\n\n      filter.db_columns.forEach(column => {\n        let query = {\n          type: 'selectors',\n          listSelector: column\n        }\n        axios.post( \"http://localhost:8080/nokia/nokia-twin/comparison-api.php?\",query,\n          {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n        })\n        .then(response => {\n          response.data.forEach(element => { //for each item in the list, create a unique object to pass on\n            let item = {\n              key: element[column],\n              filter: column,\n              count: element.count\n            }\n            filter.elements.push(item) //fill the bucket\n          })\n          filter.elements.sort((a,b) => b.count - a.count)\n        })\n      })\n\n      return filter\n    })\n  },\n  getters: {\n\n    //get reduced list of possible values to display\n    getFilterColumns: state => {\n      return state.filterColumns.map(filter => {\n        return {\n          name: filter.name,\n          elements: filter.elements.slice(0,5)\n        }\n      })\n    },\n\n    getAPIResult: (state) => {\n      return state.lines.map(line => {\n        return line.query\n      })\n    }\n\n  },\n\n  mutations: {\n\n    //initialize a new line (incl. filters in sidebar and actual line in graph), triggered from sidebar\n    addLine(state, parameter) {\n      //set a color for to identify the line\n      let colors = [\"#20C5A0\",\"#BD10E0\",\"#F5A623\"]\n      parameter.color = colors[state.lines.length]\n\n      //initialize empty query for db with all possible filters\n      parameter.query = {}\n      let filters = []\n      state.filterColumns.forEach(col => {\n        col.db_columns.forEach(dbcol => {\n          filters.push(dbcol)\n        })\n      })\n      filters.forEach(filter => parameter.query[filter] = undefined)\n\n      parameter.identifier = uniqid.time() //unique identifier to update query or delete line\n      Vue.set(state.lines, state.lines.length, parameter)\n    },\n\n    //update query of an existing line to fetch\n    updateQuery(state, payload) {\n      let line = state.lines.find(x=>x.identifier == payload.line)[\"query\"] //use id to find line and corresponding query\n      let query = payload.query.filter //what filter do we want to update?\n      if(line) { //if we're not updating metrics\n        state.lines.find(x=>x.identifier == payload.line)[\"query\"]\n        Vue.set(line, query, payload.query.key)\n      } else { //updating metrics will affect all lines\n        states.lines.forEach(x => {\n          Vue.set(x, query, payload.query.key)\n        })\n      }\n\n    }\n  },\n\n  actions: {\n    // put asynchronous functions that can call one or more mutation functions\n  }\n})\n"]}]}