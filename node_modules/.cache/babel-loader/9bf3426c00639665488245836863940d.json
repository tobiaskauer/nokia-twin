{"remainingRequest":"/Users/tk/GitHub/nokiatwin/node_modules/thread-loader/dist/cjs.js!/Users/tk/GitHub/nokiatwin/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokiatwin/src/components/sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/nokiatwin/src/components/sidebar.vue","mtime":1597157639378},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGZpbHRlclJvdyBmcm9tICcuL2ZpbHRlclJvdy52dWUnOwppbXBvcnQgbWV0cmljcyBmcm9tICcuL21ldHJpY3MudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiB7CiAgICAvL2dldCBsaW5lcyAoaW5jbC4gY29sb3IsIGlkZW50aWZpZXIsIGZpbHRlcnMsIGFuZCBzZWxlY3Rpb25zKSBmcm9tIHN0b3JlCiAgICBsaW5lczogZnVuY3Rpb24gbGluZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5saW5lczsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvL2lmIHRoZXJlIGFyZSBubyBsaW5lcyBvbiBzdG9yZSB3aGVuIHBhZ2UgaXMgbW91bnRlZCwgYWRkIG9uZSB0byBhbHdheXMgaGF2ZSBvbmUgbGluZSBhdmFpbGFibGUKICAgIGlmICh0aGlzLmxpbmVzLmxlbmd0aCA8IDEpIHsKICAgICAgdGhpcy5hZGRMaW5lKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL2FkZCBuZXcgbGluZXMKICAgIGFkZExpbmU6IGZ1bmN0aW9uIGFkZExpbmUoKSB7CiAgICAgIC8vVE9ETzogaWYgdGhlcmUgYXJlIGFueSBwcmV2aW91cyBsaW5lcywgZ2V0IHRoZWlyIHF1ZXJpZXMgYW5kIHBhc3MgdGhlbSB0byBhZGRMaW5lKCkKICAgICAgLy9sZXQgcHJldmlvdXNRdWVyeSA9IHRoaXMubGluZXNbdGhpcy5saW5lcy5sZW5ndGgtMV0gPT0gdW5kZWZpbmVkID8ge30gOiB0aGlzLmxpbmVzW3RoaXMubGluZXMubGVuZ3RoLTFdLnF1ZXJ5CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkTGluZScpOyAvL2FmdGVyIGFkZGluZyB0aGUgbGluZSwgZ2V0IGl0J3MgZGF0YQoKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldERhdGEnLCB7CiAgICAgICAgaWRlbnRpZmllcjogZmFsc2UsCiAgICAgICAgZmlsdGVyOiAibWV0cmljIiwKICAgICAgICBxdWVyeTogewogICAgICAgICAga2V5OiAibWV0cmljX3JhdGluZ19vdmVyYWxsIgogICAgICAgIH0KICAgICAgfSk7IC8vVE9ETyByZS1pbnRyb2R1Y2UgZ2V0dGluZyBkYXRhIGFmdGVyIGxpbmUgaXMgYWRkZWQKICAgIH0sCiAgICAvL2FzIHNvb24gYXMgYSBmaWx0ZXIgaXMgY2xpY2tlZCBpbiBmaWx0ZXJSb3cgKGNoaWxkIGNvbXBvbmVudCksIGdldCBpdHMgZGF0YSBmcm9tIHN0b3JlICh3aGljaCB3aWxsIHRyaWdnZXIgdmlzIHVwZGF0ZSkKICAgIHNlbGVjdDogZnVuY3Rpb24gc2VsZWN0KHBheWxvYWQpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldERhdGEnLCBwYXlsb2FkKTsgLy91c2Ugc2VwZXJhdGUgYWN0aW9uIGZvciBBUEkgcmVxdWVzdCAoY2FudCBjYWxsIGFjdGlvbiBmcm9tIG11dGF0aW9uKQogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgZmlsdGVyUm93OiBmaWx0ZXJSb3csCiAgICBtZXRyaWNzOiBtZXRyaWNzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9Cn07"},{"version":3,"sources":["sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,OAAA,SAAA,MAAA,iBAAA;AACA,OAAA,OAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,QAAA,EAAA;AACA;AACA,IAAA,KAFA,mBAEA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA;AAJA,GADA;AAQA,EAAA,OARA,qBAQA;AACA;AACA,QAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,WAAA,OAAA;AACA;AAEA,GAdA;AAgBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA;AACA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAHA,CAKA;;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,SAAA,EAAA;AAAA,QAAA,UAAA,EAAA,KAAA;AAAA,QAAA,MAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,GAAA,EAAA;AAAA;AAAA,OAAA,EANA,CAQA;AACA,KAXA;AAaA;AACA,IAAA,MAAA,EAAA,gBAAA,OAAA,EAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,SAAA,EAAA,OAAA,EADA,CACA;AACA;AAhBA,GAhBA;AAmCA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AACA,IAAA,OAAA,EAAA;AADA,GAnCA;AAuCA,EAAA,IAvCA,kBAuCA;AACA,WAAA,EAAA;AAEA,GA1CA;AA4CA,EAAA,OA5CA,qBA4CA,CACA;AA7CA,CAAA","sourcesContent":["<template>\n  <div class=\"col-4 sidebar hidden-md-down\">\n    <h1>Twin DB</h1>\n    <metrics @clicked=\"select\" />\n    <ul>\n      <!-- display filterRow for every lines that is displayed -->\n      <filterRow\n        v-for=\"(line, index) in lines\"\n        :key=\"index\"\n        :line=\"line\"\n        @clicked=\"select\"\n      />\n    </ul>\n    <div class=\"addLine\">\n      <button v-on:click=\"addLine\">Add Line</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport filterRow from './filterRow.vue'\nimport metrics from './metrics.vue'\n\nexport default {\n  computed: {\n    //get lines (incl. color, identifier, filters, and selections) from store\n    lines() {\n      return this.$store.state.lines\n    },\n  },\n\n  mounted() {\n    //if there are no lines on store when page is mounted, add one to always have one line available\n    if(this.lines.length < 1) {\n      this.addLine()\n    }\n\n  },\n\n  methods: {\n    //add new lines\n    addLine: function() {\n      //TODO: if there are any previous lines, get their queries and pass them to addLine()\n      //let previousQuery = this.lines[this.lines.length-1] == undefined ? {} : this.lines[this.lines.length-1].query\n      this.$store.commit('addLine')\n\n      //after adding the line, get it's data\n      this.$store.dispatch('getData', {identifier: false, filter: \"metric\", query: {key: \"metric_rating_overall\"}})\n\n      //TODO re-introduce getting data after line is added\n    },\n\n    //as soon as a filter is clicked in filterRow (child component), get its data from store (which will trigger vis update)\n    select: function(payload) {\n      this.$store.dispatch('getData', payload) //use seperate action for API request (cant call action from mutation)\n    }\n  },\n\n  components: {\n    filterRow, metrics\n  },\n\n  data() {\n    return {\n    }\n  },\n\n  created() {\n  },\n}\n</script>\n\n<style scoped>\nh1 {\n  text-align: center;\n}\n.sidebar {\n  background-color: #39393B;\n  color: white;\n  min-width: 300px;\n  padding: 0px !important;\n  min-height: 100%;\n}\n\nul {\n  margin: 0;\n  padding: 0\n}\n\n.addLine {\n  margin: 10px 30px;\n}\n.addLine button {\n  background: none;\n  border: 1px solid white;\n  border-radius: 5px;\n  padding: 10px;\n  color: white;\n  width: 100%;\n}\n\n.addLine button:hover {\n  font-weight: bold;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}