{"remainingRequest":"/Users/tk/GitHub/twin-dashboard/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/twin-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/twin-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/twin-dashboard/src/components/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/twin-dashboard/src/components/main.vue","mtime":1592563814104},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwppbXBvcnQgeyBidXMgfSBmcm9tICcuLi9tYWluJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdtYWluJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgd2lkdGg6IDcwMCwKICAgICAgaGVpZ2h0OiA4MDAsCiAgICAgIHJlc3VsdHM6IFtdLAogICAgICBzY2FsZTogdW5kZWZpbmVkLAogICAgICBxdWVyaWVzOiBbewogICAgICAgIG1ldHJpYzogdW5kZWZpbmVkLAogICAgICAgIGxvY2F0aW9uOiB1bmRlZmluZWQsCiAgICAgICAgY29tcGFueTogdW5kZWZpbmVkIC8vY291bnRyeTogdW5kZWZpbmVkLAogICAgICAgIC8vcm9sZTogdW5kZWZpbmVkLAoKICAgICAgfSwgewogICAgICAgIG1ldHJpYzogdW5kZWZpbmVkLAogICAgICAgIGxvY2F0aW9uOiB1bmRlZmluZWQsCiAgICAgICAgY29tcGFueTogdW5kZWZpbmVkIC8vcm9sZTogIiIsCiAgICAgICAgLy9jb3VudHJ5OiAiIiwKCiAgICAgIH1dCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy9nZXQgaW5pdGlhbCBzZXQgb2YgcXVlcmllcyBmcm9tIHNpZGViYXIgKHByZXNlbGVjdGVkIGVudHJpZXMpCiAgICBidXMuJG9uKCdpbml0aWFsJywgZnVuY3Rpb24gKHBhcmFtZXRlcikgewogICAgICAvL2xpc3RlbiBvbiBFdmVudEJ1cyBmb3IgY2hhbmdlZCBxdWVyaWVzCiAgICAgIGlmIChwYXJhbWV0ZXIuc2VsZWN0b3IgPT0gIm1ldHJpYyIpIHsKICAgICAgICAvL2NoYW5nZSBnbG9iYWwgcXVlcmllcyBpZiB0aGUgbWV0cmljIHdhcyBjaGFuZ2VkCiAgICAgICAgX3RoaXMucXVlcmllcy5mb3JFYWNoKGZ1bmN0aW9uIChxdWVyeSkgewogICAgICAgICAgcXVlcnkubWV0cmljID0gcGFyYW1ldGVyLmtleTsgLy9hc3NpbiBuZXcgcGFyYW1ldGVyCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgX3RoaXMucXVlcmllc1twYXJhbWV0ZXIuaW5kZXhdW3BhcmFtZXRlci5zZWxlY3Rvcl0gPSBwYXJhbWV0ZXIua2V5OyAvL29yIGp1dCBjaGFuZ2UgcGFyYW1ldGVyIGlmIGl0J3Mgbm90IHRoZSBtZXRyaWMKICAgICAgfQogICAgfSk7CiAgICB0aGlzLnF1ZXJpZXMuZm9yRWFjaChmdW5jdGlvbiAocXVlcnksIGkpIHsKICAgICAgcmV0dXJuIF90aGlzLmdldERhdGEocXVlcnksIGkpOwogICAgfSk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgLy93aGVuIG1vdW50ZWQKICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoIiN2aXMgc3ZnIik7CiAgICB0aGlzLnNjYWxlID0gdGhpcy5nZXRTY2FsZXMoKTsKICAgIHN2Zy5hcHBlbmQoImciKS5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKDAsMTAwKSIpLmNhbGwoZDMuYXhpc0JvdHRvbSh0aGlzLnNjYWxlLngpLnRpY2tzKDUpKTsKICAgIHN2Zy5hcHBlbmQoImciKS5jYWxsKGQzLmF4aXNMZWZ0KHRoaXMuc2NhbGUueSkudGlja3MoNSkpOwogICAgdGhpcy5saW5lcyA9IHRoaXMudXBkYXRlKHRoaXMucmVzdWx0cyk7IC8vc3RhcnQgbGlzdGVuaW5nIG9uIGV2ZW50YnVzIGZvciB1cGRhdGVkCgogICAgYnVzLiRvbigncXVlcnknLCBmdW5jdGlvbiAocGFyYW1ldGVyKSB7CiAgICAgIF90aGlzMi5xdWVyaWVzW3BhcmFtZXRlci5pbmRleF1bcGFyYW1ldGVyLnNlbGVjdG9yXSA9IHBhcmFtZXRlci5rZXk7IC8vY2hhbmdlIHF1ZXJ5CgogICAgICBfdGhpczIubGFzdEluZGV4ID0gW3BhcmFtZXRlci5pbmRleCwgcGFyYW1ldGVyLnNlbGVjdG9yXTsgLy9jaGFuZ2UgaW5kZXggdG8gdHJpZ2dlciB3YXRjaC1mdW5jdGlvbgoKICAgICAgX3RoaXMyLmdldERhdGEoX3RoaXMyLnF1ZXJpZXNbcGFyYW1ldGVyLmluZGV4XSwgcGFyYW1ldGVyLmluZGV4KTsgLy9nZXQgZGF0YSBmb3IgdXBkYXRlZCBxdWVyeQoKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YShxdWVyeSwgaSkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGF4aW9zLnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9ub2tpYS9ub2tpYS10d2luL2NvbXBhcmlzb24tYXBpLnBocD8iLCBxdWVyeSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04JwogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczMucmVzdWx0c1tpXSA9IHsKICAgICAgICAgIHF1ZXJ5OiBxdWVyeSwKICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLmRhdGEsCiAgICAgICAgICBwYXRoOiAiIgogICAgICAgIH07IC8vc2VuZCByZXNwb25zZSB0byB0aGlzLnJlc3VsdAogICAgICB9KTsKICAgIH0sCiAgICBnZXRTY2FsZXM6IGZ1bmN0aW9uIGdldFNjYWxlcygpIHsKICAgICAgdmFyIHBhcnNlVGltZSA9IGQzLnRpbWVQYXJzZSgiJVktJW0iKTsKICAgICAgdmFyIHggPSBkMy5zY2FsZVRpbWUoKS5yYW5nZShbMCwgNDMwXSk7IC8vVE9ETzogd2lkdGgKCiAgICAgIHZhciB5ID0gZDMuc2NhbGVMaW5lYXIoKS5yYW5nZShbMjEwLCAwXSk7IC8vVE9ETzogaGVpZ2h0CgogICAgICBkMy5heGlzTGVmdCgpLnNjYWxlKHgpOwogICAgICBkMy5heGlzQm90dG9tKCkuc2NhbGUoeSk7CiAgICAgIC8qICBsZXQgYXJyID0gW10KICAgICAgICBsZXQgcGFyc2VUaW1lID0gZDMudGltZVBhcnNlKCIlWS0lbSIpOwogICAgICAgIHRoaXMucmVzdWx0cy5mb3JFYWNoKHJlc3VsdCA9PiB7CiAgICAgICAgICByZXN1bHQuZGF0YS5mb3JFYWNoKGRhdGEgPT4KICAgICAgICAgICAgYXJyLnB1c2goZGF0YSkKICAgICAgICAgICkKICAgICAgICB9KSovCiAgICAgIC8veC5kb21haW4oZDMuZXh0ZW50KGFyciwgZCA9PiBwYXJzZVRpbWUoZC5kKSkpOwoKICAgICAgeC5kb21haW4oW3BhcnNlVGltZSgiMjAwMC0wMSIpLCBwYXJzZVRpbWUoIjIwMjAtMTIiKV0pOyAvL3kuZG9tYWluKGQzLmV4dGVudChhcnIsIGQgPT4gK2QucikpOwoKICAgICAgeS5kb21haW4oWzAsIDVdKTsKICAgICAgcmV0dXJuIHsKICAgICAgICB4OiB4LAogICAgICAgIHk6IHkKICAgICAgfTsKICAgIH0sCiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShyZXN1bHRzKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7CiAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMubGVuZ3RoKTsKICAgICAgdmFyIHBhcnNlVGltZSA9IGQzLnRpbWVQYXJzZSgiJVktJW0iKTsKICAgICAgdmFyIGFyciA9IFtdOwogICAgICB2YXIgcGF0aCA9IGQzLmxpbmUoKS5jdXJ2ZShkMy5jdXJ2ZUJhc2lzKS54KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIF90aGlzNC5zY2FsZS54KHBhcnNlVGltZShkLmQpKTsKICAgICAgfSkueShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBfdGhpczQuc2NhbGUueShkLnIpOwogICAgICB9KTsKICAgICAgcmVzdWx0cy5mb3JFYWNoKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICBjb25zb2xlLmxvZygiZm9vIik7CiAgICAgICAgYXJyLnB1c2gocGF0aChyZXN1bHQuZGF0YSkpOwogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coYXJyKTsKICAgICAgcmV0dXJuIGFycjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;AAUA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,SAAA,GAAA,QAAA,SAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,GADA;AAEA,MAAA,MAAA,EAAA,GAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,SAJA;AAKA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,MAAA,EAAA,SADA;AAEA,QAAA,QAAA,EAAA,SAFA;AAGA,QAAA,OAAA,EAAA,SAHA,CAIA;AACA;;AALA,OADA,EAOA;AACA,QAAA,MAAA,EAAA,SADA;AAEA,QAAA,QAAA,EAAA,SAFA;AAGA,QAAA,OAAA,EAAA,SAHA,CAIA;AACA;;AALA,OAPA;AALA,KAAA;AAqBA,GAzBA;AA2BA,EAAA,OA3BA,qBA2BA;AAAA;;AAAA;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,SAAA,EAAA,UAAA,SAAA,EAAA;AAAA;AACA,UAAA,SAAA,CAAA,QAAA,IAAA,QAAA,EAAA;AAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,GAAA,SAAA,CAAA,GAAA,CADA,CACA;AACA,SAFA;AAGA,OAJA,MAIA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA,EAAA,SAAA,CAAA,QAAA,IAAA,SAAA,CAAA,GAAA,CADA,CACA;AACA;AACA,KARA;AASA,SAAA,OAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA,CAAA;AAAA,aAAA,KAAA,CAAA,OAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,KAAA;AACA,GAtCA;AAwCA,EAAA,OAxCA,qBAwCA;AAAA;;AAAA;AACA,QAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAEA,SAAA,KAAA,GAAA,KAAA,SAAA,EAAA;AACA,IAAA,GAAA,CAAA,MAAA,CAAA,GAAA,EAAA,IAAA,CAAA,WAAA,EAAA,kBAAA,EAAA,IAAA,CAAA,EAAA,CAAA,UAAA,CAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,IAAA,GAAA,CAAA,MAAA,CAAA,GAAA,EAAA,IAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,SAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,OAAA,CAAA,CANA,CAWA;;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,OAAA,EAAA,UAAA,SAAA,EAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA,EAAA,SAAA,CAAA,QAAA,IAAA,SAAA,CAAA,GAAA,CADA,CACA;;AACA,MAAA,MAAA,CAAA,SAAA,GAAA,CAAA,SAAA,CAAA,KAAA,EAAA,SAAA,CAAA,QAAA,CAAA,CAFA,CAEA;;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,SAAA,CAAA,KAAA,EAHA,CAGA;;AACA,KAJA;AAKA,GAzDA;AA2DA,EAAA,OAAA,EAAA;AACA,IAAA,OAAA,EAAA,iBAAA,KAAA,EAAA,CAAA,EAAA;AAAA;;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,4DAAA,EAAA,KAAA,EACA;AAAA,QAAA,OAAA,EAAA;AAAA,0BAAA;AAAA;AAAA,OADA,EAGA,IAHA,CAGA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,CAAA,IAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,UAAA,IAAA,EAAA,QAAA,CAAA,IAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,CADA,CACA;AAEA,OANA;AAOA,KATA;AAWA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,SAAA,GAAA,EAAA,CAAA,SAAA,CAAA,OAAA,CAAA;AACA,UAAA,CAAA,GAAA,EAAA,CAAA,SAAA,GAAA,KAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,CAFA,CAEA;;AACA,UAAA,CAAA,GAAA,EAAA,CAAA,WAAA,GAAA,KAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAHA,CAGA;;AACA,MAAA,EAAA,CAAA,QAAA,GAAA,KAAA,CAAA,CAAA;AACA,MAAA,EAAA,CAAA,UAAA,GAAA,KAAA,CAAA,CAAA;AAIA;;;;;;;AAUA;;AACA,MAAA,CAAA,CAAA,MAAA,CAAA,CAAA,SAAA,CAAA,SAAA,CAAA,EAAA,SAAA,CAAA,SAAA,CAAA,CAAA,EApBA,CAqBA;;AACA,MAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,aAAA;AAAA,QAAA,CAAA,EAAA,CAAA;AAAA,QAAA,CAAA,EAAA;AAAA,OAAA;AACA,KAnCA;AAqCA,IAAA,MAAA,EAAA,gBAAA,OAAA,EAAA;AAAA;;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,MAAA;AACA,UAAA,SAAA,GAAA,EAAA,CAAA,SAAA,CAAA,OAAA,CAAA;AACA,UAAA,GAAA,GAAA,EAAA;AAEA,UAAA,IAAA,GAAA,EAAA,CAAA,IAAA,GACA,KADA,CACA,EAAA,CAAA,UADA,EAEA,CAFA,CAEA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,OAFA,EAGA,CAHA,CAGA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,OAHA,CAAA;AAKA,MAAA,OAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,QAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,OAHA;AAIA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,aAAA,GAAA;AACA;AAvDA;AA3DA,CAAA","sourcesContent":["<template>\n  <div id=\"main\">\n    {{JSON.stringify(queries)}}\n    <svg :width=\"width\" :height=\"height\">\n      <path v-for=\"(result,index) in results\" v-bind:key=\"index\" :d=\"result.lines\" />\n    </svg>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport * as d3 from 'd3'\nimport { bus } from '../main'\n\n\nexport default {\n  name: 'main',\n\n  data() {\n    return {\n      width: 700,\n      height: 800,\n      results: [],\n      scale: undefined,\n      queries : [\n        {\n          metric: undefined,\n          location: undefined,\n          company: undefined,\n          //country: undefined,\n          //role: undefined,\n        }, {\n          metric: undefined,\n          location: undefined,\n          company: undefined,\n          //role: \"\",\n          //country: \"\",\n        }\n      ],\n    }\n  },\n\n  created () { //get initial set of queries from sidebar (preselected entries)\n    bus.$on('initial', (parameter) => { //listen on EventBus for changed queries\n      if(parameter.selector == \"metric\") { //change global queries if the metric was changed\n        this.queries.forEach(query => {\n          query.metric = parameter.key //assin new parameter\n        })\n      } else {\n        this.queries[parameter.index][parameter.selector] = parameter.key //or jut change parameter if it's not the metric\n      }\n   })\n   this.queries.forEach((query,i) => this.getData(query,i))\n },\n\nmounted () { //when mounted\n   let svg = d3.select(\"#vis svg\")\n\n   this.scale = this.getScales();\n   svg.append(\"g\").attr(\"transform\", \"translate(0,100)\").call(d3.axisBottom(this.scale.x).ticks(5))\n   svg.append(\"g\").call(d3.axisLeft(this.scale.y).ticks(5))\n   this.lines = this.update(this.results)\n\n\n\n\n   //start listening on eventbus for updated\n   bus.$on('query', (parameter) => {\n     this.queries[parameter.index][parameter.selector] = parameter.key //change query\n     this.lastIndex = [parameter.index,parameter.selector] //change index to trigger watch-function\n     this.getData(this.queries[parameter.index],parameter.index) //get data for updated query\n  })\n},\n\nmethods: {\n  getData: function(query,i) {\n    axios.post( \"http://localhost:8080/nokia/nokia-twin/comparison-api.php?\",query,\n      {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n    })\n    .then((response) => {\n      this.results[i] = {query: query, data: response.data, path: \"\"} //send response to this.result\n\n    });\n  },\n\n  getScales: function() {\n    let parseTime = d3.timeParse(\"%Y-%m\");\n    const x = d3.scaleTime().range([0, 430]); //TODO: width\n    const y = d3.scaleLinear().range([210, 0]); //TODO: height\n    d3.axisLeft().scale(x);\n    d3.axisBottom().scale(y);\n\n\n\n  /*  let arr = []\n    let parseTime = d3.timeParse(\"%Y-%m\");\n    this.results.forEach(result => {\n      result.data.forEach(data =>\n        arr.push(data)\n      )\n    })*/\n\n\n\n    //x.domain(d3.extent(arr, d => parseTime(d.d)));\n    x.domain([parseTime(\"2000-01\"),parseTime(\"2020-12\")]);\n    //y.domain(d3.extent(arr, d => +d.r));\n    y.domain([0,5]);\n    return { x, y };\n  },\n\n  update: function(results) {\n\n    console.log(results)\n    console.log(results.length)\n    let parseTime = d3.timeParse(\"%Y-%m\");\n    let arr = []\n\n    const path = d3.line()\n    .curve(d3.curveBasis)\n     .x(d => this.scale.x(parseTime(d.d)))\n     .y(d => this.scale.y(d.r));\n\n     results.forEach(result => {\n       console.log(\"foo\")\n       arr.push(path(result.data))\n     })\n     console.log(arr)\n     return arr;\n  },\n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.lines path {\n  fill: none;\n  stroke: black\n}\n</style>\n"],"sourceRoot":"src/components"}]}