{"remainingRequest":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/eslint-loader/index.js??ref--13-0!/Users/tk/GitHub/nokia-twin/twin-dashboard/src/store/index.js","dependencies":[{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/src/store/index.js","mtime":1594296475811},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBWdWV4IGZyb20gJ3Z1ZXgnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpWdWUudXNlKFZ1ZXgpOwpleHBvcnQgZGVmYXVsdCBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIC8vIHB1dCB2YXJpYWJsZXMgYW5kIGNvbGxlY3Rpb25zIGhlcmUKICAgIHF1ZXJpZXM6IFtdLAogICAgZmlsdGVyQ29sdW1uczogW3sKICAgICAgbmFtZTogIkNvbXBhbnkiLAogICAgICBkYl9jb2x1bW5zOiBbImNvbXBhbnkiXQogICAgfSwgewogICAgICBuYW1lOiAiUm9sZSIsCiAgICAgIGRiX2NvbHVtbnM6IFsiZW1wbG95ZWVfdGl0bGUiXQogICAgfSwgewogICAgICBuYW1lOiAiTG9jYXRpb24iLAogICAgICBkYl9jb2x1bW5zOiBbImxvY2F0aW9uIiwgImNvdW50cnkiXQogICAgfV0ubWFwKGZ1bmN0aW9uIChmaWx0ZXIpIHsKICAgICAgZmlsdGVyLmVsZW1lbnRzID0gW107IC8vYnVja2V0IHRvIGZpbGwKCiAgICAgIGZpbHRlci5kYl9jb2x1bW5zLmZvckVhY2goZnVuY3Rpb24gKGNvbHVtbikgewogICAgICAgIHZhciBxdWVyeSA9IHsKICAgICAgICAgIHR5cGU6ICdzZWxlY3RvcnMnLAogICAgICAgICAgbGlzdFNlbGVjdG9yOiBjb2x1bW4KICAgICAgICB9OwogICAgICAgIGF4aW9zLnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9ub2tpYS9ub2tpYS10d2luL2NvbXBhcmlzb24tYXBpLnBocD8iLCBxdWVyeSwgewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOCcKICAgICAgICAgIH0KICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgcmVzcG9uc2UuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICAgIC8vZm9yIGVhY2ggaXRlbSBpbiB0aGUgbGlzdCwgY3JlYXRlIGEgdW5pcXVlIG9iamVjdCB0byBwYXNzIG9uCiAgICAgICAgICAgIHZhciBpdGVtID0gewogICAgICAgICAgICAgIGtleTogZWxlbWVudFtjb2x1bW5dLAogICAgICAgICAgICAgIHNlbGVjdG9yOiBjb2x1bW4sCiAgICAgICAgICAgICAgY291bnQ6IGVsZW1lbnQuY291bnQKICAgICAgICAgICAgfTsKICAgICAgICAgICAgZmlsdGVyLmVsZW1lbnRzLnB1c2goaXRlbSk7IC8vZmlsbCB0aGUgYnVja2V0CiAgICAgICAgICB9KTsKICAgICAgICAgIGZpbHRlci5lbGVtZW50cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgIHJldHVybiBiLmNvdW50IC0gYS5jb3VudDsKICAgICAgICAgIH0pOwogICAgICAgICAgZmlsdGVyLnZpc2libGUgPSBmaWx0ZXIuZWxlbWVudHMuc2xpY2UoMCwgNSk7CiAgICAgICAgICBjb25zb2xlLmxvZyhmaWx0ZXIudmlzaWJsZSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gZmlsdGVyOwogICAgfSkKICB9LAogIG11dGF0aW9uczogewogICAgLy8gcHV0IHN5Y2hyb25vdXMgZnVuY3Rpb25zIGZvciBjaGFuZ2luZyBzdGF0ZSBlLmcuIGFkZCwgZWRpdCwgZGVsZXRlCiAgICBwb3B1bGF0ZUZpbHRlcjogZnVuY3Rpb24gcG9wdWxhdGVGaWx0ZXIoZmlsdGVyQ29sdW1ucykgewogICAgICBjb25zb2xlLmxvZygiZm9vIik7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7Ly8gcHV0IGFzeW5jaHJvbm91cyBmdW5jdGlvbnMgdGhhdCBjYW4gY2FsbCBvbmUgb3IgbW9yZSBtdXRhdGlvbiBmdW5jdGlvbnMKICB9Cn0pOw=="},{"version":3,"sources":["/Users/tk/GitHub/nokia-twin/twin-dashboard/src/store/index.js"],"names":["Vue","Vuex","axios","use","Store","state","queries","filterColumns","name","db_columns","map","filter","elements","forEach","column","query","type","listSelector","post","headers","then","response","data","element","item","key","selector","count","push","sort","a","b","visible","slice","console","log","catch","error","mutations","populateFilter","actions"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,OAAO,EAAE,EAFJ;AAGLC,IAAAA,aAAa,EAAE,CACb;AAACC,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,UAAU,EAAE,CAAC,SAAD;AAA9B,KADa,EAEb;AAACD,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,UAAU,EAAE,CAAC,gBAAD;AAA3B,KAFa,EAGb;AAACD,MAAAA,IAAI,EAAE,UAAP;AAAmBC,MAAAA,UAAU,EAAE,CAAC,UAAD,EAAY,SAAZ;AAA/B,KAHa,EAIbC,GAJa,CAIT,UAAAC,MAAM,EAAI;AACdA,MAAAA,MAAM,CAACC,QAAP,GAAkB,EAAlB,CADc,CACO;;AAErBD,MAAAA,MAAM,CAACF,UAAP,CAAkBI,OAAlB,CAA0B,UAAAC,MAAM,EAAI;AAClC,YAAIC,KAAK,GAAG;AACVC,UAAAA,IAAI,EAAE,WADI;AAEVC,UAAAA,YAAY,EAAEH;AAFJ,SAAZ;AAIAZ,QAAAA,KAAK,CAACgB,IAAN,CAAY,4DAAZ,EAAyEH,KAAzE,EACE;AAACI,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB;AAAV,SADF,EAGCC,IAHD,CAGM,UAAAC,QAAQ,EAAI;AAChBA,UAAAA,QAAQ,CAACC,IAAT,CAAcT,OAAd,CAAsB,UAAAU,OAAO,EAAI;AAAE;AACjC,gBAAIC,IAAI,GAAG;AACTC,cAAAA,GAAG,EAAEF,OAAO,CAACT,MAAD,CADH;AAETY,cAAAA,QAAQ,EAAEZ,MAFD;AAGTa,cAAAA,KAAK,EAAEJ,OAAO,CAACI;AAHN,aAAX;AAKAhB,YAAAA,MAAM,CAACC,QAAP,CAAgBgB,IAAhB,CAAqBJ,IAArB,EAN+B,CAMJ;AAC5B,WAPD;AASAb,UAAAA,MAAM,CAACC,QAAP,CAAgBiB,IAAhB,CAAqB,UAACC,CAAD,EAAGC,CAAH;AAAA,mBAASA,CAAC,CAACJ,KAAF,GAAUG,CAAC,CAACH,KAArB;AAAA,WAArB;AACAhB,UAAAA,MAAM,CAACqB,OAAP,GAAiBrB,MAAM,CAACC,QAAP,CAAgBqB,KAAhB,CAAsB,CAAtB,EAAwB,CAAxB,CAAjB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYxB,MAAM,CAACqB,OAAnB;AACD,SAhBD,EAiBCI,KAjBD,CAiBO,UAAAC,KAAK,EAAI;AACdH,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,SAnBD;AAoBD,OAzBD;AA2BA,aAAO1B,MAAP;AACD,KAnCc;AAHV,GADqB;AAyC5B2B,EAAAA,SAAS,EAAE;AACT;AACAC,IAAAA,cAFS,0BAEMhC,aAFN,EAEqB;AAC5B2B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AAJQ,GAzCiB;AA+C5BK,EAAAA,OAAO,EAAE,CACP;AADO;AA/CmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    // put variables and collections here\n    queries: [],\n    filterColumns: [\n      {name: \"Company\", db_columns: [\"company\"]},\n      {name: \"Role\", db_columns: [\"employee_title\"]},\n      {name: \"Location\", db_columns: [\"location\",\"country\"]},\n    ].map(filter => {\n      filter.elements = [] //bucket to fill\n\n      filter.db_columns.forEach(column => {\n        let query = {\n          type: 'selectors',\n          listSelector: column\n        }\n        axios.post( \"http://localhost:8080/nokia/nokia-twin/comparison-api.php?\",query,\n          {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n        })\n        .then(response => {\n          response.data.forEach(element => { //for each item in the list, create a unique object to pass on\n            let item = {\n              key: element[column],\n              selector: column,\n              count: element.count\n            }\n            filter.elements.push(item) //fill the bucket\n          })\n\n          filter.elements.sort((a,b) => b.count - a.count)\n          filter.visible = filter.elements.slice(0,5)\n          console.log(filter.visible)\n        })\n        .catch(error => {\n          console.log(error)\n        });\n      })\n\n      return filter\n    })\n  },\n  mutations: {\n    // put sychronous functions for changing state e.g. add, edit, delete\n    populateFilter(filterColumns) {\n      console.log(\"foo\")\n    }\n  },\n  actions: {\n    // put asynchronous functions that can call one or more mutation functions\n  }\n})\n"]}]}