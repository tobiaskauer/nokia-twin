{"remainingRequest":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/Nokia-Twin/node_modules/babel-loader/lib/index.js!/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/Nokia-Twin/node_modules/eslint-loader/index.js??ref--13-0!/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/Nokia-Twin/src/store/store.js","dependencies":[{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/Nokia-Twin/src/store/store.js","mtime":1614939964147},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/Nokia-Twin/node_modules/cache-loader/dist/cjs.js","mtime":1614939958022},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/Nokia-Twin/node_modules/babel-loader/lib/index.js","mtime":1614939957453},{"path":"/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/Nokia-Twin/node_modules/eslint-loader/index.js","mtime":1614939959454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/sanja7s/7s/One7s/Dropbox/projects7s/HEALTH_APPLICATIONS/glassdoor/Nokia-Twin/src/store/store.js"],"names":["Vue","Vuex","axios","uniqid","use","server","Store","state","error","table","lines","metrics","granularity","activeMetric","text","filterColumns","colors","hex","used","addedFilters","events","getters","getFilterColumns","map","col","visible","elements","slice","added","filter","x","db_columns","includes","concat","display","filters","autocomplete","key","getLines","getContext","context","getActiveMetric","mutations","setTable","payload","setActiveMetric","removeLine","identifier","set","find","length","splice","findIndex","writeQuery","query","Object","entries","selector","delete","forEach","line","i","writeValues","index","values","addFilter","actions","addLine","dispatch","metric","time","colorIndex","element","color","getData","callAPI","commit","type","post","headers","then","response","data","catch","console","log","getMetricsAndFilters","startsWith","item","e","split","getEvents","getFilters","exists","push","column","listSelector","count","sort","a","b"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport uniqid from 'uniqid';\n\nVue.use(Vuex)\n\n//let server = \"http://localhost:8080/nokiatwin/api.php\" //development\n//let server = \"https://social-dynamics.net/nokiatwin/api.php\" // production\nlet server = \"/nokiatwin/api.php\" // this should work for both\n\nexport default new Vuex.Store({\n  state: {\n    error: \"\",\n    table: \"\",\n    lines: [], //empty array, filled by addLine() and removeLine(), triggered via sidebar.vue\n    metrics:[], //metrics to display (metric_ columns in db)\n    granularity: \"%Y-%m\",\n    activeMetric: \"\",\n    text:\"\",\n    filterColumns: [], //filters to apply (filter_ columns in db)\n    colors: [\n      {hex: \"#20C5A0\", used: false},\n      {hex: \"#BD10E0\", used: false},\n      {hex: \"#F5A623\", used: false},\n      {hex: \"#4A90E2\", used: false},\n      {hex: \"#ACC000\", used: false}\n    ],\n    addedFilters: [], //initialize array for filters the user added via typeahead\n    events: []\n  },\n\n\n\n  getters: {\n    //get reduced list of possible values to display\n    getFilterColumns: state => {\n      return state.filterColumns.map(col => {\n        let visible = col.elements.slice(0,5) //select five most frequent labels\n        //identify filters that were added for the current column\n        let added = state.addedFilters.filter(x=>col.db_columns.includes(x.filter)) //select added filters that match any of the given db columns\n        visible = visible.concat(added)\n\n        return {\n          display: col.display,\n          filters: col.db_columns,\n          elements: visible,\n          autocomplete: col.elements.filter(x=>x.key != null)\n        }\n      })\n    },\n\n    //get Lines (triggered via sidebar and )\n    getLines: (state) => state.lines,\n    getContext: (state) => state.context,\n    getActiveMetric: (state) => state.activeMetric\n  },\n\n  mutations: {\n    setTable(state,payload) {\n      if(payload) {\n        state.table = payload\n      } else {\n        state.error = \"No Table.\"\n      }\n    },\n    setActiveMetric(state,payload) {\n      if(payload) state.activeMetric = payload\n    },\n      //remove line from sidebar\n    removeLine(state, identifier) {\n      //make used color available again\n      Vue.set(state.colors.find(x=>x.used == identifier),'used',false)\n      //delete line from state\n      if(state.lines.length > 1) state.lines.splice(state.lines.findIndex(x=>x.identifier == identifier),1)\n    },\n\n    //write query to lines\n    writeQuery(state, payload) {\n      if(payload.identifier) { //if payload just applies to a single line\n\n        let query = Object.entries(payload.query)\n        let selector = query[0][0]\n        let key = query[0][1]\n\n        if(key != null)  {\n          Vue.set(state.lines.find(x=>x.identifier == payload.identifier).query, selector, key)\n        } else {\n          Vue.delete(state.lines.find(x=>x.identifier == payload.identifier).query, selector)\n        }\n\n\n        /*commit('writeQuery',{\n          index: state.lines.findIndex(x=>x.identifier == payload.identifier),\n          filter: payload.query.filter,\n          key: payload.query.key\n        })\n        dispatch('callAPI',payload.identifier)*/\n      } else { //if it affects all lines (e.g. when a metric is changed)\n\n        let query = Object.entries(payload.query)\n        let selector = query[0][0]\n        let key = query[0][1]\n\n        state.lines.forEach((line, i) => {\n\n          /*commit('writeQuery',{\n            index: i,\n            filter: 'metric',\n            key: payload.query.key\n          })\n          dispatch('callAPI',line.identifier)*/\n          Vue.set(state.lines[i].query, selector, key)\n          //dispatch('debugAPI')*/\n        })\n      }\n    },\n\n    //write A PI return to lines (gotten from callAPI())\n    writeValues(state, payload) {\n      //console.log(\"writeData called\", payload)\n      Vue.set(state.lines[payload.index], \"values\", payload.values)\n    },\n\n    //add filter via typeahead\n    addFilter(state, payload) {\n      Vue.set(state.addedFilters,state.addedFilters.length,payload)\n    },\n  },\n\n\n\n  actions: {\n    //initialize a new line (incl. filters in sidebar and actual line in graph), triggered from sidebar\n    addLine({state, dispatch},payload) {\n      //console.log(payload)\n      let line = {} //create empty object\n      line.query = payload ? payload : {metric: state.lines[0].query.metric} //if payload is passed, use it, otherwise use the metric of previous lines\n      line.identifier = uniqid.time()       //unique identifier to update query or delete line\n\n      //assign an unused color and mark it used\n      let colorIndex = state.colors.findIndex(element  => !element.used)\n      line.color = state.colors[colorIndex].hex\n      Vue.set(state.colors[colorIndex],'used',line.identifier)\n      Vue.set(state.lines, state.lines.length, line) //push new line at end of lines array\n\n      dispatch('getData', {identifier: line.identifier}) //get data and let reactivtity take over\n    },\n\n\n    //update queries and get data for them\n    getData({dispatch, state}, payload) {\n      if(payload.identifier) { //if payload just applies to a single line\n        dispatch('callAPI',payload.identifier)\n      } else { //if it affects all lines (e.g. when a metric is changed)\n        state.lines.forEach(line => {\n          dispatch('callAPI',line.identifier)\n        })\n      }\n    },\n\n    //get data from API\n    callAPI( {commit,state}, identifier) {\n      //get query for line based on its identifier\n      let query = state.lines.find(x=>x.identifier == identifier).query\n\n      query.type = 'result' //set query end (quasi endpoint) for api.php\n      query.table = state.table\n      query.granularity = state.granularity\n      //axios.post( \"https://social-dynamics.net/nokiatwin/api.php\",query,\n      axios.post( server,query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n        commit('writeValues',{\n          index: state.lines.findIndex(x=>x.identifier == identifier),\n          values: response.data\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },\n\n    /*debugAPI() {\n      let query = {\n        type: 'debug',\n        metric: 'metric_rating_overall',\n        filter_company: 'starbucks',\n        filter_country: 'United Kingdom',\n        filter_employee_title: 'Barista'\n      }\n      axios.post( server,query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n        console.log(response.data.split(\"end_output\")[0])\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },*/\n\n\n    //get Metrics and Filters once to write them to storage\n    getMetricsAndFilters({dispatch, state}) {\n      let query = {type: 'metrics', table: state.table}\n      axios.post( server,query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n\n        //filter response by metric_ and write it to store\n        let metrics = response.data.filter(x=>x.key.startsWith('metric_')).map(item => {\n          //if no display name given, use db column\n          if(!item.display) item.display = item.key\n          return item\n        })\n        Vue.set(state,'metrics',metrics)\n\n\n        //filter by filter_ and hand to getFilters() (which can get values for each filter)\n        dispatch('getFilters', response.data.filter(x=>x.key.startsWith('filter_')))\n\n        let text = {}\n        response.data.filter(x=>x.key.startsWith('text_')).forEach(e => {\n          text[e.key.split('text_')[1]] = e.display\n        })\n\n        Vue.set(state,'text',text)\n\n\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },\n\n    getEvents({state}) {\n      let query = {type: 'events', table: state.table}\n      axios.post( server,query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n        Vue.set(state,'events',response.data)\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },\n\n    getFilters({state}, payload) {\n      //transform filters with the same name into a group with multiple db_columns\n      let filters = []\n      payload.forEach(filter => {\n        let exists = filters.find(x=>x.display == filter.display)\n        if(exists) {\n          exists.db_columns.push(filter.key)\n        } else {\n          filters.push({display: filter.display, db_columns: [filter.key]})\n        }\n      })\n\n      //generate lists of columns, then fill them with filters\n      filters = filters.map(filter => {\n        filter.elements = [] //bucket to fill\n        filter.db_columns.forEach(column => {\n          let query = {\n            type: 'selectors',\n            listSelector: column,\n            table: state.table\n          }\n          axios.post( server,query,  //for development, this is overwritten in vue.config.js\n            {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n          })\n          .then(response => {\n            response.data.forEach(element => { //for each item in the list, create a unique object to pass on\n              let item = {\n                key: element[column],\n                filter: column,\n                count: element.count\n              }\n              filter.elements.push(item) //fill the bucket\n            })\n            filter.elements.sort((a,b) => b.count - a.count)\n          })\n        })\n        return filter\n      })\n      Vue.set(state,'filterColumns',filters)\n    }\n  }\n})\n"]}]}