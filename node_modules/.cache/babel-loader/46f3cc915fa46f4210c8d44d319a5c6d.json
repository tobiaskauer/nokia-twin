{"remainingRequest":"/Users/tk/GitHub/nokiatwin/node_modules/thread-loader/dist/cjs.js!/Users/tk/GitHub/nokiatwin/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/nokiatwin/node_modules/eslint-loader/index.js??ref--13-0!/Users/tk/GitHub/nokiatwin/src/store/store.js","dependencies":[{"path":"/Users/tk/GitHub/nokiatwin/src/store/store.js","mtime":1605528926411},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tk/GitHub/nokiatwin/src/store/store.js"],"names":["Vue","Vuex","axios","uniqid","use","server","Store","state","error","table","lines","metrics","activeMetric","filterColumns","colors","hex","used","addedFilters","events","getters","getFilterColumns","map","col","visible","elements","slice","added","filter","x","db_columns","includes","concat","display","filters","autocomplete","key","getLines","getContext","context","getActiveMetric","mutations","setTable","payload","setActiveMetric","removeLine","identifier","set","find","length","splice","findIndex","writeQuery","index","query","writeValues","values","addFilter","actions","addLine","dispatch","line","time","colorIndex","element","color","getData","commit","forEach","i","callAPI","type","post","headers","then","response","data","catch","console","log","debugAPI","metric","filter_company","filter_country","filter_employee_title","split","getMetricsAndFilters","startsWith","item","getEvents","getFilters","exists","push","column","listSelector","count","sort","a","b"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport uniqid from 'uniqid';\n\nVue.use(Vuex)\n\n//let server = \"http://localhost:8080/nokiatwin/api.php\" //development\nlet server = \"https://social-dynamics.net/nokiatwin/api.php\" // production\n\nexport default new Vuex.Store({\n  state: {\n    error: \"\",\n    table: \"\",\n    lines: [], //empty array, filled by addLine() and removeLine(), triggered via sidebar.vue\n    metrics:[], //metrics to display (metric_ columns in db)\n    activeMetric: \"\",\n    filterColumns: [], //filters to apply (filter_ columns in db)\n    colors: [\n      {hex: \"#20C5A0\", used: false},\n      {hex: \"#BD10E0\", used: false},\n      {hex: \"#F5A623\", used: false},\n      {hex: \"#4A90E2\", used: false},\n      {hex: \"#ACC000\", used: false}\n    ],\n    addedFilters: [], //initialize array for filters the user added via typeahead\n    events: []\n  },\n\n\n\n  getters: {\n    //get reduced list of possible values to display\n    getFilterColumns: state => {\n      return state.filterColumns.map(col => {\n        let visible = col.elements.slice(0,5) //select five most frequent labels\n        //identify filters that were added for the current column\n        let added = state.addedFilters.filter(x=>col.db_columns.includes(x.filter)) //select added filters that match any of the given db columns\n        visible = visible.concat(added)\n\n        return {\n          display: col.display,\n          filters: col.db_columns,\n          elements: visible,\n          autocomplete: col.elements.filter(x=>x.key != null)\n        }\n      })\n    },\n\n    //get Lines (triggered via sidebar and )\n    getLines: (state) => state.lines,\n    getContext: (state) => state.context,\n    getActiveMetric: (state) => state.activeMetric\n  },\n\n\n  mutations: {\n    setTable(state,payload) {\n      if(payload) {\n        state.table = payload\n      } else {\n        state.error = \"No Table.\"\n      }\n    },\n    setActiveMetric(state,payload) {\n      if(payload) state.activeMetric = payload\n    },\n      //remove line from sidebar\n    removeLine(state, identifier) {\n      //make used color available again\n      Vue.set(state.colors.find(x=>x.used == identifier),'used',false)\n      //delete line from state\n      if(state.lines.length > 1) state.lines.splice(state.lines.findIndex(x=>x.identifier == identifier),1)\n    },\n\n    //write query to lines\n    writeQuery(state, payload) {\n      Vue.set(state.lines[payload.index].query, payload.filter, payload.key)\n    },\n\n    //write A PI return to lines (gotten from callAPI())\n    writeValues(state, payload) {\n      //console.log(\"writeData called\", payload)\n      Vue.set(state.lines[payload.index], \"values\", payload.values)\n    },\n\n    //add filter via typeahead\n    addFilter(state, payload) {\n      Vue.set(state.addedFilters,state.addedFilters.length,payload)\n    },\n  },\n\n\n\n  actions: {\n    //initialize a new line (incl. filters in sidebar and actual line in graph), triggered from sidebar\n    addLine(\n      {state, dispatch},\n      //query //query is provided as payload in sidebar.vue\n    ) {\n      let line = {}\n      //TODO: hand over previous query to newly created line\n      line.query = {}\n\n      //unique identifier to update query or delete line\n      line.identifier = uniqid.time()\n\n      //assign an unused color and mark it used\n      let colorIndex = state.colors.findIndex(element  => !element.used)\n      line.color = state.colors[colorIndex].hex\n      Vue.set(state.colors[colorIndex],'used',line.identifier)\n      Vue.set(state.lines, state.lines.length, line) //push new line at end of lines array\n\n      dispatch('getData', {\n        identifier: false,\n        filter: \"metric\",\n        query: {key: state.metrics[0].key} //TODO replace with first metric (as soon as its initialized)\n      })\n    },\n\n\n    //update queries and get data for them\n    getData({dispatch, commit, state}, payload) {\n      //console.log(\"getData() called\", payload)\n\n      if(payload.identifier) { //if payload just applies to a single line\n        commit('writeQuery',{\n          index: state.lines.findIndex(x=>x.identifier == payload.identifier),\n          filter: payload.query.filter,\n          key: payload.query.key\n        })\n        dispatch('callAPI',payload.identifier)\n      } else { //if it affects all lines (e.g. when a metric is changed)\n        state.lines.forEach((line, i) => {\n          commit('writeQuery',{\n            index: i,\n            filter: 'metric',\n            key: payload.query.key\n          })\n          dispatch('callAPI',line.identifier)\n          //dispatch('debugAPI')\n        })\n      }\n    },\n\n    //get data from API\n    callAPI( {commit,state}, identifier) {\n      //get query for line based on its identifier\n      let query = state.lines.find(x=>x.identifier == identifier).query\n      query.type = 'result' //set query end (quasi endpoint) for api.php\n      query.table = state.table\n      //axios.post( \"https://social-dynamics.net/nokiatwin/api.php\",query,\n      axios.post( server,query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n\n        commit('writeValues',{\n          index: state.lines.findIndex(x=>x.identifier == identifier),\n          values: response.data\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },\n\n    debugAPI() {\n      let query = {\n        type: 'debug',\n        metric: 'metric_rating_overall',\n        filter_company: 'starbucks',\n        filter_country: 'United Kingdom',\n        filter_employee_title: 'Barista'\n      }\n      axios.post( server,query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n        console.log(response.data.split(\"end_output\")[0])\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },\n\n\n    //get Metrics and Filters once to write them to storage\n    getMetricsAndFilters({dispatch, state}) {\n      let query = {type: 'metrics', table: state.table}\n      axios.post( server,query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n        //filter response by metric_ and write it to store\n        let metrics = response.data.filter(x=>x.key.startsWith('metric_')).map(item => {\n          //if no display name given, use db column\n          if(!item.display) item.display = item.key\n          return item\n        })\n        Vue.set(state,'metrics',metrics)\n\n\n        //filter by filter_ and hand to getFilters() (which can get values for each filter)\n        dispatch('getFilters', response.data.filter(x=>x.key.startsWith('filter_')))\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },\n\n    getEvents({state}) {\n      let query = {type: 'events', table: state.table}\n      axios.post( server,query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n        Vue.set(state,'events',response.data)\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },\n\n    getFilters({state}, payload) {\n      //transform filters with the same name into a group with multiple db_columns\n      let filters = []\n      payload.forEach(filter => {\n        let exists = filters.find(x=>x.display == filter.display)\n        if(exists) {\n          exists.db_columns.push(filter.key)\n        } else {\n          filters.push({display: filter.display, db_columns: [filter.key]})\n        }\n      })\n\n      //generate lists of columns, then fill them with filters\n      filters = filters.map(filter => {\n        filter.elements = [] //bucket to fill\n        filter.db_columns.forEach(column => {\n          let query = {\n            type: 'selectors',\n            listSelector: column,\n            table: state.table\n          }\n          axios.post( server,query,  //for development, this is overwritten in vue.config.js\n            {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n          })\n          .then(response => {\n            response.data.forEach(element => { //for each item in the list, create a unique object to pass on\n              let item = {\n                key: element[column],\n                filter: column,\n                count: element.count\n              }\n              filter.elements.push(item) //fill the bucket\n            })\n            filter.elements.sort((a,b) => b.count - a.count)\n          })\n        })\n        return filter\n      })\n      Vue.set(state,'filterColumns',filters)\n    }\n  }\n})\n"]}]}