{"remainingRequest":"/Users/tk/GitHub/nokiatwin/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/nokiatwin/node_modules/eslint-loader/index.js??ref--13-0!/Users/tk/GitHub/nokiatwin/src/store/store.js","dependencies":[{"path":"/Users/tk/GitHub/nokiatwin/src/store/store.js","mtime":1598445983593},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokiatwin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tk/GitHub/nokiatwin/src/store/store.js"],"names":["Vue","Vuex","axios","uniqid","use","Store","state","lines","metrics","filterColumns","colors","hex","used","addedFilters","context","date","text","getters","getFilterColumns","map","col","visible","elements","slice","added","filter","x","toLowerCase","display","concat","filters","db_columns","autocomplete","getLines","getContext","mutations","removeLine","identifier","set","find","length","splice","findIndex","writeQuery","payload","index","query","key","writeValues","values","addFilter","actions","addLine","dispatch","line","time","colorIndex","element","color","getData","commit","forEach","i","callAPI","type","post","headers","then","response","data","catch","error","console","log","debugAPI","metric","filter_company","filter_country","filter_employee_title","split","getMetricsAndFilters","startsWith","item","getFilters","exists","push","column","listSelector","count","sort","a","b"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport uniqid from 'uniqid';\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    lines: [], //empty array, filled by addLine() and removeLine(), triggered via sidebar.vue\n    metrics:[], //metrics to display (metric_ columns in db)\n    filterColumns: [], //filters to apply (filter_ columns in db)\n    colors: [\n      {hex: \"#20C5A0\", used: false},\n      {hex: \"#BD10E0\", used: false},\n      {hex: \"#F5A623\", used: false},\n      {hex: \"#4A90E2\", used: false},\n      {hex: \"#ACC000\", used: false}\n    ],\n    addedFilters: [], //initialize array for filters the user added via typeahead\n    context: [//time-based annotations\n      {date: \"2009-11\", text:\"Barrack Obama elected president\"},\n      {date: \"2017-06\", text:\"Tobi starts at Bell Labs\"}\n    ]\n  },\n\n\n\n  getters: {\n    //get reduced list of possible values to display\n    getFilterColumns: state => {\n      return state.filterColumns.map(col => {\n        let visible = col.elements.slice(0,5) //select five most frequent labels\n        //identify filters that were added for the current column\n        let added = state.addedFilters.filter(x=>x.filter.toLowerCase() == col.display.toLowerCase()) //select added filters that match the column\n        visible = visible.concat(added)\n        return {\n          display: col.display,\n          filters: col.db_columns,\n          elements: visible,\n          autocomplete: col.elements\n        }\n      })\n    },\n\n    //get Lines (triggered via sidebar and )\n    getLines: (state) => state.lines,\n    getContext: (state) => state.context,\n    //getMetrics: (state) => state.metrics\n  },\n\n\n  mutations: {\n      //remove line from sidebar\n    removeLine(state, identifier) {\n      //make used color available again\n      Vue.set(state.colors.find(x=>x.used == identifier),'used',false)\n      //delete line from state\n      if(state.lines.length > 1) state.lines.splice(state.lines.findIndex(x=>x.identifier == identifier),1)\n    },\n\n    //write query to lines\n    writeQuery(state, payload) {\n      //console.log(\"writeQuery() called\", payload)\n      Vue.set(state.lines[payload.index].query, payload.filter, payload.key)\n    },\n\n    //write A PI return to lines (gotten from callAPI())\n    writeValues(state, payload) {\n      //console.log(\"writeData called\", payload)\n      Vue.set(state.lines[payload.index], \"values\", payload.values)\n    },\n\n    //add filter via typeahead\n    addFilter(state, payload) {\n      Vue.set(state.addedFilters,state.addedFilters.length,payload)\n    },\n  },\n\n\n\n  actions: {\n    //initialize a new line (incl. filters in sidebar and actual line in graph), triggered from sidebar\n    addLine(\n      {state, dispatch},\n      //query //query is provided as payload in sidebar.vue\n    ) {\n      let line = {}\n\n      //TODO: hand over previous query to newly created line\n      line.query = {}\n\n      //unique identifier to update query or delete line\n      line.identifier = uniqid.time()\n\n      //assign an unused color and mark it used\n      let colorIndex = state.colors.findIndex(element  => !element.used)\n      line.color = state.colors[colorIndex].hex\n      Vue.set(state.colors[colorIndex],'used',line.identifier)\n      Vue.set(state.lines, state.lines.length, line) //push new line at end of lines array\n\n      dispatch('getData', {\n        identifier: false,\n        filter: \"metric\",\n        query: {key: state.metrics[0].key} //TODO replace with first metric (as soon as its initialized)\n      })\n    },\n\n\n    //update queries and get data for them\n    getData({dispatch, commit, state}, payload) {\n      //console.log(\"getData() called\", payload)\n\n      if(payload.identifier) { //if payload just applies to a single line\n        commit('writeQuery',{\n          index: state.lines.findIndex(x=>x.identifier == payload.identifier),\n          filter: payload.query.filter,\n          key: payload.query.key\n        })\n        dispatch('callAPI',payload.identifier)\n      } else { //if it affects all lines (e.g. when a metric is changed)\n        state.lines.forEach((line, i) => {\n          commit('writeQuery',{\n            index: i,\n            filter: 'metric',\n            key: payload.query.key\n          })\n          dispatch('callAPI',line.identifier)\n          //dispatch('debugAPI')\n        })\n      }\n    },\n\n    //get data from API\n    callAPI( {commit,state}, identifier) {\n      //get query for line based on its identifier\n      let query = state.lines.find(x=>x.identifier == identifier).query\n      query.type = 'result' //set query end (quasi endpoint) for api.php\n\n      //axios.post( \"https://social-dynamics.net/nokiatwin/api.php\",query,\n      axios.post( \"http://localhost:8080/nokiatwin/api.php\",query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n        commit('writeValues',{\n          index: state.lines.findIndex(x=>x.identifier == identifier),\n          values: response.data\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },\n\n    debugAPI() {\n      let query = {\n        type: 'debug',\n        metric: 'metric_rating_overall',\n        filter_company: 'starbucks',\n        filter_country: 'United Kingdom',\n        filter_employee_title: 'Barista'\n      }\n      axios.post( \"http://localhost:8080/nokiatwin/api.php\",query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n        console.log(response.data.split(\"end_output\")[0])\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },\n\n\n    //get Metrics and Filters once to write them to storage\n    getMetricsAndFilters({dispatch, state}) {\n      let query = {type: 'metrics'}\n      //axios.post( \"https://social-dynamics.net/nokiatwin/api.php\",query, //for development, this is overwritten in vue.config.js\n      axios.post( \"http://localhost:8080/nokiatwin/api.php\",query, //for development, this is overwritten in vue.config.js\n        {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n      })\n      .then(response => {\n        //filter response by metric_ and write it to store\n        let metrics = response.data.filter(x=>x.key.startsWith('metric_')).map(item => {\n          //if no display name given, use db column\n          if(!item.display) item.display = item.key\n          return item\n        })\n        Vue.set(state,'metrics',metrics)\n\n        //filter by filter_ and hand to getFilters() (which can get values for each filter)\n        dispatch('getFilters', response.data.filter(x=>x.key.startsWith('filter_')))\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    },\n\n    getFilters({state}, payload) {\n      //transform filters with the same name into a group with multiple db_columns\n      let filters = []\n      payload.forEach(filter => {\n        let exists = filters.find(x=>x.display == filter.display)\n        if(exists) {\n          exists.db_columns.push(filter.key)\n        } else {\n          filters.push({display: filter.display, db_columns: [filter.key]})\n        }\n      })\n\n      //generate lists of columns, then fill them with filters\n      filters = filters.map(filter => {\n        filter.elements = [] //bucket to fill\n        filter.db_columns.forEach(column => {\n          let query = {\n            type: 'selectors',\n            listSelector: column\n          }\n          //axios.post( \"https://social-dynamics.net/nokiatwin/api.php\",query,\n          axios.post( \"http://localhost:8080/nokiatwin/api.php\",query,  //for development, this is overwritten in vue.config.js\n            {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n          })\n          .then(response => {\n            response.data.forEach(element => { //for each item in the list, create a unique object to pass on\n              let item = {\n                key: element[column],\n                filter: column,\n                count: element.count\n              }\n              filter.elements.push(item) //fill the bucket\n            })\n            filter.elements.sort((a,b) => b.count - a.count)\n          })\n        })\n        return filter\n      })\n      Vue.set(state,'filterColumns',filters)\n    }\n  }\n})\n"]}]}