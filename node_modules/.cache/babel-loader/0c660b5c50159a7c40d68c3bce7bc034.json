{"remainingRequest":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/eslint-loader/index.js??ref--13-0!/Users/tk/GitHub/nokia-twin/twin-dashboard/src/store/index.js","dependencies":[{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/src/store/index.js","mtime":1595162530479},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tk/GitHub/nokia-twin/twin-dashboard/src/store/index.js"],"names":["Vue","Vuex","axios","uniqid","use","Store","state","lines","metrics","key","display","filterColumns","name","db_columns","map","filter","elements","forEach","column","query","type","listSelector","post","headers","then","response","data","element","item","count","push","sort","a","b","getters","getFilterColumns","slice","getAPIResult","line","metric","catch","error","console","log","mutations","addLine","parameter","colors","color","length","filters","col","dbcol","undefined","identifier","time","set","updateQuery","payload","find","x","storeResult","result","actions","getResult","commit"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport uniqid from 'uniqid';\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    lines: [],\n    metrics:[\n      {key: \"rating_overall\", display: \"Overall Ratings\"},\n      {key: \"rating_balance\", display: \"Work-Life Balance\"},\n      {key: \"rating_culture\", display: \"Culture & Values\"},\n      {key: \"rating_career\", display: \"Career Opportunities\"},\n      {key: \"rating_comp\", display: \"Compensation & Benefits\"},\n      {key: \"rating_mgmt\", display: \"Senior Leadership\"}\n    ],\n    filterColumns: [\n      {name: \"Company\", db_columns: [\"company\"]},\n      {name: \"Role\", db_columns: [\"employee_title\"]},\n      {name: \"Location\", db_columns: [\"location\",\"country\"]},\n    ].map(filter => {\n      filter.elements = [] //bucket to fill\n\n      filter.db_columns.forEach(column => {\n        let query = {\n          type: 'selectors',\n          listSelector: column\n        }\n        axios.post( \"http://localhost:8080/nokia/nokia-twin/comparison-api.php?\",query,\n          {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n        })\n        .then(response => {\n          response.data.forEach(element => { //for each item in the list, create a unique object to pass on\n            let item = {\n              key: element[column],\n              filter: column,\n              count: element.count\n            }\n            filter.elements.push(item) //fill the bucket\n          })\n          filter.elements.sort((a,b) => b.count - a.count)\n        })\n      })\n\n      return filter\n    })\n  },\n  getters: {\n\n    //get reduced list of possible values to display\n    getFilterColumns: state => {\n      return state.filterColumns.map(filter => {\n        return {\n          name: filter.name,\n          elements: filter.elements.slice(0,5)\n        }\n      })\n    },\n\n    getAPIResult: (state) => {\n      //TODO: getAPIResult does not return async call - maybe use actions (or watchers on component side)  to sdolve this\n      return state.lines.map(line => {\n        line.query.type='result' //set query end (quasi endpoint) for api.php\n        if(!line.query.metric) line.query.metric = \"rating_overall\" //avoid crash because initial metric has not been defined\n        axios.post( \"http://localhost:8080/nokia/nokia-twin/comparison-api.php?\",line.query,\n          {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n        })\n        .then(response => {\n          //console.log(response)\n          return response.data\n          //this.$set(this.results, i, {query: query, data: response.data})\n        })\n        .catch(error => {\n          console.log(error)\n        });\n      })\n      //TODO: check if metric is set\n\n    }\n  },\n\n  mutations: {\n\n    //initialize a new line (incl. filters in sidebar and actual line in graph), triggered from sidebar\n    addLine(state, parameter) {\n      //set a color for to identify the line\n      let colors = [\"#20C5A0\",\"#BD10E0\",\"#F5A623\"]\n      parameter.color = colors[state.lines.length]\n\n      //initialize empty query for db with all possible filters\n      parameter.query = {}\n      let filters = []\n      state.filterColumns.forEach(col => {\n        col.db_columns.forEach(dbcol => {\n          filters.push(dbcol)\n        })\n      })\n      filters.push(\"metric\")\n      filters.forEach(filter => parameter.query[filter] = undefined)\n\n      parameter.identifier = uniqid.time() //unique identifier to update query or delete line\n      Vue.set(state.lines, state.lines.length, parameter) //push new line at end of lines array\n    },\n\n    //update query of an existing line to fetch\n    updateQuery(state, payload) {\n      let query = payload.query.filter //what filter do we want to update?\n      if(payload.line) {\n        let line = state.lines.find(x=>x.identifier == payload.line)[\"query\"] //use id to find line and corresponding query\n        Vue.set(line, query, payload.query.key)\n      } else { //updating metrics will affect all lines\n        state.lines.forEach(line => {\n          Vue.set(line.query, 'metric', payload.query.key)\n        })\n      }\n    },\n\n\n    storeResult(state) {\n      let result = \"foobar\"\n      let line = state.lines[0]\n      console.log('storeResult')\n      Vue.set(line, \"result\", result)\n    }\n  },\n\n  actions: {\n    //1. Get parameter from sidebar and update queries of all affected sidebars\n    /*writeQuery( {\n      //dispatch,\n      state}, payload) {\n\n      if(payload.line) {\n        let query = payload.query.filter  //what filter do we want to update?\n        let index = state.lines.findIndex(x=>x.identifier == payload.line)\n        console.log(index)\n        let line = state.lines.find(x=>x.identifier == payload.line)[\"query\"] //use id to find line and corresponding query\n        Vue.set(line, query, payload.query.key)\n      } else { //updating metrics will affect all lines\n        state.lines.forEach(line => {\n          console.log(payload.query.key )\n          Vue.set(line.query, 'metric', payload.query.key)\n        })\n      }\n\n      //commit('storeResult')\n      //dispatch('getResult', payload)\n    },*/\n\n    getResult( {commit, state}, payload) {\n      console.log('getResult')\n      commit('storeResult')\n      state\n      payload\n    },\n\n\n    // put asynchronous functions that can call one or more mutation functions\n  }\n})\n"]}]}