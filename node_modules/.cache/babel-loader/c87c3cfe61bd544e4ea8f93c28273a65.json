{"remainingRequest":"/Users/tk/GitHub/twin-dashboard/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/twin-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/twin-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/twin-dashboard/src/components/vis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/twin-dashboard/src/components/vis.vue","mtime":1592563626836},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/twin-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwppbXBvcnQgeyBidXMgfSBmcm9tICcuLi9tYWluJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd2aXMnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB3aWR0aDogNzAwLAogICAgICBoZWlnaHQ6IDgwMCwKICAgICAgcmVzdWx0czogW10sCiAgICAgIHNjYWxlOiB1bmRlZmluZWQsCiAgICAgIHF1ZXJpZXM6IFt7CiAgICAgICAgbWV0cmljOiB1bmRlZmluZWQsCiAgICAgICAgbG9jYXRpb246IHVuZGVmaW5lZCwKICAgICAgICBjb21wYW55OiB1bmRlZmluZWQgLy9jb3VudHJ5OiB1bmRlZmluZWQsCiAgICAgICAgLy9yb2xlOiB1bmRlZmluZWQsCgogICAgICB9LCB7CiAgICAgICAgbWV0cmljOiB1bmRlZmluZWQsCiAgICAgICAgbG9jYXRpb246IHVuZGVmaW5lZCwKICAgICAgICBjb21wYW55OiB1bmRlZmluZWQgLy9yb2xlOiAiIiwKICAgICAgICAvL2NvdW50cnk6ICIiLAoKICAgICAgfV0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAvL2dldCBpbml0aWFsIHNldCBvZiBxdWVyaWVzIGZyb20gc2lkZWJhciAocHJlc2VsZWN0ZWQgZW50cmllcykKICAgIGJ1cy4kb24oJ2luaXRpYWwnLCBmdW5jdGlvbiAocGFyYW1ldGVyKSB7CiAgICAgIC8vbGlzdGVuIG9uIEV2ZW50QnVzIGZvciBjaGFuZ2VkIHF1ZXJpZXMKICAgICAgaWYgKHBhcmFtZXRlci5zZWxlY3RvciA9PSAibWV0cmljIikgewogICAgICAgIC8vY2hhbmdlIGdsb2JhbCBxdWVyaWVzIGlmIHRoZSBtZXRyaWMgd2FzIGNoYW5nZWQKICAgICAgICBfdGhpcy5xdWVyaWVzLmZvckVhY2goZnVuY3Rpb24gKHF1ZXJ5KSB7CiAgICAgICAgICBxdWVyeS5tZXRyaWMgPSBwYXJhbWV0ZXIua2V5OyAvL2Fzc2luIG5ldyBwYXJhbWV0ZXIKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfdGhpcy5xdWVyaWVzW3BhcmFtZXRlci5pbmRleF1bcGFyYW1ldGVyLnNlbGVjdG9yXSA9IHBhcmFtZXRlci5rZXk7IC8vb3IganV0IGNoYW5nZSBwYXJhbWV0ZXIgaWYgaXQncyBub3QgdGhlIG1ldHJpYwogICAgICB9CiAgICB9KTsKICAgIHRoaXMucXVlcmllcy5mb3JFYWNoKGZ1bmN0aW9uIChxdWVyeSwgaSkgewogICAgICByZXR1cm4gX3RoaXMuZ2V0RGF0YShxdWVyeSwgaSk7CiAgICB9KTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAvL3doZW4gbW91bnRlZAogICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgiI3ZpcyBzdmciKTsKICAgIHRoaXMuc2NhbGUgPSB0aGlzLmdldFNjYWxlcygpOwogICAgc3ZnLmFwcGVuZCgiZyIpLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoMCwxMDApIikuY2FsbChkMy5heGlzQm90dG9tKHRoaXMuc2NhbGUueCkudGlja3MoNSkpOwogICAgc3ZnLmFwcGVuZCgiZyIpLmNhbGwoZDMuYXhpc0xlZnQodGhpcy5zY2FsZS55KS50aWNrcyg1KSk7CiAgICB0aGlzLmxpbmVzID0gdGhpcy51cGRhdGUodGhpcy5yZXN1bHRzKTsgLy9zdGFydCBsaXN0ZW5pbmcgb24gZXZlbnRidXMgZm9yIHVwZGF0ZWQKCiAgICBidXMuJG9uKCdxdWVyeScsIGZ1bmN0aW9uIChwYXJhbWV0ZXIpIHsKICAgICAgX3RoaXMyLnF1ZXJpZXNbcGFyYW1ldGVyLmluZGV4XVtwYXJhbWV0ZXIuc2VsZWN0b3JdID0gcGFyYW1ldGVyLmtleTsgLy9jaGFuZ2UgcXVlcnkKCiAgICAgIF90aGlzMi5sYXN0SW5kZXggPSBbcGFyYW1ldGVyLmluZGV4LCBwYXJhbWV0ZXIuc2VsZWN0b3JdOyAvL2NoYW5nZSBpbmRleCB0byB0cmlnZ2VyIHdhdGNoLWZ1bmN0aW9uCgogICAgICBfdGhpczIuZ2V0RGF0YShfdGhpczIucXVlcmllc1twYXJhbWV0ZXIuaW5kZXhdLCBwYXJhbWV0ZXIuaW5kZXgpOyAvL2dldCBkYXRhIGZvciB1cGRhdGVkIHF1ZXJ5CgogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREYXRhOiBmdW5jdGlvbiBnZXREYXRhKHF1ZXJ5LCBpKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgYXhpb3MucG9zdCgiaHR0cDovL2xvY2FsaG9zdDo4MDgwL25va2lhL25va2lhLXR3aW4vY29tcGFyaXNvbi1hcGkucGhwPyIsIHF1ZXJ5LCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLTgnCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMy5yZXN1bHRzW2ldID0gewogICAgICAgICAgcXVlcnk6IHF1ZXJ5LAogICAgICAgICAgZGF0YTogcmVzcG9uc2UuZGF0YSwKICAgICAgICAgIHBhdGg6ICIiCiAgICAgICAgfTsgLy9zZW5kIHJlc3BvbnNlIHRvIHRoaXMucmVzdWx0CgogICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMubGVuZ3RoKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0U2NhbGVzOiBmdW5jdGlvbiBnZXRTY2FsZXMoKSB7CiAgICAgIHZhciBwYXJzZVRpbWUgPSBkMy50aW1lUGFyc2UoIiVZLSVtIik7CiAgICAgIHZhciB4ID0gZDMuc2NhbGVUaW1lKCkucmFuZ2UoWzAsIDQzMF0pOyAvL1RPRE86IHdpZHRoCgogICAgICB2YXIgeSA9IGQzLnNjYWxlTGluZWFyKCkucmFuZ2UoWzIxMCwgMF0pOyAvL1RPRE86IGhlaWdodAoKICAgICAgZDMuYXhpc0xlZnQoKS5zY2FsZSh4KTsKICAgICAgZDMuYXhpc0JvdHRvbSgpLnNjYWxlKHkpOwogICAgICAvKiAgbGV0IGFyciA9IFtdCiAgICAgICAgbGV0IHBhcnNlVGltZSA9IGQzLnRpbWVQYXJzZSgiJVktJW0iKTsKICAgICAgICB0aGlzLnJlc3VsdHMuZm9yRWFjaChyZXN1bHQgPT4gewogICAgICAgICAgcmVzdWx0LmRhdGEuZm9yRWFjaChkYXRhID0+CiAgICAgICAgICAgIGFyci5wdXNoKGRhdGEpCiAgICAgICAgICApCiAgICAgICAgfSkqLwogICAgICAvL3guZG9tYWluKGQzLmV4dGVudChhcnIsIGQgPT4gcGFyc2VUaW1lKGQuZCkpKTsKCiAgICAgIHguZG9tYWluKFtwYXJzZVRpbWUoIjIwMDAtMDEiKSwgcGFyc2VUaW1lKCIyMDIwLTEyIildKTsgLy95LmRvbWFpbihkMy5leHRlbnQoYXJyLCBkID0+ICtkLnIpKTsKCiAgICAgIHkuZG9tYWluKFswLCA1XSk7CiAgICAgIHJldHVybiB7CiAgICAgICAgeDogeCwKICAgICAgICB5OiB5CiAgICAgIH07CiAgICB9LAogICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUocmVzdWx0cykgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpOwogICAgICBjb25zb2xlLmxvZyhyZXN1bHRzLmxlbmd0aCk7CiAgICAgIHZhciBwYXJzZVRpbWUgPSBkMy50aW1lUGFyc2UoIiVZLSVtIik7CiAgICAgIHZhciBhcnIgPSBbXTsKICAgICAgdmFyIHBhdGggPSBkMy5saW5lKCkuY3VydmUoZDMuY3VydmVCYXNpcykueChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBfdGhpczQuc2NhbGUueChwYXJzZVRpbWUoZC5kKSk7CiAgICAgIH0pLnkoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gX3RoaXM0LnNjYWxlLnkoZC5yKTsKICAgICAgfSk7CiAgICAgIHJlc3VsdHMuZm9yRWFjaChmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgY29uc29sZS5sb2coImZvbyIpOwogICAgICAgIGFyci5wdXNoKHBhdGgocmVzdWx0LmRhdGEpKTsKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKGFycik7CiAgICAgIHJldHVybiBhcnI7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["vis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"vis\" ref=\"vis\">\n    {{JSON.stringify(queries)}}\n    <svg :width=\"width\" :height=\"height\">\n      <path v-for=\"(result,index) in results\" v-bind:key=\"index\" :d=\"result.lines\" />\n    </svg>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport * as d3 from 'd3'\nimport { bus } from '../main'\n\n\nexport default {\n  name: 'vis',\n\n  data() {\n    return {\n      width: 700,\n      height: 800,\n      results: [],\n      scale: undefined,\n      queries : [\n        {\n          metric: undefined,\n          location: undefined,\n          company: undefined,\n          //country: undefined,\n          //role: undefined,\n        }, {\n          metric: undefined,\n          location: undefined,\n          company: undefined,\n          //role: \"\",\n          //country: \"\",\n        }\n      ],\n    }\n  },\n\n  created () { //get initial set of queries from sidebar (preselected entries)\n    bus.$on('initial', (parameter) => { //listen on EventBus for changed queries\n      if(parameter.selector == \"metric\") { //change global queries if the metric was changed\n        this.queries.forEach(query => {\n          query.metric = parameter.key //assin new parameter\n        })\n      } else {\n        this.queries[parameter.index][parameter.selector] = parameter.key //or jut change parameter if it's not the metric\n      }\n   })\n   this.queries.forEach((query,i) => this.getData(query,i))\n },\n\nmounted () { //when mounted\n   let svg = d3.select(\"#vis svg\")\n\n   this.scale = this.getScales();\n   svg.append(\"g\").attr(\"transform\", \"translate(0,100)\").call(d3.axisBottom(this.scale.x).ticks(5))\n   svg.append(\"g\").call(d3.axisLeft(this.scale.y).ticks(5))\n   this.lines = this.update(this.results)\n\n\n\n\n   //start listening on eventbus for updated\n   bus.$on('query', (parameter) => {\n     this.queries[parameter.index][parameter.selector] = parameter.key //change query\n     this.lastIndex = [parameter.index,parameter.selector] //change index to trigger watch-function\n     this.getData(this.queries[parameter.index],parameter.index) //get data for updated query\n  })\n},\n\nmethods: {\n  getData: function(query,i) {\n    axios.post( \"http://localhost:8080/nokia/nokia-twin/comparison-api.php?\",query,\n      {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n    })\n    .then((response) => {\n      this.results[i] = {query: query, data: response.data, path: \"\"} //send response to this.result\n      console.log(results.length)\n    });\n  },\n\n  getScales: function() {\n    let parseTime = d3.timeParse(\"%Y-%m\");\n    const x = d3.scaleTime().range([0, 430]); //TODO: width\n    const y = d3.scaleLinear().range([210, 0]); //TODO: height\n    d3.axisLeft().scale(x);\n    d3.axisBottom().scale(y);\n\n\n\n  /*  let arr = []\n    let parseTime = d3.timeParse(\"%Y-%m\");\n    this.results.forEach(result => {\n      result.data.forEach(data =>\n        arr.push(data)\n      )\n    })*/\n\n\n\n    //x.domain(d3.extent(arr, d => parseTime(d.d)));\n    x.domain([parseTime(\"2000-01\"),parseTime(\"2020-12\")]);\n    //y.domain(d3.extent(arr, d => +d.r));\n    y.domain([0,5]);\n    return { x, y };\n  },\n\n  update: function(results) {\n\n    console.log(results)\n    console.log(results.length)\n    let parseTime = d3.timeParse(\"%Y-%m\");\n    let arr = []\n\n    const path = d3.line()\n    .curve(d3.curveBasis)\n     .x(d => this.scale.x(parseTime(d.d)))\n     .y(d => this.scale.y(d.r));\n\n     results.forEach(result => {\n       console.log(\"foo\")\n       arr.push(path(result.data))\n     })\n     console.log(arr)\n     return arr;\n  },\n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.lines path {\n  fill: none;\n  stroke: black\n}\n</style>\n"],"sourceRoot":"src/components"}]}