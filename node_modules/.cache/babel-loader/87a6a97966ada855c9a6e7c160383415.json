{"remainingRequest":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokia-twin/twin-dashboard/src/components/selector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/src/components/selector.vue","mtime":1594325357928},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHNlbGVjdG9yTGlzdCBmcm9tICcuL3NlbGVjdG9yTGlzdC52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgc2VsZWN0b3JMaXN0OiBzZWxlY3Rvckxpc3QKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB2aXNpYmxlOiB0cnVlLAogICAgICBhZGRlZDogW10sCiAgICAgIGlzT3BlbjogZmFsc2UKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZGlzcGxheWVkOiBmdW5jdGlvbiBkaXNwbGF5ZWQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gdGhpcy5saXN0SXRlbS5lbGVtZW50cy5maWx0ZXIoZnVuY3Rpb24gKHgsIGkpIHsKICAgICAgICByZXR1cm4gaSA8PSBfdGhpcy5jb3VudDsKICAgICAgfSkuY29uY2F0KHRoaXMuYWRkZWQpOwogICAgfQogIH0sCiAgbWV0aG9kczoge30sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LAogIHByb3BzOiB7CiAgICBsaXN0SXRlbTogT2JqZWN0LAogICAgY291bnQ6IE51bWJlciwKICAgIGNvbHVtbkNvdW50OiBOdW1iZXIKICB9Cn07"},{"version":3,"sources":["selector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,YAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA;AAHA,KAAA;AAKA,GAXA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AAAA;;AACA,aAAA,KAAA,QAAA,CAAA,QAAA,CACA,MADA,CACA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,IAAA,KAAA,CAAA,KAAA;AAAA,OADA,EAEA,MAFA,CAEA,KAAA,KAFA,CAAA;AAGA;AALA,GAbA;AAqBA,EAAA,OAAA,EAAA,EArBA;AAyBA,EAAA,OAzBA,qBAyBA,CACA,CA1BA;AA4BA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,MADA;AAEA,IAAA,KAAA,EAAA,MAFA;AAGA,IAAA,WAAA,EAAA;AAHA;AA5BA,CAAA","sourcesContent":["<template>\n  <li :class=\"['firstLevel',listItem.name]\">\n      <!--<b-button v-b-toggle.collapse-'\"foobar\"' variant=\"link\">-->\n      <b-button :aria-controls=\"'collapse-'+listItem.name.toLowerCase()\" @click=\"visible = !visible\">\n      {{ listItem.name }}\n      <b-icon icon=\"caret-down-fill\" style=\"height: 15px; padding-left: 10px\" aria-hidden=\"true\"></b-icon>\n    </b-button>\n    <b-collapse v-model=\"visible\" :id=\"'collapse-'+listItem.name.toLowerCase()\">\n      <div class=\"row elements\">\n        <!-- TODO: making this dependend on this.selected is flimsy and inconsistent. introduce a column counter when building addColumn-feature  -->\n          <selectorList\n            v-for=\"(n, index) in columnCount\"\n            v-bind:index=\"index\"\n            v-bind:key=\"index\"\n            v-bind:elements=\"displayed\"\n            v-bind:selector=\"listItem.name.toLowerCase()\"\n            v-bind:selected=\"listItem.selected[index]\" />\n      </div>\n      <!--<input\n        class=\"form-control form-control-sm\"\n        v-model=\"search\"\n        @input=\"onChange\"\n        type=\"text\"\n        placeholder=\"Find more\" />-->\n      <!--<button v-on:click=\"click\">add company</button>-->\n    </b-collapse>\n  </li>\n</template>\n\n<script>\nimport selectorList from './selectorList.vue'\n\nexport default {\n  components: {\n    selectorList\n  },\n\n  data() {\n    return {\n      visible: true,\n      added: [],\n      isOpen: false,\n    }\n  },\n\n  computed: {\n    displayed: function() {\n      return this.listItem.elements\n        .filter((x,i)=>i <= this.count)\n        .concat(this.added)\n    }\n  },\n\n  methods: {\n\n  },\n\n  mounted() {\n  },\n\n  props: {\n    listItem: Object,\n    count: Number,\n    columnCount: Number\n  }\n}\n</script>\n\n<style scoped>\nul {\n  margin: 0;\n  padding: 0;\n}\n\nli.Metric {\n  background-image: linear-gradient(-132deg, #BD10E0 0%, #50E3C2 96%);\nbackground-image: linear-gradient(135deg, #20C5A0 0%, #BD10E0 47%, #F5A623 100%);\n  border-bottom: 0 !important;\n}\n\nli.firstLevel {\n  font-size: 16px;\n  border-bottom: 1px solid darkgrey;\n  padding: 20px;\n  list-style: none;\n}\n\nbutton.btn {\n  color: white;\n  padding: 0;\n  background: none;\n  border: none;\n}\n</style>\n"],"sourceRoot":"src/components"}]}