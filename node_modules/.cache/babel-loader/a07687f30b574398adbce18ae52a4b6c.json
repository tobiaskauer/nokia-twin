{"remainingRequest":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/nokia-twin/twin-dashboard/src/components/results.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/src/components/results.vue","mtime":1593244929889},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/nokia-twin/twin-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgYnVzIH0gZnJvbSAnLi4vbWFpbic7CmltcG9ydCBjaGFydCBmcm9tICcuL2NoYXJ0LnZ1ZSc7CmltcG9ydCBoZWFkbGluZSBmcm9tICcuL2hlYWRsaW5lLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAncmVzdWx0cycsCiAgY29tcG9uZW50czogewogICAgY2hhcnQ6IGNoYXJ0LAogICAgaGVhZGxpbmU6IGhlYWRsaW5lCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVzdWx0czogW10sCiAgICAgIHF1ZXJpZXM6IFt7CiAgICAgICAgbWV0cmljOiB1bmRlZmluZWQsCiAgICAgICAgbG9jYXRpb246IHVuZGVmaW5lZCwKICAgICAgICBjb21wYW55OiB1bmRlZmluZWQsCiAgICAgICAgZW1wbG95ZWVfdGl0bGU6IHVuZGVmaW5lZCAvL2NvdW50cnk6IHVuZGVmaW5lZCwKCiAgICAgIH0sIHsKICAgICAgICBtZXRyaWM6IHVuZGVmaW5lZCwKICAgICAgICBsb2NhdGlvbjogdW5kZWZpbmVkLAogICAgICAgIGNvbXBhbnk6IHVuZGVmaW5lZCwKICAgICAgICBlbXBsb3llZV90aXRsZTogdW5kZWZpbmVkIC8vY291bnRyeTogIiIsCgogICAgICB9XQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIC8vZ2V0IGluaXRpYWwgc2V0IG9mIHF1ZXJpZXMgZnJvbSBzaWRlYmFyIChwcmVzZWxlY3RlZCBlbnRyaWVzKSAtLT4gZG9udAogICAgYnVzLiRvbignaW5pdGlhbCcsIGZ1bmN0aW9uIChwYXJhbWV0ZXIpIHsKICAgICAgX3RoaXMuc2V0UXVlcnkocGFyYW1ldGVyKTsKICAgIH0pOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIC8vd2hlbiBtb3VudGVkCiAgICB0aGlzLnF1ZXJpZXMuZm9yRWFjaChmdW5jdGlvbiAocXVlcnksIGkpIHsKICAgICAgaWYgKHF1ZXJ5Lm1ldHJpYykgX3RoaXMyLmdldERhdGEocXVlcnksIGkpOyAvL2lmIG1ldHJpYyAobWFuZGF0b3J5KSBpcyBzZXQsIGNoZWNrCiAgICAgIC8vVE9ETzogdGhpcyBzdGlsbCBjcmVhdGVzIHRvbyBtYW55IGRiIHJlcXVlc3RzIHdoZW4gaW5pdGlhbGl6ZWQKICAgIH0pOyAvL3N0YXJ0IGxpc3RlbmluZyBvbiBldmVudGJ1cyBmb3IgdXBkYXRlZCBxdWVyaWVzCgogICAgYnVzLiRvbigncXVlcnknLCBmdW5jdGlvbiAocGFyYW1ldGVyKSB7CiAgICAgIF90aGlzMi5zZXRRdWVyeShwYXJhbWV0ZXIpOyAvL3JldHVybnMgcHJvbWlzZQoKCiAgICAgIHZhciBpID0gcGFyYW1ldGVyLmluZGV4OwoKICAgICAgaWYgKHBhcmFtZXRlci5zZWxlY3RvciA9PSAibWV0cmljIikgewogICAgICAgIF90aGlzMi5xdWVyaWVzLmZvckVhY2goZnVuY3Rpb24gKHF1ZXJ5LCBpKSB7CiAgICAgICAgICAvL3RoaXMuJHNldCh0aGlzLnJlc3VsdHMsIGksIHRoaXMuZ2V0RGF0YShxdWVyeSkpCiAgICAgICAgICBfdGhpczIuZ2V0RGF0YShxdWVyeSwgaSk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgX3RoaXMyLmdldERhdGEoX3RoaXMyLnF1ZXJpZXNbaV0sIGkpOyAvL3RoaXMuJHNldCh0aGlzLnJlc3VsdHMsIGksIHRoaXMuZ2V0RGF0YSh0aGlzLnF1ZXJpZXNbaV0pKQoKICAgICAgfQogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXRRdWVyeTogZnVuY3Rpb24gc2V0UXVlcnkocGFyYW1ldGVyKSB7CiAgICAgIC8vVE9ETzogY3JlYXRlIG5ldwogICAgICBpZiAocGFyYW1ldGVyLnNlbGVjdG9yID09ICJtZXRyaWMiKSB7CiAgICAgICAgLy9jaGFuZ2UgZ2xvYmFsIHF1ZXJpZXMgaWYgdGhlIG1ldHJpYyB3YXMgY2hhbmdlZAogICAgICAgIHRoaXMucXVlcmllcy5mb3JFYWNoKGZ1bmN0aW9uIChxdWVyeSkgewogICAgICAgICAgcXVlcnkubWV0cmljID0gcGFyYW1ldGVyLmtleTsgLy9hc3NpbiBuZXcgcGFyYW1ldGVyCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5xdWVyaWVzW3BhcmFtZXRlci5pbmRleF1bcGFyYW1ldGVyLnNlbGVjdG9yXSA9IHBhcmFtZXRlci5rZXk7IC8vb3IganV0IGNoYW5nZSBwYXJhbWV0ZXIgaWYgaXQncyBub3QgdGhlIG1ldHJpYwogICAgICB9CiAgICB9LAogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YShxdWVyeSwgaSkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIC8vVE9ETzogY2hlY2sgaWYgbWV0cmljIGlzIHNldAogICAgICBxdWVyeS50eXBlID0gJ3Jlc3VsdCc7IC8vc2V0IHF1ZXJ5IGVuZCAocXVhc2kgZW5kcG9pbnQpIGZvciBhcGkucGhwCgogICAgICBheGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjgwODAvbm9raWEvbm9raWEtdHdpbi9jb21wYXJpc29uLWFwaS5waHA/IiwgcXVlcnksIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOCcKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMzLiRzZXQoX3RoaXMzLnJlc3VsdHMsIGksIHsKICAgICAgICAgIHF1ZXJ5OiBxdWVyeSwKICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLmRhdGEKICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0KICAgIC8qY2xpY2s6IGZ1bmN0aW9uKCkgewogICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeSh0aGlzLnJlc3VsdHMpKQogICAgfSovCgogIH0KfTs="},{"version":3,"sources":["results.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"col\" id=\"main\">\n    <!--<headline  :queries=\"queries\"/>-->\n    <chart :data=\"results\" />\n    <!--<button v-on:click=\"click\">check data</button>-->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { bus } from '../main'\nimport chart from './chart.vue'\nimport headline from './headline.vue'\n\nexport default {\n  name: 'results',\n\n  components: {\n    chart,\n    headline\n  },\n\n  data() {\n    return {\n      results: [],\n      queries : [\n        {\n          metric: undefined,\n          location: undefined,\n          company: undefined,\n          employee_title: undefined\n          //country: undefined,\n        }, {\n          metric: undefined,\n          location: undefined,\n          company: undefined,\n          employee_title: undefined,\n          //country: \"\",\n        }\n      ],\n    }\n  },\n\n  created () { //get initial set of queries from sidebar (preselected entries) --> dont\n    bus.$on('initial', (parameter) => {\n      this.setQuery(parameter)\n   })\n },\n\nmounted () { //when mounted\n  this.queries.forEach((query,i) => {\n    if(query.metric) this.getData(query,i) //if metric (mandatory) is set, check\n    //TODO: this still creates too many db requests when initialized\n  })\n\n   //start listening on eventbus for updated queries\n   bus.$on('query', (parameter) => {\n     this.setQuery(parameter)\n\n     //returns promise\n     let i = parameter.index\n     if(parameter.selector == \"metric\") {\n       this.queries.forEach((query,i) => {\n         //this.$set(this.results, i, this.getData(query))\n\n         this.getData(query,i)\n       })\n     } else {\n       this.getData(this.queries[i],i)\n       //this.$set(this.results, i, this.getData(this.queries[i]))\n\n     }\n  })\n},\n\nmethods: {\n  setQuery: function(parameter) {\n    //TODO: create new\n    if(parameter.selector == \"metric\") { //change global queries if the metric was changed\n      this.queries.forEach(query => {\n        query.metric = parameter.key //assin new parameter\n      })\n    } else {\n      this.queries[parameter.index][parameter.selector] = parameter.key //or jut change parameter if it's not the metric\n    }\n  },\n\n  getData: function(query,i) {\n    //TODO: check if metric is set\n    query.type='result' //set query end (quasi endpoint) for api.php\n    axios.post( \"http://localhost:8080/nokia/nokia-twin/comparison-api.php?\",query,\n      {headers: {'Content-Type': 'application/json;charset=UTF-8'}\n    })\n    .then((response) => {\n      this.$set(this.results, i, {query: query, data: response.data})\n    })\n    .catch(error => {\n      console.log(error)\n    });\n\n\n  },\n  /*click: function() {\n    console.log(JSON.stringify(this.results))\n  }*/\n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#main {\n  background-color: #F7F7F7;\n  }\nh1 {\n  margin-top: 25%\n}\n</style>\n"],"sourceRoot":"src/components"}]}